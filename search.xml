<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[WebServiceÊé•Âè£ÂºÄÂèë]]></title>
    <url>%2F2019%2F10%2F26%2FWebService%E6%8E%A5%E5%8F%A3%E5%BC%80%E5%8F%91%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÊúâ‰∏Ä‰∏™È°πÁõÆÂèØËÉΩÈúÄË¶ÅÁî®Âà∞WebServiceÊäÄÊúØÔºåÊèêÂâçÂ≠¶‰π†‰∏Ä‰∏ã„ÄÇ WebService WebServiceÊòØ‰∏ÄÁßçË∑®ÁºñÁ®ãËØ≠Ë®ÄÂíåË∑®Êìç‰ΩúÁ≥ªÁªüÂπ≥Âè∞ÁöÑËøúÁ®ãË∞ÉÁî®ÊäÄÊúØ„ÄÇ Áõ∏ÂÖ≥Ê¶ÇÂøµXML,SOAPÂíåWSDLÂ∞±ÊòØÊûÑÊàêWebServiceÂπ≥Âè∞ÁöÑ‰∏âÂ§ßÊäÄÊúØ„ÄÇ XMLÔºöÊâ©Â±ïÊÄßÊ†áËÆ∞ËØ≠Ë®Ä ÔºàExtensible Markup LanguageÔºâ Áî®‰∫é‰º†ËæìÊ†ºÂºèÂåñÁöÑÊï∞ÊçÆÔºåÊòØWebÊúçÂä°ÁöÑÂü∫Á°Ä„ÄÇ SOAPÔºöÁÆÄÂçïÂØπË±°ËÆøÈóÆÂçèËÆÆÔºàSimple Object Access ProtocolÔºåSOAPÔºâSOAP ÊòØÂü∫‰∫é XML ÁöÑÁÆÄÊòìÂçèËÆÆÔºåÂèØ‰ΩøÂ∫îÁî®Á®ãÂ∫èÂú® HTTP ‰πã‰∏äËøõË°å‰ø°ÊÅØ‰∫§Êç¢„ÄÇ SOAPÂçèËÆÆ = httpÂçèËÆÆ + XMLÊï∞ÊçÆÊ†ºÂºè XML Schema(XSD)Â∞±ÊòØ‰∏ìÈó®Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÁöÑ‰∏ÄÂ•óÊ†áÂáÜ„ÄÇÂÆÉÂÆö‰πâ‰∫Ü‰∏ÄÂ•óÊ†áÂáÜÁöÑÊï∞ÊçÆÁ±ªÂûãÔºåÂπ∂ÁªôÂá∫‰∫Ü‰∏ÄÁßçËØ≠Ë®ÄÊù•Êâ©Â±ïËøôÂ•óÊï∞ÊçÆÁ±ªÂûã„ÄÇWebServiceÂπ≥Âè∞Â∞±ÊòØÁî®XSDÊù•‰Ωú‰∏∫ÂÖ∂Êï∞ÊçÆÁ±ªÂûãÁ≥ªÁªüÁöÑ„ÄÇÂΩì‰Ω†Áî®ÊüêÁßçËØ≠Ë®Ä(Â¶ÇVB.NETÊàñC#)Êù•ÊûÑÈÄ†‰∏Ä‰∏™Web serviceÊó∂Ôºå‰∏∫‰∫ÜÁ¨¶ÂêàWebServiceÊ†áÂáÜÔºåÊâÄÊúâ‰Ω†‰ΩøÁî®ÁöÑÊï∞ÊçÆÁ±ªÂûãÈÉΩÂøÖÈ°ªË¢´ËΩ¨Êç¢‰∏∫XSDÁ±ªÂûã„ÄÇ‰Ω†Áî®ÁöÑÂ∑•ÂÖ∑ÂèØËÉΩÂ∑≤ÁªèËá™Âä®Â∏Æ‰Ω†ÂÆåÊàê‰∫ÜËøô‰∏™ËΩ¨Êç¢Ôºå‰ΩÜ‰Ω†ÂæàÂèØËÉΩ‰ºöÊ†πÊçÆ‰Ω†ÁöÑÈúÄË¶Å‰øÆÊîπ‰∏Ä‰∏ãËΩ¨Êç¢ËøáÁ®ã„ÄÇ WSDLÔºöÔºàÁΩëÁªúÊúçÂä°ÊèèËø∞ËØ≠Ë®ÄÔºåWeb Services Description LanguageÔºâWSDLÊòØ‰∏ÄÈó®Âü∫‰∫é XML ÁöÑËØ≠Ë®ÄÔºåÁî®‰∫éÊèèËø∞ Web Services ‰ª•ÂèäÂ¶Ç‰ΩïÂØπÂÆÉ‰ª¨ËøõË°åËÆøÈóÆ„ÄÇ Âú®idea‰∏≠Êñ∞Âª∫WebServicesÈ°πÁõÆÁºñÂÜôÊúçÂä°Á´Ø ÂàõÂª∫Êñ∞È°πÁõÆÔºåÈÄâÊã©WebServicesÔºåVersionÈÄâÊã©Axis„ÄÇ Âú®ËøôÈáåÔºåÊàë‰ª¨Êñ∞Âª∫‰∏Ä‰∏™ÊµãËØïÁ±ªÔºå‰∏∫‰∫ÜÂ±ïÁ§∫Â¶Ç‰ΩïÂ∞Ü‰∏Ä‰∏™Êñ∞Âª∫ÁöÑÁ±ªÊ∑ªÂä†ËøõÊù•„ÄÇ public class Test &#123; public String sayHelloWorldFrom(String from) &#123; String result = "Hello, world, from " + from; System.out.println(result); return result; &#125;&#125; ÊâìÂºÄweb-&gt;WEB-INF-&gt;server-config.wsddÊñá‰ª∂ÔºåÂ§çÂà∂Á≤òË¥¥‰∏Ä‰ªΩ‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºåÂ∞Ü‰∏ãÈù¢‰∏§‰∏™ÈÉ®ÂàÜÁöÑ‰ª£Á†ÅÊõ¥Êç¢‰∏∫Êñ∞Âª∫ÁöÑTestÁ±ªÂêçÁß∞„ÄÇ ËøôÊó∂ÔºåËøîÂõûTestÁ±ªÂèØ‰ª•ÂèëÁé∞TestÁ±ªÊóÅËæπÂ§ö‰∫Ü‰∏§‰∏™üåèÁöÑÊ†áÂøóÔºåËøôÊ†∑Â∞±ÈÖçÁΩÆÊàêÂäü‰∫Ü„ÄÇ ÁîüÊàêwsdlÊñá‰ª∂ÔºåÊñ∞ÁâàideaÈúÄË¶ÅÂÖà‰∏ãËΩΩWebServiceÊèí‰ª∂Ôºå‰πãÂêéTools-&gt;WebServices-&gt;Generate Wsdl Java Code‚Ä¶ ËøôÈáåÈúÄË¶ÅÂÖàÁºñËØë‰∏Ä‰∏ãÔºåÂê¶ÂàôÊä•ClassNotFoundExceptionÔºåËØ¥ÊòéÂàöÂàöÊñ∞Âª∫ÁöÑÁ±ªÊ≤°ÊúâÁîüÊàê.classÊñá‰ª∂„ÄÇ ÈÖçÁΩÆTomcatÔºàÁúÅÁï•Ôºâ„ÄÇ ÈÖçÁΩÆAtifactsÔºå‰∏ÄÂºÄÂßã‰ºöÊä•Áº∫Â∞ë‰æùËµñÁöÑÈîôÔºåFix‰∏Ä‰∏ãÂ∞±Â•Ω„ÄÇ ËøêË°å‰πãÂêéÔºåÈªòËÆ§Ë∑≥ËΩ¨Âà∞‰∫Ü‰∏ãÈù¢ÁöÑÈ°µÈù¢ÔºåÂè™ÈúÄË¶ÅÂú®URLÊúÄÂêéÂä†‰∏äservicesÂ∞±ÂèØ‰ª•„ÄÇ ÂçïÂáª‰∏äÈù¢Êüê‰∏™wsdlÂ∞±ÂèØ‰ª•Ë∑≥ËΩ¨Âà∞‰∏ãÈù¢ÁöÑÈ°µÈù¢„ÄÇ ÁºñÂÜôÂÆ¢Êà∑Á´Ø Êñ∞Âª∫È°πÁõÆÔºåÈÄâÊã©WebService ClientÔºåVersionÈÄâÊã©Apache Axis„ÄÇ ÂØºÂÖ•wsdlÊñá‰ª∂ÔºåÈÄâÊã©wsdlÂ≠òÊîæÁöÑ‰ΩçÁΩÆÔºåÁîüÊàê‰ª£Á†Å„ÄÇ ‰øÆÊîπËá™Âä®Áîü‰∫ßÁöÑÊµãËØïÁ±ª‰ª£Á†Å„ÄÇ package example;import test.TestServiceLocator;public class HelloWorldClient &#123; public static void main(String[] argv) &#123; try &#123; TestServiceLocator locator = new TestServiceLocator(); System.out.println(locator.getTest().sayHelloWorldFrom("ergo")); &#125; catch (javax.xml.rpc.ServiceException ex) &#123; ex.printStackTrace(); &#125; catch (java.rmi.RemoteException ex) &#123; ex.printStackTrace(); &#125; &#125;&#125; Âú®ÊéßÂà∂Âè∞ÂèØ‰ª•ÁúãÂà∞ËæìÂá∫ÁöÑÁªìÊûú„ÄÇ JavaË∞ÉÁî®WebServicÊé•Âè£ÁöÑÊñπÂºèËøòÊúâÂæàÂ§öÔºåËøôÈáåÂ∞±‰∏ç‰∏Ä‰∏Ä‰ªãÁªç‰∫Ü„ÄÇ WebService„ÄÅREST„ÄÅRESTfulÔºüÈ¶ñÂÖàÁÆÄÂçï‰ªãÁªç‰∏Ä‰∏ãËøô‰∏â‰∏™ÂêçËØçÔºåWebServiceÔºåÂü∫‰∫éSOAPÂçèËÆÆÁöÑÊúçÂä°Ôºå‰∏äÈù¢Â∑≤Áªè‰ªãÁªç‰∫ÜÔºõ RESTÔºö‰∏ÄÁßçËΩØ‰ª∂Êû∂ÊûÑÈ£éÊ†ºÔºå‰∏ÄÁßçÈù¢ÂêëËµÑÊ∫êÁöÑÊû∂ÊûÑÔºåÂÖ∂Ê†∏ÂøÉÊìç‰ΩúÂè™Êúâ GET,PUT,POST,DELETE„ÄÇ RESTfulÔºö ÈÅµÂÆà‰∫ÜrestÈ£éÊ†ºÁöÑwebÊúçÂä° ÔºåÊòØ‰∏Ä‰∏™ÂΩ¢ÂÆπËØç„ÄÇ RESTfulËØ¶Ëß£ SOAP WebServiceÂíåRestFul ÁöÑÂå∫Âà´]]></content>
      <categories>
        <category>WebÂºÄÂèë</category>
      </categories>
      <tags>
        <tag>WebService</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaÂ§öÁ∫øÁ®ã‚ÄîsynchonizedÂÖ≥ÈîÆÂ≠ó]]></title>
    <url>%2F2019%2F10%2F22%2FJava%E5%A4%9A%E7%BA%BF%E7%A8%8B%E2%80%94synchonized%E5%85%B3%E9%94%AE%E5%AD%97%2F</url>
    <content type="text"><![CDATA[Á∫øÁ®ãÂÆâÂÖ®‰∏éÂÖ±‰∫´ËµÑÊ∫êÂú®„ÄäJavaÂπ∂ÂèëÁºñÁ®ãÂÆûÊàò„Äã‰π¶‰∏≠ÂØπÁ∫øÁ®ãÂÆâÂÖ®ÁªôÂá∫‰∫Ü‰∏ãÈù¢ÁöÑÂÆö‰πâÔºö ÂΩìÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆÊüê‰∏™Á±ªÊó∂ÔºåËøô‰∏™Á±ªÂßãÁªàÈÉΩËÉΩË°®Áé∞Â§ÑÊ≠£Á°ÆÁöÑË°å‰∏∫ ‰∏ãÈù¢‰ªãÁªç‰∏Ä‰∏ãÂêÑÁßçÂèòÈáèÁöÑÁ∫øÁ®ãÂÆâÂÖ®ÊÄß„ÄÇ Âü∫Á°ÄÁ±ªÂûãÂ±ÄÈÉ®ÂèòÈáè Âü∫Á°ÄÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÂÇ®Â≠òÂú®Ê†àÂÜÖÂ≠ò‰∏≠Ôºå‰πüÂ∞±ÊòØËØ¥ÔºåÂ±ÄÈÉ®ÂèòÈáèÊ∞∏Ëøú‰∏ç‰ºöË¢´Â§ö‰∏™Á∫øÁ®ãÂÖ±‰∫´„ÄÇÊâÄ‰ª•ËØ¥ÊâÄÊúâÁöÑÂü∫Á°ÄÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÈÉΩÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ ÂºïÁî®Á±ªÂûãÂ±ÄÈÉ®ÂèòÈáè Áî±‰∫éÂºïÁî®Á±ªÂûãÂèòÈáèÁöÑÂ±ûÊÄßÈÉΩÂÇ®Â≠òÂú®Â†Ü‰∏≠Ôºå‰ΩÜÊòØÂú®‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÂà´ÁöÑÁ∫øÁ®ãÊòØËé∑Âèñ‰∏çÂà∞ËØ•ÂØπË±°ÁöÑÔºåÂè™Ë¶ÅËØ•ÂØπË±°‰∏çËÉΩÂ§üË¢´ÂÖ∂‰ªñÊñπÊ≥ïËé∑ÂèñÂà∞ÔºåÈÇ£‰πà‰ªñÂ∞±ÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ ÊàêÂëòÂèòÈáè Áî±‰∫é‰∏Ä‰∏™ÂØπË±°ÁöÑÊàêÂëòÊòØÂÇ®Â≠òÂú®Â†ÜÂÜÖÂ≠ò‰∏äÁöÑÔºåÂ¶ÇÊûúÊúâÂ§ö‰∏™Á∫øÁ®ãÂêåÊó∂Êõ¥Êñ∞Âêå‰∏Ä‰∏™ÂØπË±°ÁöÑÂêå‰∏Ä‰∏™ÊàêÂëòÂèòÈáèÔºåÈÇ£‰πàËøôÁßçÊÉÖÂÜµÂ∞±‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ ÈúÄË¶ÅËØ¥ÊòéÁöÑÊòØÔºåÂè™ÊúâÂ§ö‰∏™Á∫øÁ®ãÂêåÊó∂ËÆøÈóÆÂêå‰∏Ä‰∏™ËµÑÊ∫êËÄå‰∏îÂ§ö‰∏™Á∫øÁ®ãÈÉΩÂØπÊ≠§ËµÑÊ∫êËøõË°å‰∫Ü‰∫õÂÜôÊìç‰ΩúÔºåÊâç‰ºö‰∫ßÁîüÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÈóÆÈ¢òÔºåÂ§ö‰∏™Á∫øÁ®ãÂêåÊó∂ÂØπÂêå‰∏Ä‰∏™ËµÑÊ∫êËøõË°åËØªÊìç‰ΩúÊó∂‰∏ç‰ºö‰∫ßÁîüÁ∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢òÁöÑ„ÄÇ JavaÂêåÊ≠•ÂùóJavaÂêåÊ≠•ÂùóÔºàsynchronized blockÔºâÁî®Êù•ÂèØ‰ª•ÂÆûÁé∞ÂêåÊ≠•ÔºåÂèØ‰ª•ÈÄöËøáËøôÁßçÊñπÂºèÊù•ÊúâÊïàÂú∞ÈÅøÂÖçÁ∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢òÁöÑÂá∫Áé∞„ÄÇ synchronizedÂÖ≥ÈîÆÂ≠ó‰∏âÁßç‰ΩøÁî®ÊñπÂºè ‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ïÔºå‰∏∫ÂΩìÂâçÂÆû‰æãÂä†ÈîÅÔºåÈúÄË¶ÅÊãøÂà∞ÂΩìÂâçÂÆû‰æãÁöÑÈîÅ„ÄÇ ‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ïÔºå‰∏∫ÂΩìÂâçÁ±ªÂØπË±°Âä†ÈîÅÔºåÈúÄË¶ÅËé∑ÂæóÂΩìÂâçÁ±ªÂØπË±°ÁöÑÈîÅ„ÄÇ ‰øÆÈ•∞‰ª£Á†ÅÂùóÔºåÊåáÂÆöÂä†ÈîÅÂØπË±°„ÄÇ ‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ïÁúã‰∏Ä‰∏™‰æãÂ≠êÔºö public class Tester &#123; public static void main(String[] args) throws Exception &#123; Example example = new Example(); MyThread myThread = new MyThread(example); MyThread myThread1 = new MyThread(example); myThread.start(); myThread1.start(); &#125;&#125;class Example &#123; public synchronized void execute() throws InterruptedException &#123; for (int i = 0; i &lt; 10; i++) &#123; System.out.println(i); Thread.sleep(2000); &#125; &#125;&#125;class MyThread extends Thread &#123; private Example example; MyThread(Example example) &#123; this.example = example; &#125; @Override public void run() &#123; try &#123; example.execute(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125;&#125; Âú®‰∏äÈù¢ÁöÑ‰ª£Á†Å‰∏≠Ôºå‰∏∫executeÊñπÊ≥ïÂä†‰∏äsynchronizedÂÖ≥ÈîÆÂ≠ó‰πãÂêéÔºåÁ®ãÂ∫è‰ºöÂÖàËæìÂá∫09Ôºå‰πãÂêéÂÜçËæìÂá∫‰∏ÄÊ¨°09ÔºõÂ¶ÇÊûúÂéªÊéâsynchronizedÂÖ≥ÈîÆÂ≠ó‰πãÂêéÔºå‰∏§‰∏™Á∫øÁ®ã‰ºöÂêåÊó∂‰ºöÊâßË°åexecuteÊñπÊ≥ï„ÄÇ ËøôËØ¥ÊòéÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÊñπÊ≥ïÂä†‰∏ä‰∫ÜsynchronizedÂÖ≥ÈîÆÂ≠óÔºåÈÇ£‰πàËØ•ÊñπÊ≥ïÂ∞±ÊòØ‰∏Ä‰∏™ÂêåÊ≠•ÊñπÊ≥ïÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂØπË±°ÊúâsynchronizedÊñπÊ≥ïÔºåÊüê‰∏ÄÊó∂ÂàªÊüê‰∏™Á∫øÁ®ãÂ∑≤ÁªèËøõÂÖ•Âà∞‰∫ÜsynchronizedÊñπÊ≥ïÔºåÈÇ£‰πàÂú®ËØ•ÊñπÊ≥ïÊ≤°ÊúâÊâßË°åÂÆåÊØïÂâçÔºåÂÖ∂‰ªñÁ∫øÁ®ãÊòØÊó†Ê≥ïËÆøÈóÆËØ•ÂØπË±°ÁöÑ‰ªª‰ΩïsynchronizedÊñπÊ≥ïÁöÑ„ÄÇ Áé∞Âú®Â∞ÜÊØè‰∏™MyThreadÊûÑÈÄ†ÊñπÊ≥ïÁöÑÂèÇÊï∞Êîπ‰∏∫‰∏§‰∏™ÂØπË±°ÔºåÂÜçÊ¨°ËøêË°åÔºåÊ≠§Êó∂Âç≥‰ΩøÂä†‰∏ä‰∫ÜsynchronizedÂÖ≥ÈîÆÂ≠óÔºåexecuteÊñπÊ≥ï‰ªçÁÑ∂ÊòØÂêåÊó∂ÊâßË°åÁöÑ„ÄÇËøôÊòØÂõ†‰∏∫Java‰∏≠ÊØè‰∏™ÂØπË±°ÈÉΩÊúâ‰∏Ä‰∏™monitorÔºåÂΩì‰∏Ä‰∏™Á∫øÁ®ãÂéªËÆøÈóÆÊüê‰∏™ÂØπË±°ÁöÑsynchronizedÊñπÊ≥ïÊó∂Ôºå‰ºöÂ∞ÜËØ•ÂØπË±°‰∏äÈîÅÔºåËøôÊó∂Ôºå‰ªª‰Ωï‰∏Ä‰∏™Á∫øÁ®ãÈÉΩÊó†Ê≥ïÂéªËÆøÈóÆËØ•ÂØπË±°ÁöÑÂêåÊ≠•ÊñπÊ≥ï‰∫ÜÔºåÁõ¥Âà∞Ê≠§ÊñπÊ≥ïÊâßË°åÂÆåÊØïÊàñËÄÖÊäõÂá∫ÂºÇÂ∏∏ÔºåËØ•ÂØπË±°Â∞±‰ºöÊääÈîÅÈáäÊîæÔºåËøôÊó∂ÂÖ∂‰ªñÁöÑÁ∫øÁ®ãÊâçÂèØ‰ª•ËÆøÈóÆËØ•ÊñπÊ≥ï„ÄÇ MyThread myThread = new MyThread(new Example());MyThread myThread1 = new MyThread(new Example());myThread.start();myThread1.start(); ‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ïÂΩìsynchronized‰ΩúÁî®‰∫éÈùôÊÄÅÊñπÊ≥ïÊó∂ÔºåÁî±‰∫éÈùôÊÄÅÊñπÊ≥ïÂπ∂‰∏çÊòØÂ±û‰∫éÂØπË±°ÔºåËÄåÊòØÂ±û‰∫éÁ±ªÔºåÂÖ∂ÈîÅÊòØÂΩìÂâçÁ±ªÁöÑClassÂØπË±°ÈîÅÔºåËÄåËÆøÈóÆÈùûÈùôÊÄÅÁöÑsynchronizedÊñπÊ≥ïÊó∂ÔºåÊòØ‰ΩøÁî®ÁöÑÂΩìÂâçÂÆû‰æãÁöÑÂØπË±°ÈîÅ„ÄÇ Áúã‰∏Ä‰∏™‰æãÂ≠êÔºö public class Tester &#123; public static void main(String[] args) throws Exception &#123; MyThread myThread = new MyThread(new Example()); MyThread myThread1 = new MyThread(new Example()); myThread.start(); myThread1.start(); synchronized (Tester.class) &#123; &#125; &#125;&#125;class Example &#123; public synchronized static void execute() throws InterruptedException &#123; for (int i = 0; i &lt; 10; i++) &#123; System.out.println("exe" + i); Thread.sleep(2000); &#125; &#125;&#125;class MyThread extends Thread &#123; private Example example; MyThread(Example example) &#123; this.example = example; &#125; @Override public void run() &#123; try &#123; Example.execute(); &#125; catch (InterruptedException e) &#123; e.printSzaitackTrace(); &#125; &#125;&#125; Âú®synchronized‰øÆÈ•∞ÈùûÈùôÊÄÅÊñπÊ≥ïÊó∂ÔºåÂ¶ÇÊûúÂØπ‰∫é‰∏çÂêåÁöÑÂÆû‰æãÂØπË±°Êù•ËØ¥ÔºåÊãøÂà∞ÁöÑÈîÅ‰πüÊòØ‰∏çÂêåÁöÑÔºå‰ΩÜÊòØÂØπ‰∫éstaticÊñπÊ≥ïÊù•ËØ¥ÔºåÂç≥‰ΩøÂØπ‰∏çÂêåÁöÑÂÆû‰æãÊìç‰ΩúÔºå‰πüÊòØÊãøÂà∞ÁöÑ‰∏Ä‰∏™ClassÂØπË±°ÈîÅÔºåÊâÄ‰ª•ÂØπ‰∫é‰∏äÈù¢ÁöÑ‰ª£Á†Å‰∏≠ÔºåÂç≥‰ΩøÊúâ‰∏§‰∏™‰∏çÂêåÁöÑÁ∫øÁ®ã‰º†ÂÖ•‰∫Ü‰∏§‰∏™‰∏çÂêåÁöÑExampleÂØπË±°Ôºå‰ΩÜÊòØ‰∏§‰∏™Á∫øÁ®ã‰æùÁÑ∂‰ºö‰∫íÁõ∏Âà∂Á∫¶ÔºåÂøÖÈ°ªÂÖàÊâßË°åÂÆå‰∏Ä‰∏™ÂÜçÊâßË°åÂè¶Â§ñ‰∏Ä‰∏™„ÄÇ ‰øÆÈ•∞‰ª£Á†ÅÂùósynchronized‰ª£Á†ÅÂùóÂÜôÊ≥ïÔºö synchronized (object) &#123; &#125; Ë°®Á§∫ÂÜçÊüê‰∏™Á∫øÁ®ãÂú®ÊâßË°åÁöÑÊó∂ÂÄô‰ºöÂ∞ÜobjectÂØπË±°‰∏äÈîÅÔºàËØ•ÂØπË±°ÂèØ‰ª•‰ªªÊÑèÊåáÂÆöÔºâ„ÄÇ Âú®Á¨¨‰∏ÄÁßç‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ïÁªôÂá∫ÁöÑ‰ª£Á†Å‰∏≠ÔºåÂ∞ÜsynchronizedÊñπÊ≥ï‰øÆÊîπ‰∏∫synchronized‰ª£Á†ÅÂùó„ÄÇ public void execute() throws InterruptedException &#123; synchronized (this) &#123; for (int i = 0; i &lt; 10; i++) &#123; System.out.println("exe" + i); Thread.sleep(2000); &#125; &#125;&#125; ‰∏äÈù¢‰º†ÂÖ•ÁöÑÂØπË±°ÊòØExampleÂØπË±°Êú¨Ë∫´ÔºåËøôÊó∂ÔºåËØ•ÈîÅËµ∑Âà∞ÁöÑ‰ΩúÁî®ÂíåsynchronizedÂÆû‰æãÊñπÊ≥ïÁöÑ‰ΩúÁî®ÊòØÁõ∏ÂêåÁöÑ„ÄÇÂ¶ÇÊûúÊîπ‰∏∫synchronized(new Object())ÔºåËøôÊó∂Áî±‰∫éÈîÅÊòØÈíàÂØπObjectÂØπË±°ÁöÑ‰∏Ä‰∏™ÂÆû‰æãÁöÑÔºåÊâÄ‰ª•ÔºåËØ•ÈîÅÂ∞±‰∏ç‰ºöËµ∑Âà∞Áõ∏Â∫îÁöÑ‰ΩúÁî®‰∫Ü„ÄÇ Âú®Á¨¨‰∫åÁßç‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ïÁªôÂá∫ÁöÑ‰ª£Á†Å‰∏≠ÔºåÂêåÊ†∑Â∞ÜsynchronizedÈùôÊÄÅÊñπÊ≥ï‰øÆÊîπ‰∏∫synchronized‰ª£Á†ÅÂùó. public void execute() throws InterruptedException &#123; synchronized (Exmple.class) &#123; for (int i = 0; i &lt; 10; i++) &#123; System.out.println("exe" + i); Thread.sleep(2000); &#125; &#125;&#125; ‰∏äÈù¢‰º†ÂÖ•ÁöÑÂØπË±°ÊòØExampleÁöÑClassÂØπË±°ÔºåËøôÊó∂ÔºåËØ•ÈîÅËµ∑Âà∞ÁöÑ‰ΩúÁî®ÂíåsynchronizedÂÆû‰æãÊñπÊ≥ïÁöÑ‰ΩúÁî®ÊòØÁõ∏ÂêåÁöÑ„ÄÇÂêåÊ†∑ÁöÑÔºåÂ¶ÇÊûú‰º†ÂÖ•ÂÖ∂‰ªñÁöÑÂØπË±°ÔºåËØ•ÈîÅÂ∞±‰∏ç‰ºöËµ∑Âà∞Áõ∏Â∫îÁöÑ‰ΩúÁî®‰∫Ü„ÄÇ]]></content>
      <categories>
        <category>Java</category>
        <category>Âπ∂ÂèëÁºñÁ®ã</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Âπ∂Âèë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaÂ§öÁ∫øÁ®ã‚ÄîÂàõÂª∫Á∫øÁ®ãÁöÑÊñπÂºè]]></title>
    <url>%2F2019%2F10%2F21%2FJava%E5%A4%9A%E7%BA%BF%E7%A8%8B%E2%80%94%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E6%96%B9%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Â§öÁ∫øÁ®ãÁºñÁ®ãÁÆÄÂçï‰ªãÁªçÂá†ÁßçÂàõÂª∫Á∫øÁ®ãÁöÑÊñπÊ≥ï Á∫øÁ®ãÁöÑÂàõÂª∫ÊñπÊ≥ï ÁªßÊâøThreadÁ±ªÔºåÈáçÂÜôrunÊñπÊ≥ïÔºõ‰ΩøÁî®ÂåøÂêçÂÜÖÈÉ®Á±ª„ÄÇ //ÁªßÊâøThreadÁ±ªÔºåÈáçÂÜôrunÊñπÊ≥ïclass Thread0 extends Thread &#123; @Override public void run() &#123; super.run(); //do something... &#125;&#125;//ÂåøÂêçÂÜÖÈÉ®Á±ªThread thread0 = new Thread() &#123; @Override public void run() &#123; super.run(); //do something... &#125;&#125;;class Test &#123; Thread0 thread = new Thread0(); thread.start();&#125; ÂÆûÁé∞RunnableÊé•Âè£ÔºåÂÆûÁé∞runÊñπÊ≥ïÔºõ‰ΩøÁî®ÂåøÂêçÂÜÖÈÉ®Á±ª„ÄÇ //ÂÆûÁé∞RunnableÊé•Âè£ÔºåÂÆûÁé∞runÊñπÊ≥ïclass Thread0 implements Runnable &#123; @Override public void run() &#123; //do somrthing... &#125;&#125;//ÂåøÂêçÂÜÖÈÉ®Á±ªThread thread0 = new Thread(new Runnable() &#123; @Override public void run() &#123; //do something... &#125;&#125;);class Test &#123; Thread thread = new Thread(new Thread0()); thread.start();&#125; CallableÊé•Âè£Èô§‰∫Ü‰ª•‰∏ä‰∏§ÁßçÊñπÂºèÂàõÂª∫Á∫øÁ®ã‰ª•Â§ñÔºåËøòÂèØ‰ª•ÈÄöËøáÂÆûÁé∞CallableÊé•Âè£Âπ∂ÂÆûÁé∞callÊñπÊ≥ïÁöÑÊñπÂºèÂÆûÁé∞Â§öÁ∫øÁ®ãÔºåÂà©Áî®ËøôÁßçÊñπÂºèÔºåÊâßË°åÂÆå‰∏Ä‰∏™Á∫øÁ®ã‰πãÂêéÂèØ‰ª•ÈÄöËøá‰∏Ä‰∏™FutureTaskÂØπË±°Ëé∑ÂèñËøîÂõûÂÄºÔºåËÄåRunnableÊòØ‰∏çËÉΩËé∑ÂèñÂà∞ËøîÂõûÂÄºÁöÑ„ÄÇÂπ∂‰∏îcallÊñπÊ≥ïÂèØ‰ª•ÊäõÂá∫ÂºÇÂ∏∏ÔºåËÄårunÊñπÊ≥ï‰∏çÂèØ‰ª•„ÄÇ Áúã‰∏Ä‰∏™‰æãÂ≠êÔºö class CallableThread implements Callable&lt;String&gt; &#123; @Override public String call() throws Exception &#123; Thread.sleep(5000); return "haha"; &#125;&#125;public class Tester &#123; public static void main(String[] args) throws Exception &#123; CallableThread thread = new CallableThread(); //‰ΩøÁî®FutureTaskÁ±ªÊé•Êî∂CallableThreadËøîÂõûÁöÑÊï∞ÊçÆ FutureTask&lt;String&gt; task = new FutureTask&lt;&gt;(thread); new Thread(task).start(); System.out.println(task.get()); &#125;&#125; ÂÖ≥‰∫érunÂíåstartÊñπÊ≥ïËôΩÁÑ∂Êàë‰ª¨ÂÆö‰πâ‰∏Ä‰∏™Á∫øÁ®ãÊòØÈáçÂÜôÊàñËÄÖÂÆûÁé∞ÁöÑrunÊñπÊ≥ïÔºå‰ΩÜÊòØÂêØÂä®‰∏Ä‰∏™Á∫øÁ®ãÈúÄË¶ÅË∞ÉÁî®startÊñπÊ≥ïÔºåÂ¶ÇÊûúÁõ¥Êé•Ë∞ÉÁî®runÊñπÊ≥ïÔºåÂÖ∂ÂÆûË∑üË∞ÉÁî®‰∏Ä‰∏™Á±ªÁöÑÊôÆÈÄöÊñπÊ≥ïÊòØ‰∏ÄÊ†∑ÁöÑÔºårunÊñπÊ≥ïÁöÑÊâßË°åËøòÊòØÂ§ÑÂú®Ë∞ÉÁî®ËØ•ÊñπÊ≥ïÁöÑÁ∫øÁ®ã‰∏≠ÔºõË∞ÉÁî®startÊñπÊ≥ï‰ª•ÂêéÔºåËôöÊãüÊú∫Êâç‰ºöÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÁ∫øÁ®ãÂπ∂‰∏îË∞ÉÁî®runÊñπÊ≥ï„ÄÇÔºàÂêåÊ†∑Âú∞ÔºåÁªßÊâøCallableÊé•Âè£ÂÆûÁé∞Á∫øÁ®ã‰πü‰∏çÂèØ‰ª•Áõ¥Êé•Ë∞ÉÁî®callÊñπÊ≥ïÔºâ Thread thread0 = new Thread(() -&gt; System.out.println("Current thread: " + Thread.currentThread().getName()));thread0.start();thread0.run();----Output----Current thread: mainCurrent thread: Thread-0 Áúã‰∏äÈù¢ÁöÑ‰ª£Á†ÅÊÆµÔºåË∞ÉÁî®startÊñπÊ≥ï‰πãÂêéËæìÂá∫Êñ∞ÂàõÂª∫ÁöÑÁ∫øÁ®ãThread-0ÔºåË∞ÉÁî®runÊñπÊ≥ï‰πãÂêéËæìÂá∫ÁöÑÊòØ‰æùÁÑ∂ÊòØ‰∏ªÁ∫øÁ®ãmain„ÄÇ]]></content>
      <categories>
        <category>Java</category>
        <category>Âπ∂ÂèëÁºñÁ®ã</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Âπ∂Âèë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java‰∏≠ÁöÑÊ∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ù]]></title>
    <url>%2F2019%2F10%2F20%2FJava%E4%B8%AD%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%2F</url>
    <content type="text"><![CDATA[Âú®‰πãÂâçÂÅöÈ°πÁõÆÁöÑÊó∂ÂÄôÔºåÂêåÁªÑÁöÑ‰∫∫Âõ†‰∏∫Ê∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ùÁöÑÈóÆÈ¢ò‰∫ßÁîüËøáBUGÔºåÂΩìÊó∂‰∏çÊòØËá™Â∑±Ë¥üË¥£ÁöÑÈÉ®ÂàÜÔºåÊ≤°ÂØπËøô‰∏™ÈóÆÈ¢òÂÅöËøáÊ∑±ÂÖ•ÁöÑ‰∫ÜËß£Ôºå‰ªäÂ§©Ê∑±ÂÖ•Â≠¶‰π†‰∏Ä‰∏ãüëª Âú®‰ªãÁªçÊ∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ù‰πãÂâçÔºåÂÖàÊ∏©‰π†Âá†‰∏™Ê¶ÇÂøµ„ÄÇ Êï∞ÊçÆÁ±ªÂûãJava‰∏≠ÁöÑÊï∞ÊçÆÁ±ªÂûãÊúâ‰∏§ÁßçÔºö Âü∫Êú¨Á±ªÂûãÔºöÁ≤íÂ∫¶ÊúÄÂ∞èÁöÑÊï∞ÊçÆÁ±ªÂûã„ÄÇ‰∏ªË¶ÅÂåÖÊã¨ 4ÁßçÊï¥Êï∞Á±ªÂûãÔºöint„ÄÅshort„ÄÅlong„ÄÅbyte 2ÁßçÊµÆÁÇπÊï∞Á±ªÂûãÔºöfloat„ÄÅdouble 1ÁßçÂ≠óÁ¨¶Á±ªÂûãÔºöchar 1ÁßçÂ∏ÉÂ∞îÁ±ªÂûãÔºöboolean ÂºïÁî®Á±ªÂûãÔºö‰πüÂè´ÂÅöÂè•ÊüÑÔºåÂÆûÈôÖÂ≠òÊîæÁöÑÂ∫îËØ•ÊòØ‰∏Ä‰∏™Âú∞ÂùÄÔºåÂú∞ÂùÄÊåáÂêëÂÆûÈôÖÂÜÖÂÆπ„ÄÇ‰∏ªË¶ÅÂåÖÊã¨Ôºö Á±ª Êé•Âè£ Êï∞ÁªÑ Êï∞ÊçÆÂ¶Ç‰ΩïÂú®ÂÜÖÂ≠ò‰∏≠ÂÇ®Â≠òJVMÂú®Á®ãÂ∫èËøêË°åÁöÑÊó∂ÂÄô‰ºöÂ∞ÜÂÜÖÂ≠òÂàíÂàÜ‰∏∫Âõõ‰∏™Âå∫ÂüüÔºö Â†Ü Ê†à ÈùôÊÄÅÊñπÊ≥ïÂå∫ Â∏∏ÈáèÂå∫ ÈíàÂØπÁ¨¨‰∏ÄËäÇÁöÑÊï∞ÊçÆÁ±ªÂûãÔºå‰∏ãÈù¢ÂàÜ‰∏∫Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáè„ÄÅÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÊàêÂëòÂèòÈáè„ÄÅÂºïÁî®Á±ªÂûãÂèòÈáèÊù•ËÆ≤Ëß£„ÄÇ Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÁöÑÂÇ®Â≠òÂΩ¢ÂºèÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö ÊñπÊ≥ï‰∏≠ÁöÑÂü∫Êú¨Á±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÔºåÈÉΩÊòØÂÇ®Â≠òËôöÊãüÊú∫ÁöÑÂ†ÜÂÜÖÂ≠ò‰∏≠ÁöÑÔºåÊï∞ÊçÆÊú¨Ë∫´ÁöÑÂÄºÂ∞±ÊòØÂÇ®Â≠òÂú®Ê†àÂÜÖÂ≠ò‰∏≠„ÄÇÊØèÊ¨°Áªô‰∏Ä‰∏™Êñ∞ÂèòÈáèËµãÂÄºÁöÑÊó∂ÂÄôÔºåJVMÈ¶ñÂÖà‰ºöÊ£ÄÈ™åÂÜÖÂ≠ò‰∏≠ÊúâÊó†ËØ•Êï∞ÊçÆÔºåÂ¶ÇÊûúÊúâÔºåÂ∞±Áõ¥Êé•Â∞ÜËøô‰∏™ÂèòÈáèÊåáÂêëËØ•Êï∞ÊçÆÔºåÊ≤°ÊúâÁöÑËØùÂ∞±ÂºÄËæü‰∏Ä‰∏™Êñ∞ÁöÑÂÜÖÂ≠òÁ©∫Èó¥Â≠òÊîæÊï∞ÊçÆÔºåÁÑ∂ÂêéÂ∞ÜÂèòÈáèÊåáÂêëËØ•Êï∞ÊçÆ„ÄÇ int age = 50;int weight = 50;int height = 100; Áúã‰∏äÈù¢ÁöÑ‰ª£Á†ÅÊÆµÔºå‰∏â‰∏™ÂèòÈáèÈÉΩÊòØÊüê‰∏™ÊñπÊ≥ï‰∏≠ÁöÑÂ±ÄÈÉ®ÂèòÈáèÔºåÂΩìÊâßË°åint age = 50ÁöÑÊó∂ÂÄôÔºåÈ¶ñÂÖà‰ºöÂÆö‰πâÂèòÈáèÔºåÂ≠òÂÖ•ÂèòÈáèË°®‰∏≠ÔºåÁÑ∂ÂêéÂéªÊ†à‰∏≠ÊâæÊòØÂê¶Â≠òÂú®ÂÄº‰∏∫50ÁöÑÂÜÖÂÆπÔºåÂπ∂Â∞ÜageÂèòÈáèÊåáÂêë50„ÄÇÂΩìÊâßË°åint weight = 50Êó∂Ôºå‰ºöÂú®Ê†à‰∏≠ÊâæÂà∞50ÔºåÁõ¥Êé•Â∞ÜweightÊåáÂêë50„ÄÇÂΩìÊñπÊ≥ïÊâßË°åÂÆåÊØï‰ª•ÂêéÔºåÊñπÊ≥ïÂ±ÄÈÉ®ÂèòÈáè‰ºöË¢´JVMÁöÑÂûÉÂúæÂõûÊî∂Êú∫Âà∂ÂõûÊî∂„ÄÇ Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÊàêÂëòÂèòÈáèÂíåÂºïÁî®Á±ªÂûãÂèòÈáèÂâçÈù¢ÊèêÂà∞ÔºåÈô§‰∫ÜÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºåËøòÊúâ‰∏ÄÁßçÊòØÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÔºåÂØπ‰∫éÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÂ≠òÂÇ®ÂΩ¢ÂºèÂ¶Ç‰∏ãÂõæÊâÄÁ§∫„ÄÇ public class Student &#123; private String name; private int age; private int grade;&#125; ‰∏äÈù¢ÊòØ‰∏Ä‰∏™StudentÁ±ªÔºåÂ¶ÇÊûúÊàë‰ª¨‰∏çÈáçÂÜôtoStringÊñπÊ≥ïÔºåÁõ¥Êé•ËæìÂá∫‰∏Ä‰∏™ÂÆû‰æãÂåñÁöÑÂØπË±°ÁöÑËØùÔºå‰ºöÂæóÂà∞ËøôÊ†∑ÁöÑËæìÂá∫Ôºö Student@1b6d3586ÔºåÂÖ∂ÂÆûËøôÂ∞±ÊòØStudentÁ±ªÁöÑÂú∞ÂùÄ„ÄÇ ÊâÄ‰ª•ÔºåÂØπ‰∫éÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÊù•ËØ¥ÔºåÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÂè™ÂÇ®Â≠ò‰∏Ä‰∏™Âú®Â†ÜÂÜÖÂ≠ò‰∏≠ÁöÑÂú∞ÂùÄÔºåËÄåÊàêÂëòÂèòÈáèÂíåÊñπÊ≥ïË¢´ÂÇ®Â≠òÂú®Â†ÜÂÜÖÂ≠ò‰∏≠„ÄÇ Ê∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ùÊ¶ÇÂøµÂâçÈù¢ËØ¥‰∫ÜËøô‰πàÂ§öÔºåÁé∞Âú®Ê≠•ÂÖ•Ê≠£È¢òÔºåÈ¶ñÂÖà‰ªãÁªçÊ∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ùÁöÑÊ¶ÇÂøµ„ÄÇ Âú®Java‰∏≠‰ΩøÁî® ‚Äú=‚Äù ÂÅöËµãÂÄºÊìç‰ΩúÊó∂ÔºåÂØπ‰∫éÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºå‰ºöÁõ¥Êé•Â∞ÜÂÄºÁõ¥Êé•ËµãÂÄºÁªôÂèòÈáèÔºåËÄåÂØπ‰∫éÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÊù•ËØ¥Ôºå‰ºöÂ∞ÜÂÖ∂ÂºïÁî®ËµãÂÄºÁªôÂè¶‰∏Ä‰∏™ÂØπË±°„ÄÇ ÊµÖÊã∑Ë¥ù ÊµÖÊã∑Ë¥ù‰ºöÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°ÔºåËøô‰∏™ÂØπË±°Êã•ÊúâË¢´Êã∑Ë¥ùÂØπË±°ÁöÑ‰∏Ä‰∏™Á≤æÁ°ÆÁöÑÂâØÊú¨„ÄÇÂú®ËØ•Á±ªÁöÑÊàêÂëòÂèòÈáè‰∏≠ÔºåÂØπ‰∫éÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºåÊã∑Ë¥ùÁöÑÂ∞±ÊòØÂÖ∂ÂÄºÔºõÂØπ‰∫éÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÔºåÊã∑Ë¥ùÁöÑÂ∞±ÊòØÂÖ∂ÂÜÖÂ≠òÂú∞ÂùÄ„ÄÇÂ¶ÇÊûúÂÖ∂‰∏≠‰∏Ä‰∏™ÂØπË±°ÊîπÂèò‰∫ÜËøô‰∏™ÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÁöÑÂèòÈáèÁöÑÊï∞ÊçÆÔºåÁõ∏Â∫îÂú∞ÔºåÂè¶‰∏Ä‰∏™ÂØπË±°Âú∞ËØ•ÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÂú∞Êï∞ÊçÆ‰πü‰ºöÈöè‰πãÊîπÂèò„ÄÇ Â¶Ç‰∏ãÂõæÔºåStudentÁ±ªÊúâ‰∏§‰∏™ÊàêÂëòÂèòÈáèÔºå‰∏Ä‰∏™SchooleÁ±ªÊàêÂëòÂèòÈáèÔºå‰∏Ä‰∏™intÁ±ªÂûãÁöÑÊàêÂëòÂèòÈáèÔºåStudentÁ±ªÊúâ‰∏§‰∏§‰∏™ÂÆû‰æãÔºåstudent1ÊòØÂØπstudent0ÁöÑÊµÖÊã∑Ë¥ùÁöÑÂØπË±°„ÄÇÂØπ‰∫éÂºïÁî®Á±ªÂûãÁöÑSchoolÊù•ËØ¥Ôºå‰∏§‰∏™ÂØπË±°ÈÉΩÂÇ®Â≠òÁöÑÊòØSchoolÂØπË±°ÁöÑÂú∞ÂùÄÔºåÊâÄ‰ª•ËØ¥ÔºåÂ¶ÇÊûúÊúâÂÖ∂‰∏≠‰∏Ä‰∏™ÂØπË±°ÁöÑSchoolÂØπË±°ÁöÑÂÜÖÂÆπÂèëÁîü‰∫ÜÊîπÂèòÔºåÂè¶‰∏Ä‰∏™ÂØπË±°‰πü‰ºöÂèëÁîüÊîπÂèòÔºõÂØπ‰∫éÂü∫Êú¨Á±ªÂûãÁöÑÊàêÂëòÂèòÈáèÊù•ËØ¥Ôºå‰∏§‰∏™ÂØπË±°ÈÉΩÊòØÁõ¥Êé•ÂÇ®Â≠òÁöÑageÁöÑÂÄºÔºåÂèåÊñπ‰∫í‰∏çÂπ≤Ê∂â„ÄÇ Ê∑±Êã∑Ë¥ù Ê∑±Êã∑Ë¥ù‰∏ç‰ªÖ‰ºö‰∏∫Êã∑Ë¥ùÊñ∞Âª∫ÂØπË±°Ôºå‰πü‰ºöÂØπËØ•ÂØπË±°‰∏≠‰ªª‰ΩïÁöÑÂºïÁî®Á±ªÂûãÂèòÈáèÂª∫Á´ãÊñ∞ÁöÑÂØπË±°ÔºåËøôÊ†∑ÔºåÊã∑Ë¥ùÂØπË±°ÂíåÂéüÂØπË±°Â∞±ÊòØ‰∏§‰∏™ÂÆåÂÖ®Áõ∏ÂêåÁöÑÂØπË±°Ôºå‰∏§ËÄÖÂêÑËá™ÁöÑÊàêÂëòÂèòÈáè‰πü‰∫í‰∏çÂèóÂΩ±Âìç‰∫Ü„ÄÇ ÂÆûÁé∞ÊµÖÊã∑Ë¥ùÂÖàÁúã‰∏Ä‰∏™‰æãÂ≠êÔºà‰∏çÊòØÊµÖÊã∑Ë¥ùÔºâ„ÄÇ public class Tester &#123; public static void main(String[] args) &#123; int age = 10; int age1 = 20; String name = "aaa"; String name1 = "bbb"; Student student = new Student(); student.setAge(age); student.setName(name); Student student1 = student; student.setAge(age1); student.setName(name1); System.out.println(student); System.out.println(student1); &#125;&#125;----Output----Student&#123;age=20, name='bbb'&#125;Student&#123;age=20, name='bbb'&#125; ‰∏äÈù¢‰ª£Á†ÅÁõ¥Êé•‰ΩøÁî®‰∫Ü ‚Äú=‚Äù ÂØπÂØπË±°ËøõË°åÊã∑Ë¥ùÔºåÂèëÁé∞ÔºåÊó†ËÆ∫ÊòØÂü∫Êú¨Á±ªÂûãËøòÊòØÂºïÁî®Á±ªÂûãÁöÑÊï∞ÊçÆÔºåÂè™Ë¶ÅÂÖ∂‰∏≠‰∏Ä‰∏™ÂØπË±°ÁöÑÂÄºË¢´ÊîπÂèòÔºåÂè¶‰∏Ä‰∏™ÂØπË±°ÁöÑÊï∞ÊçÆ‰πüÈöè‰πãÊîπÂèò„ÄÇ ÂÖ∂ÂÆûStudent student1 = student;Ëøô‰∏ÄÂè•‰ª£Á†ÅÔºåÁõ∏ÂΩì‰∫éÂè™ÊòØÂ∞ÜstudentÁöÑÂú∞ÂùÄËµãÂÄºÁªô‰∫Üstudent1Ôºå‰∏§‰∏™ÂØπË±°ÊåáÂêë‰∏Ä‰∏™Âú∞ÂùÄÔºåÊâÄÊúâÊï∞ÊçÆÈÉΩÊòØ‰∏ÄËµ∑ÂÖ±‰∫´ÁöÑ„ÄÇ ËÄåÂÆûÁé∞ÊµÖÊã∑Ë¥ù‰πãÂêéÔºåÂàõÂª∫ÁöÑÊñ∞ÂØπË±°‰ºöÂçïÁã¨ÂºÄËæü‰∏Ä‰∏™ÂÜÖÂ≠òÁ©∫Èó¥ÊúâËá™Â∑±ÁöÑÂú∞ÂùÄÔºåËøôÊ†∑ÂØπ‰∫éÂü∫Êú¨Á±ªÂûãÁöÑÊï∞ÊçÆÊù•ËØ¥ÔºåÊØè‰∏™ÂØπË±°ÈÉΩÊúâËá™Â∑±ÁöÑÊï∞ÊçÆÔºåËÄåÂØπ‰∫éÂºïÁî®Á±ªÂûãÁöÑÊï∞ÊçÆÊù•ËØ¥ÔºåÊñ∞ÂØπË±°ÊòØÊã∑Ë¥ùÁöÑÂºïÁî®Á±ªÂûãÁöÑÂú∞ÂùÄÔºåÊâÄ‰ª•‰∏§‰∏™ÂØπË±°ÊòØÂÖ±‰∫´ËØ•ÊàêÂëòÂèòÈáèÁöÑ„ÄÇ public class School implements Cloneable &#123; String name; public School(String name) &#123; this.name = name; &#125; ... @Override public String toString() &#123; return "School&#123;" + "name='" + name + '\'' + '&#125;'; &#125;&#125; public class Student implements Cloneable&#123; private int age; private School school; public Student(int age, School school) &#123; this.age = age; this.school = school; &#125; ... @Override public String toString() &#123; return "Student&#123;" + "age=" + age + ", school=" + school + '&#125;'; &#125; @Override protected Object clone() throws CloneNotSupportedException &#123; return super.clone(); &#125;&#125; public class Tester &#123; public static void main(String[] args) throws CloneNotSupportedException &#123; Student student = new Student(10, new School("QUST")); Student student1 = (Student) student.clone(); student.setAge(20); student.getSchool().setName("THU"); System.out.println(student); System.out.println(student1); &#125;&#125;----Output----Student&#123;age=20, school=School&#123;name='THU'&#125;&#125;Student&#123;age=10, school=School&#123;name='THU'&#125;&#125; ‰ª•‰∏äÂ∞±ÊòØ‰∏Ä‰∏™ÂÆûÁé∞ÊµÖÊã∑Ë¥ùÁöÑ‰æãÂ≠êÔºåÈ¶ñÂÖàÔºåÈúÄË¶ÅÊã∑Ë¥ùÁöÑÁ±ªË¶ÅÂÆûÁé∞CloneableÊé•Âè£ÔºàÊ≠§Êé•Âè£ÊòØ‰∏™Ê†áËØÜÊÄßÊé•Âè£ÔºåÊé•Âè£ÂÜÖÊó†‰ªª‰ΩïÊñπÊ≥ïÔºâÔºåÈáçÂÜôcloneÊñπÊ≥ïÔºåÂú®Êã∑Ë¥ùÂØπË±°ÁöÑÊó∂ÂÄôÔºå‰ΩøÁî®Student student = (Student) student.clone()ÔºåËøôÊ†∑Â∞±ÂÆûÁé∞‰∫ÜÊµÖÊã∑Ë¥ù„ÄÇ‰ªéÊµãËØïÁ±ªÁöÑËæìÂá∫ÂèØ‰ª•ÁúãÂá∫Êù•Ôºå‰øÆÊîπÂéüÂØπË±°ÁöÑÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÊàêÂëòÂèòÈáèÊó∂ÔºåÊã∑Ë¥ùÂØπË±°Âπ∂Ê≤°ÊúâÊî∂Âà∞ÂΩ±ÂìçÔºåËÄå‰øÆÊîπÂéüÂØπË±°ÂºïÁî®Á±ªÂûãÊàêÂëòÂèòÈáèSchoolÁöÑÂ±ûÊÄßÊó∂ÔºåÊã∑Ë¥ùÁ±ªÂûã‰πüÂèóÂà∞‰∫ÜÂΩ±Âìç„ÄÇ ÂÆûÁé∞Ê∑±Êã∑Ë¥ùpublic class School implements Cloneable&#123; String name; public School(String name) &#123; this.name = name; &#125; @Override public String toString() &#123; return "School&#123;" + "name='" + name + '\'' + '&#125;'; &#125; @Override protected Object clone() throws CloneNotSupportedException &#123; return super.clone(); &#125;&#125; public class Student implements Cloneable&#123; private int age; private School school; public Student(int age, School school) &#123; this.age = age; this.school = school; &#125; @Override public String toString() &#123; return "Student&#123;" + "age=" + age + ", school=" + school + '&#125;'; &#125; @Override protected Object clone() throws CloneNotSupportedException &#123; Student student = (Student) super.clone(); student.school = (School) this.school.clone(); return student; &#125;&#125; public class Tester &#123; public static void main(String[] args) throws CloneNotSupportedException &#123; Student student = new Student(10, new School("QUST")); Student student1 = (Student) student.clone(); student.setAge(20); student.getSchool().setName("THU"); System.out.println(student); System.out.println(student1); &#125;&#125;----Output----Student&#123;age=20, school=School&#123;name='THU'&#125;&#125;Student&#123;age=10, school=School&#123;name='QUST'&#125;&#125; ÂÆûÁé∞Ê∑±Êã∑Ë¥ùÁöÑÊñπÊ≥ïÂ∞±ÊòØÂ∞ÜÁ±ª‰∏≠ÁöÑÂºïÁî®Á±ªÂûãÂèòÈáè‰πüËøõË°åÊã∑Ë¥ùÔºåÂºïÁî®Á±ªÂûãÊâÄÂú®ÁöÑÁ±ªÂÆûÁé∞CloneableÊé•Âè£ÔºåÈáçÂÜôcloneÊñπÊ≥ï„ÄÇËøôÊ†∑Â∞±ÂèØ‰ª•ÂÆûÁé∞Ê∑±Êã∑Ë¥ù‰∫Ü„ÄÇ ËøòÊúâ‰∏ÄÁßçÂÆûÁé∞Ê∑±Êã∑Ë¥ùÁöÑÊñπÂºèÔºåÂ∞±ÊòØÈÄöËøáÂ∫èÂàóÂåñÂÆûÁé∞ÂèØ‰ª•Êü•ÁúãJavaÂ∫èÂàóÂåñ„ÄÇ ÊÄªÁªì ÈúÄË¶ÅÊã∑Ë¥ùÂØπË±°ÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂØπË±°ÂÜÖÈÉ®Êï∞ÊçÆÁ±ªÂûãÂè™ÊúâÂü∫Êú¨Á±ªÂûãÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•‰ΩøÁî®ÊµÖÊã∑Ë¥ùÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂØπË±°ÂÜÖÈÉ®ËøòÊúâÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÔºåÂ∞±ÈúÄË¶Å‰ΩøÁî®Ê∑±Êã∑Ë¥ù„ÄÇ ËôΩÁÑ∂Ê∑±Êã∑Ë¥ùÂíåÊµÖÊã∑Ë¥ùÂèØËÉΩÁî®Âà∞ÁöÑ‰∏ç‰ºöÂæàÂ§öÔºå‰ΩÜÊòØÂØπ‰∫éÁêÜËß£JVMÂÜÖÈÉ®ÂÜÖÂ≠òËøòÊòØÂæàÊúâÂ∏ÆÂä©ÁöÑüëÖ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaÂÜÖÈÉ®Á±ª]]></title>
    <url>%2F2019%2F10%2F19%2FJava%E5%86%85%E9%83%A8%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[ÂÜÖÈÉ®Á±ªÊâÄË∞ìÂÜÖÈÉ®Á±ªÂ∞±ÊòØÂú®‰∏Ä‰∏™Á±ªÁöÑÂÜÖÈÉ®ÂÜçÂÆö‰πâ‰∏Ä‰∏™Á±ªÔºå‰πãÂâçËá™Â∑±ÂÜô‰ª£Á†ÅÁöÑÊó∂ÂÄô‰∏ÄÁõ¥‰πüÊ≤°Áî®ËøáËøôÁßçÊñπÂºèÔºåÁ≥ªÁªüÂú∞Â≠¶‰π†‰∏Ä‰∏ãÂÜÖÈÉ®Á±ª„ÄÇ /** * @paragram: InnerClassDemo * @description: ÂÜÖÈÉ®Á±ª * @auhor: liuergo * @date: 2019-10-19 16:30 */public class OuterClass&#123; private String name; private int age; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; class InnerClass&#123; public InnerClass ()&#123; name = "Jack"; age = 20; &#125; &#125;&#125; ‰∏äÈù¢Â∞±ÊòØÂÜÖÈÉ®Á±ªÁöÑ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠ê„ÄÇ ‰∏∫‰ªÄ‰πàË¶Å‰ΩøÁî®ÂÜÖÈÉ®Á±ª ‰ΩøÁî®ÂÜÖÈÉ®Á±ªÊúÄÂê∏Âºï‰∫∫ÁöÑÂéüÂõ†ÊòØÔºöÊØè‰∏™ÂÜÖÈÉ®Á±ªÈÉΩËÉΩÁã¨Á´ãÂú∞ÁªßÊâø‰∏Ä‰∏™ÔºàÊé•Âè£ÁöÑÔºâÂÆûÁé∞ÔºåÊâÄ‰ª•Êó†ËÆ∫Â§ñÂõ¥Á±ªÊòØÂê¶Â∑≤ÁªèÁªßÊâø‰∫ÜÊüê‰∏™ÔºàÊé•Âè£ÁöÑÔºâÂÆûÁé∞ÔºåÂØπ‰∫éÂÜÖÈÉ®Á±ªÈÉΩÊ≤°ÊúâÂΩ±Âìç„ÄÇ ‰∏äÈù¢ÊòØ„ÄäThinking in Java„Äã‰∏≠ÁöÑ‰∏ÄÂè•ËØùÔºåÊàë‰ª¨Áü•ÈÅìÔºåJava‰∏≠ÊòØÊ≤°ÊúâÂ§öÁªßÊâøÁöÑÔºåÊâÄ‰ª•ÊâçÂá∫Áé∞‰∫ÜÊé•Âè£Êù•Ëß£ÂÜ≥JavaÂ§öÁªßÊâøÁöÑÈóÆÈ¢òÔºå‰ΩÜÊòØÂ¶ÇÊûú‰ΩøÁî®‰∫ÜÂÜÖÈÉ®Á±ªÔºåÂ∞±ÂèØ‰ª•‰ΩøÊàë‰ª¨ÁöÑÁ±ªÁªßÊâøÂ§ö‰∏™Á±ª„ÄÇ ÊàêÂëòÂÜÖÈÉ®Á±ªÊúÄÊôÆÈÄöÁöÑÂÜÖÈÉ®Á±ªÔºåÂ∞ÜÂÜÖÈÉ®Á±ª‰Ωú‰∏∫Â§ñÈÉ®Á±ªÁöÑ‰∏Ä‰∏™ÊàêÂëòÔºåË∑üÊàêÂëòÂèòÈáèÂêÑÁßçÊñπÊ≥ïÊòØÂπ∂ÂàóÁöÑ„ÄÇ public class OuterClass&#123; private String name; private int age; public class InnerClass&#123; public InnerClass ()&#123; name = "Jack"; age = 20; &#125; &#125; public static void main(String[] args) &#123; OuterClass outerClass = new OuterClass(); OuterClass.InnerClass innerClass = outerClass.new InnerClass(); &#125;&#125; ÂÆû‰æãÂåñ‰∏Ä‰∏™ÂÜÖÈÉ®Á±ªÈúÄË¶Å‰ΩøÁî®Â§ñÈÉ®Á±ªÁöÑÂØπË±°.newÊù•ÂàõÂª∫ÂÜÖÈÉ®Á±ªÔºåÂú®ÂÜÖÈÉ®Á±ª‰∏≠ÔºåÊòØÂèØ‰ª•Èöè‰æøËÆøÈóÆÂ§ñÈÉ®Á±ªÁöÑÊàêÂëòÂèòÈáèÁöÑ;Â§ñÈÉ®Á±ªÊòØ‰∏çÂèØ‰ª•Èöè‰æøËÆøÈóÆÂÜÖÈÉ®Á±ªÁöÑ„ÄÇ Â±ÄÈÉ®ÂÜÖÈÉ®Á±ªÂú®ÊñπÊ≥ï‰∏≠ÂÆö‰πâÁöÑÂÜÖÈÉ®Á±ªÔºåËøôÊó∂ÁöÑÂÜÖÈÉ®Á±ªÂ∞±‰∏çÂ±û‰∫éÂ§ñÈÉ®Á±ªÁöÑÊàêÂëò‰∫ÜÔºåÂ±ÄÈÉ®ÂÜÖÈÉ®Á±ªÂèØ‰ª•ËÆøÈóÆÂΩìÂâç‰ª£Á†ÅÂùó‰∏≠ÁöÑfinalÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑÂ±ÄÈÉ®ÂèòÈáè‰ª•ÂèäÂ§ñÈÉ®Á±ªÁöÑÊàêÂëòÂèòÈáè„ÄÇ public class OuterClass&#123; private String name; private int age; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; public void function() &#123; final int i = 0; class InnerClass &#123; private String innerName; void InnerFun() &#123; System.out.println(name); //Áõ¥Êé•ËÆøÈóÆÂ§ñÈÉ®Á±ªÁöÑÂèòÈáè System.out.println(i); //ËÆøÈóÆfinalÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáè System.out.println(this.innerName); //‰ΩøÁî®this.ÊàêÂëòÂèòÈáèËÆøÈóÆÁöÑÊòØÂÜÖÈÉ®Á±ªÁöÑÊàêÂëòÂèòÈáè System.out.println(OuterClass.this.name); //‰ΩøÁî®Â§ñÈÉ®Á±ªÂêç.this.ÊàêÂëòÂèòÈáèÁöÑÊñπÂºèËÆøÈóÆÊàêÂëòÂèòÈáè &#125; &#125; &#125;&#125; ÈùôÊÄÅÂÜÖÈÉ®Á±ªÂú®staticÂÖ≥ÈîÆÂ≠ó‰∏ÄËäÇ‰∏≠ÔºåÊèêÂà∞staticÂÖ≥ÈîÆÂ≠óÂèØ‰ª•‰øÆÈ•∞ÂèòÈáè„ÄÅÊñπÊ≥ï„ÄÅ‰ª£Á†ÅÂùóÔºåÂÖ∂ÂÆûstaticËøòÂèØ‰ª•‰øÆÈ•∞ÂÜÖÈÉ®Á±ªÔºåÂú®ÈùôÊÄÅÂÜÖÈÉ®Á±ª‰∏≠ÔºåÊòØ‰∏ç‰øùÁïôÂØπÂ§ñÈÉ®Á±ªÁöÑÂºïÁî®ÁöÑÔºåËøôÂ∞±ÊÑèÂë≥ÁùÄÔºåÈùôÊÄÅÂÜÖÈÉ®Á±ªÁöÑÂàõÂª∫‰∏çÈúÄË¶Å‰æùËµñ‰∫éÂ§ñÈÉ®Á±ª„ÄÇËøôÊ†∑ÔºåÈùôÊÄÅÂÜÖÈÉ®Á±ª‰πüÂ∞±Âè™ËÉΩËÆøÈóÆÈùôÊÄÅÂèòÈáèÂíåÈùôÊÄÅÊñπÊ≥ï„ÄÇÂ§ñÈÉ®Á±ªÂíåÂÜÖÈÉ®Á±ªÂÖ∂ÂÆûÊòØÊ≤°ÊúâÂÖ≥ËÅîÁöÑ„ÄÇ public class OuterClass&#123; private String name; private int age; static int num = 0; static class InnerClass&#123; private String innerName; public InnerClass ()&#123; System.out.println(num); //Âè™ËÉΩËÆøÈóÆstaticÂèòÈáè &#125; &#125; public static void main(String[] args) &#123; OuterClass outerClass = new OuterClass(); InnerClass innerClass = new InnerClass(); //ÂàõÂª∫ÂÆû‰æã‰∏ç‰æùËµñÂ§ñÈÉ®Á±ª &#125;&#125; ÂåøÂêçÂÜÖÈÉ®Á±ª ÂåøÂêçÂÜÖÈÉ®Á±ªËøô‰∏ÄËØ≠Ê≥ïÈÄÇÁî®‰∫éÂàõÂª∫‰∏ÄÊ¨°ÊÄß‰ΩøÁî®ÁöÑÁ±ª„ÄÇ Âú®AndroidÁºñÁ®ã‰∏≠ÔºåÁªèÂ∏∏‰ºöÁî®Âà∞ÁÇπÂáª‰∫ã‰ª∂ÔºåËøôÂ∞±ÊòØ‰∏Ä‰∏™ÂåøÂêçÂÜÖÈÉ®Á±ªÁöÑ‰æãÂ≠ê„ÄÇ btnClick.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; //do something &#125;&#125;); ÂèØ‰ª•ÁúãÂà∞ÔºåÂú®‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠Ôºånew‰∫Ü‰∏Ä‰∏™View.OnClickListenerÂØπË±°ÔºåÁÑ∂ËÄåËøô‰∏™ÂØπË±°ÊòØÊ≤°ÊúâÂêçÂ≠óÁöÑÔºåËøôÂ∞±ÊòØÂåøÂêçÂÜÖÈÉ®Á±ªÁöÑÁâπÁÇπ„ÄÇ ÂÆö‰πâÂåøÂêçÂÜÖÈÉ®Á±ª‰∏ãÈù¢ÊòØÂÆòÊñπÊñáÊ°£‰∏≠ÁªôÂá∫ÁöÑ‰∏Ä‰∏™ÂåøÂêçÂÜÖÈÉ®Á±ªÁöÑ‰æãÂ≠êÔºö public class HelloWorldAnonymousClasses &#123; interface HelloWorld &#123; public void greet(); public void greetSomeone(String someone); &#125; public void sayHello() &#123; //ÂÆûÁé∞HelloWorldÊé•Âè£ÁöÑÂÜÖÈÉ®Á±ª class EnglishGreeting implements HelloWorld &#123; String name = "world"; public void greet() &#123; greetSomeone("world"); &#125; public void greetSomeone(String someone) &#123; name = someone; System.out.println("Hello " + name); &#125; &#125; HelloWorld englishGreeting = new EnglishGreeting(); //ÂåøÂêçÁ±ªÂÆûÁé∞HelloWorldÊé•Âè£ HelloWorld frenchGreeting = new HelloWorld() &#123; String name = "tout le monde"; public void greet() &#123; greetSomeone("tout le monde"); &#125; public void greetSomeone(String someone) &#123; name = someone; System.out.println("Salut " + name); &#125; &#125;; //ÂåøÂêçÁ±ªÂÆûÁé∞HelloWorldÊé•Âè£ HelloWorld spanishGreeting = new HelloWorld() &#123; String name = "mundo"; public void greet() &#123; greetSomeone("mundo"); &#125; public void greetSomeone(String someone) &#123; name = someone; System.out.println("Hola, " + name); &#125; &#125;; englishGreeting.greet(); frenchGreeting.greetSomeone("Fred"); spanishGreeting.greet(); &#125; public static void main(String... args) &#123; HelloWorldAnonymousClasses myApp = new HelloWorldAnonymousClasses(); myApp.sayHello(); &#125; &#125; ‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠Ôºå‰ΩøÁî®ÂÆûÁé∞HelloWorldÊé•Âè£ÁöÑÊñπÂºèÊù•ÂÆö‰πâEnglishGreetingÁ±ªÔºåÂÆû‰æãÂåñ‰πãÂêéÊâçÂèØ‰ª•‰ΩøÁî®ÔºõfrenchGreeting„ÄÅspanishGreetingÂú®ÂÆö‰πâÁöÑÊó∂ÂÄôÂ∞±ÂÆû‰æãÂåñ‰∫ÜÔºåÂÆö‰πâÂÆå‰πãÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî®„ÄÇ‰∏äÈù¢ÁöÑ‰æãÂ≠ê‰∏≠Ôºå‰∏§ÁßçÊñπÊ≥ïÊòØ‰∏ÄÊ†∑ÁöÑÔºåÂ¶ÇÊûú‰∏Ä‰∏™Á±ªÂè™ÈúÄË¶ÅÁî®Âà∞‰∏ÄÊ¨°ÔºåÈÇ£‰πàÂ∞±Ê≤°ÂøÖË¶ÅÁî®ÁªßÊâøÁà∂Á±ªÊàñËÄÖÊòØÂÆûÁé∞Êé•Âè£ÁöÑÊñπÂºèÂÜçÂÆö‰πâ‰∏Ä‰∏™Á±ªÔºåËøôÊó∂ÂÄôÂ∞±ÂèØ‰ª•‰ΩøÁî®ÂåøÂêçÂÜÖÈÉ®Á±ª„ÄÇ ÂåøÂêçÂÜÖÈÉ®Á±ªÁöÑËØ≠Ê≥ïÂåøÂêçÂÜÖÈÉ®Á±ªÊúâ‰∏§Áßç‰ΩøÁî®ÊñπÊ≥ïÔºö ÁªßÊâøÁà∂Á±ªÁöÑÂåøÂêçÁ±ª Thread thread = new Thread() &#123; @Override public void run() &#123; super.run(); &#125;&#125;; ÂÆûÁé∞Êé•Âè£ÁöÑÂåøÂêçÁ±ª Thread thread = new Thread(new Runnable() &#123; @Override public void run() &#123; System.out.println("11"); &#125;&#125;); Á¨¨‰∫å‰∏™‰æãÂ≠êÂÆûÈôÖ‰∏äÊòØÂ∞Ü‰∏Ä‰∏™ÂÆûÁé∞Êé•Âè£ÁöÑÂåøÂêçÁ±ª‰Ωú‰∏∫ÂèÇÊï∞‰º†Ëøõ‰∫ÜThreadÁöÑÊûÑÈÄ†ÂáΩÊï∞‰∏≠„ÄÇ ÂÖ≥‰∫éÂåøÂêçÁ±ªÁöÑÊï∞ÊçÆËÆøÈóÆÂèØ‰ª•ÁúãËøôÁØáÊñáÁ´†ÔºöÂåøÂêçÁ±ªÁöÑÊï∞ÊçÆËÆøÈóÆ„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HexoÈÉ®ÁΩ≤Âà∞GithubÊñá‰ª∂Â§πÂ§ßÂ∞èÂÜôÈóÆÈ¢ò]]></title>
    <url>%2F2019%2F10%2F19%2FHexo%E9%83%A8%E7%BD%B2%E5%88%B0Github%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÊèèËø∞ ‰ªäÂ§©ÂÜôÂÆåÂçöÂÆ¢‰∏ä‰º†githubÊó∂ÔºåÂèëÁé∞algorithmÊ†áÁ≠æ404‰∫ÜÔºå‰∏äGithub‰ªìÂ∫ì‰∏ÄÁúãÂèëÁé∞tagsÊñá‰ª∂Â§π‰∏ãÁöÑalgorithmÊòØÂ§ßÂÜôÁöÑAlgorithmÔºåËÆøÈóÆtags/AlgorithmÔºåÂèØ‰ª•Ê≠£Â∏∏ÊòæÁ§∫ ÂéüÂõ† Êü•ËØ¢ËµÑÊñôÂèëÁé∞ÔºågitÊòØÈªòËÆ§‰∏çÂå∫ÂàÜÂ§ßÂ∞èÂÜôÁöÑÔºå‰πãÂâçhexoÁîüÊàê‰∫Ü‰∏Ä‰∏™AlgorithmÊñá‰ª∂Â§πÔºåÂêéÊù•Â∞ÜÊñá‰ª∂Â§πÁöÑÂêçÁß∞Êîπ‰∏∫‰∫ÜalgorithmÔºåÁÑ∂ËÄåÂú®Github‰∏äÊòØ‰∏ç‰ºöÂ∞ÜÂ§ßÂÜôÊîπ‰∏∫Â∞èÂÜôÁöÑ„ÄÇ Ëß£ÂÜ≥ÊñπÊ≥ï ËøõÂÖ•.gitÊñá‰ª∂Â§πÔºåÂ∞ÜconfigÊñá‰ª∂ÁöÑ ignorecase=true Êîπ‰∏∫ ignorecase=false„ÄÇ]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âá†Êï∞‰πãÂíåÁ≥ªÂàó]]></title>
    <url>%2F2019%2F10%2F19%2F%E5%87%A0%E6%95%B0%E4%B9%8B%E5%92%8C%E7%B3%BB%E5%88%97%2F</url>
    <content type="text"><![CDATA[Âú®LeetCodeÁöÑArrayTag‰∏≠ÔºåÊúâ‰∏ÄÁ≥ªÂàóÁöÑ__Êï∞‰πãÂíåÈ¢òÔºåËøôÂá†ÈÅìÈ¢òÈÉΩÊúâ‰∏Ä‰∫õÁõ∏‰ºº‰πãÂ§ÑÔºåÂú®ËøôÈáåÂÅö‰∏Ä‰∏ãÊÄªÁªì„ÄÇ ÊÄªËßà ‰∏§Êï∞‰πãÂíå ‰∏âÊï∞‰πãÂíå ÊúÄÊé•ËøëÁöÑ‰∏âÊï∞‰πãÂíå ÂõõÊï∞‰πãÂíå Ê±ÇËß£ÊñπÊ≥ï Êö¥ÂäõÊ≥ïÔºà‰∏çÂèØÂèñÔºâÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÂæÄÂæÄ‰∏∫nÁöÑ‚ÄúÂá†Êï∞‚ÄùÊ¨°ÊñπÔºàÂ¶Ç‰∏§Êï∞‰πãÂíå‰∏∫$O(n^2)‚Äã$Ôºâ„ÄÇ HashTableÂáèÂ∞ëÂæ™ÁéØÊ¨°Êï∞ÔºåÈôç‰ΩéÊó∂Èó¥Â§çÊùÇÂ∫¶„ÄÇ ÊéíÂ∫è+ÂèåÊåáÈíàÔºàÊé®ËçêÔºâ„ÄÇ ‰∏§Êï∞‰πãÂíåÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums Âíå‰∏Ä‰∏™ÁõÆÊ†áÂÄº targetÔºåËØ∑‰Ω†Âú®ËØ•Êï∞ÁªÑ‰∏≠ÊâæÂá∫Âíå‰∏∫ÁõÆÊ†áÂÄºÁöÑÈÇ£ ‰∏§‰∏™ Êï¥Êï∞ÔºåÂπ∂ËøîÂõû‰ªñ‰ª¨ÁöÑÊï∞ÁªÑ‰∏ãÊ†á„ÄÇ ‰Ω†ÂèØ‰ª•ÂÅáËÆæÊØèÁßçËæìÂÖ•Âè™‰ºöÂØπÂ∫î‰∏Ä‰∏™Á≠îÊ°à„ÄÇ‰ΩÜÊòØÔºå‰Ω†‰∏çËÉΩÈáçÂ§çÂà©Áî®Ëøô‰∏™Êï∞ÁªÑ‰∏≠ÂêåÊ†∑ÁöÑÂÖÉÁ¥†„ÄÇ Á§∫‰æã: ÁªôÂÆö nums = [2, 7, 11, 15], target = 9Âõ†‰∏∫ nums[0] + nums[1] = 2 + 7 = 9ÊâÄ‰ª•ËøîÂõû [0, 1] Êù•Ê∫êÔºöÂäõÊâ£ÔºàLeetCodeÔºâÈìæÊé•Ôºöhttps://leetcode-cn.com/problems/two-sumËëó‰ΩúÊùÉÂΩíÈ¢ÜÊâ£ÁΩëÁªúÊâÄÊúâ„ÄÇÂïÜ‰∏öËΩ¨ËΩΩËØ∑ËÅîÁ≥ªÂÆòÊñπÊéàÊùÉÔºåÈùûÂïÜ‰∏öËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ„ÄÇ Ê≠§È¢òÊòØLeetCodeÂÖ•ÂùëÁ¨¨‰∏ÄÈ¢òÔºå‰Ωú‰∏∫‰∏ÄÂêçÁÆóÊ≥ïÂ∞èÁôΩÔºåÈ¶ñÂÖàÂ∞±ÊÉ≥Âà∞‰∫ÜÊö¥ÂäõÊ±ÇËß£Ê≥ïÔºåÊñπÊ≥ï‰πüÊòØÁÆÄÂçïÁ≤óÊö¥Ôºå‰∏çÂÅöËß£Èáä„ÄÇ class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; //Êö¥ÂäõÊ±ÇËß£ for (int i = 0; i &lt; nums.length; i++) &#123; for (int j = i + 1; j &lt; nums.length; j++) &#123; if (nums[i] + nums[j] == target) &#123; return new int[] &#123;i ,j&#125;; &#125; &#125; &#125; throw new IllegalArgumentException("no sulotion!"); &#125;&#125; Êö¥ÂäõÁªàÁ©∂‰∏çÂèØÂèñÔºåÊ≠§È¢òËøòÂèØ‰ª•‰ΩøÁî®HashTableÊ±ÇËß£ÔºåÂáèÂ∞ë‰∫Ü‰∏ÄÊ¨°Âæ™ÁéØÔºõ‰∏ä‰∏ÄÁßçËß£Ê≥ïÁõ∏ÂΩì‰∫éÊòØÊØè‰∏™Êï∞ÈÉΩË¶ÅÂéªÊâæ‰∏Ä‰∏™ËÉΩÂíåÂà´‰∫∫ÈÖçÂØπÁöÑÊï∞ÔºåËÄåÂà©Áî®HashTableÁöÑËß£Ê≥ïÊòØÂ∞ÜÊØè‰∏™Êï∞ÊÉ≥Ë¶ÅÈÖçÂØπÁöÑÊï∞Â≠òËµ∑Êù•ÔºåÂπ∂‰∏îÂú®Â≠òËµ∑Êù•‰πãÂâçÔºåÊ£ÄÊü•‰∏ÄÈÅçÂΩìÂâçÁöÑHashTable‰∏≠ÊòØÂê¶Â∑≤ÁªèÂ≠òÂú®‰∫ÜÊÉ≥Ë¶ÅÈÖçÂØπÁöÑÊï∞ÔºåÂ¶ÇÊûúÈÖçÂØπÊàêÂäüÔºåÁõ¥Êé•ËøîÂõûÁªìÊûú„ÄÇ class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; //HashMap HashMap&lt;Integer, Integer&gt; hashMap = new HashMap&lt;&gt;(); for (int i = 0; i &lt; nums.length; i++) &#123; int a = target - nums[i]; //ÊÉ≥Ë¶ÅÈÖçÂØπÁöÑÊï∞ if (hashMap.containsKey(a) ) &#123; return new int[] &#123;hashMap.get(a),i&#125;; &#125; hashMap.put(nums[i], i); &#125; throw new IllegalArgumentException("no sulotion!"); &#125;&#125; ‰∏âÊï∞‰πãÂíåÁªôÂÆö‰∏Ä‰∏™ÂåÖÂê´ n ‰∏™Êï¥Êï∞ÁöÑÊï∞ÁªÑ numsÔºåÂà§Êñ≠ nums ‰∏≠ÊòØÂê¶Â≠òÂú®‰∏â‰∏™ÂÖÉÁ¥† aÔºåbÔºåc Ôºå*‰ΩøÂæó *a + b + c = 0 ÔºüÊâæÂá∫ÊâÄÊúâÊª°Ë∂≥Êù°‰ª∂‰∏î‰∏çÈáçÂ§çÁöÑ‰∏âÂÖÉÁªÑ„ÄÇ Ê≥®ÊÑèÔºöÁ≠îÊ°à‰∏≠‰∏çÂèØ‰ª•ÂåÖÂê´ÈáçÂ§çÁöÑ‰∏âÂÖÉÁªÑ„ÄÇ ‰æãÂ¶Ç, ÁªôÂÆöÊï∞ÁªÑ nums = [-1, 0, 1, 2, -1, -4]ÔºåÊª°Ë∂≥Ë¶ÅÊ±ÇÁöÑ‰∏âÂÖÉÁªÑÈõÜÂêà‰∏∫Ôºö[ [-1, 0, 1], [-1, -1, 2]] Êù•Ê∫êÔºöÂäõÊâ£ÔºàLeetCodeÔºâÈìæÊé•Ôºöhttps://leetcode-cn.com/problems/3sum/Ëëó‰ΩúÊùÉÂΩíÈ¢ÜÊâ£ÁΩëÁªúÊâÄÊúâ„ÄÇÂïÜ‰∏öËΩ¨ËΩΩËØ∑ËÅîÁ≥ªÂÆòÊñπÊéàÊùÉÔºåÈùûÂïÜ‰∏öËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ„ÄÇ Ê≠§È¢òÂèØ‰ª•ÂèÇÁÖß‰∏§Êï∞‰πãÂíåÁöÑËß£Ê≥ïÁªßÁª≠‰ΩøÁî®Êö¥ÂäõÊ≥ïÊàñËÄÖÊòØHashTableËß£Ê≥ïÔºå‰ΩÜÊòØÈ¢òÁõÆË¶ÅÊ±Ç‰∏çÂèØ‰ª•ÂåÖÂê´ÈáçÂ§çÁöÑ‰∏âÂÖÉÁªÑÔºåÊâÄ‰ª•ÂéªÈáçÊòØ‰∏™Â§ßÈóÆÈ¢òÔºåÁõÆÂâçÈô§‰∫ÜÊÉ≥Âà∞ÂØπÊØè‰∏™‰∏âÂÖÉÁªÑËøõË°åÊéíÂ∫èÂÜç‰ΩøÁî®HashSetÂéªÈáçÂ§ñÔºåËøòÊ≤°ÊúâÊÉ≥Âà∞Âà´ÁöÑÂ•ΩÂäûÊ≥ï„ÄÇ Êé•‰∏ãÊù•‰∏ªË¶Å‰ªãÁªçÊéíÂ∫è+ÂèåÊåáÈíàÁöÑÊñπÊ≥ï„ÄÇ Ê≠§È¢òÊúÄÂêàÈÄÇÁöÑÊñπÊ≥ïÊòØÈááÁî®ÂèåÊåáÈíàÁöÑÊñπÊ≥ïÊ±ÇËß£ÔºåÂÖ≥‰∫éÂèåÊåáÈíàÂú®‰πãÂâçÁöÑ‰∏ÄÈÅìÈ¢òÂ∑≤Áªè‰ΩøÁî®Ëøá‰∫ÜÔºåÊúÄ‰∏ªË¶ÅÁöÑ‰∏ÄÁÇπÂ∞±ÊòØÂÖ≥‰∫éÊåáÈíàÂ¶Ç‰ΩïÁßªÂä®ÁöÑÈóÆÈ¢ò„ÄÇ ÁÆóÊ≥ïËØ¶Ëß£ ÂØπÊï∞ÊçÆËøõË°åÊéíÂ∫èÔºå‰∏ÄËà¨‰ΩøÁî®ÂèåÊåáÈíàÊ±ÇËß£ÈÉΩË¶ÅÂÖàÂØπÊï∞ÊçÆËøõË°åÊéíÂ∫è„ÄÇ Á°ÆÂÆö‰∏â‰∏™ÊåáÈíàÁöÑÂàùÂßã‰ΩçÁΩÆÔºåkÊåáÂêëÊúÄÂ∑¶Ëæπ‰πüÂ∞±ÊòØÊúÄÂ∞èÁöÑÊï∞ÔºåiÂíåjÂàÜÂà´ÊåáÂêëÈô§‰∫ÜkÂ§ÑÁöÑ‰∏§Á´ØÔºåÂàÜÂà´Âêë‰∏≠Èó¥ÁßªÂä®Ôºå‰πüÂ∞±ÊòØËØ¥ÔºåÁßªÂä®ÊñπÂºè‰∏∫i++ÊàñËÄÖj‚Äì„ÄÇ ËÆ°ÁÆó‰∏âÊï∞‰πãÂíåsumÔºåÂ¶ÇÊûúsum = 0ÔºåÁõ¥Êé•ËøîÂõûÁªìÊûúÔºõÂ¶ÇÊûúsum &gt; 0ÔºåÂ∫îËØ•ÂêëÂè≥ÁßªÂä®iÊåáÈíàÔºåËß£Èáä‰∏Ä‰∏ãÔºåÊàë‰ª¨ÁöÑÁõÆÁöÑÊòØÈúÄË¶ÅËÆ©ÂΩìÂâçÁöÑsumÂÄºÂáèÂ∞èÊÖ¢ÊÖ¢Âêë0Ë∂ãËøëÔºåi++ÁöÑÊñπÂºè‰ºöËÆ©sumÁöÑÂÄºÂ¢ûÂ§ßÔºåËÄåj‚ÄìÁöÑÊñπÂºè‰ºöËÆ©sumÁöÑÂÄºÂáèÂ∞èÔºåÊâÄ‰ª•Â∫îËØ•ÂêëÂè≥ÁßªÂä®iÊåáÈíàÔºõÂ¶ÇÊûúsum &lt; 0ÔºåÂ∫îËØ•ÂêëÂ∑¶ÁßªÂä®jÊåáÈíà„ÄÇ Áî±‰∫é‰∫ãÂÖàÂØπÊï∞ÊçÆËøõË°å‰∫ÜÊéíÂ∫èÔºåÂéªÈáç‰πüÂèòÂæóÊúâËøπÂèØÂæ™ÔºåÈ¶ñÂÖàÔºåÊàë‰ª¨ÈúÄË¶ÅÂàÜÊûêÈáçÂ§çÊï∞ÊçÆÊòØÂ¶Ç‰Ωï‰∫ßÁîüÁöÑ„ÄÇÁúã‰∏ãÈù¢‰∏Ä‰∏™‰æãÂ≠ê„ÄÇ ÂéªÈô§ÈáçÂ§çÊï∞ÊçÆ ÊãøÁ§∫‰æãÊï∞ÊçÆ[-1, 0, 1, 2, -1, -4]Êù•ËØ¥ÔºåÈ¶ñÂÖàÂØπÊï∞ÊçÆÊéíÂ∫èÔºåÂΩìÂâçkÊåáÂêë-1ÔºåiÊåáÂêë0ÔºåjÊåáÂêë1ÔºåÂΩìÂâçÁªìÊûúÂ∞±ÊòØ‰∏Ä‰∏™Á¨¶ÂêàÊù°‰ª∂ÁöÑÁªìÊûú k i j -4 -1 -1 0 1 2 ÂΩìkÁªßÁª≠ÁßªÂä®‰∏Ä‰Ωç‰ª•ÂêéÔºåÂèëÁé∞ÂΩìÂâçÁöÑÊÉÖÂÜµ‰πüÊòØ‰∏Ä‰∏™Á¨¶ÂêàÊù°‰ª∂ÁöÑÁªìÊûúÔºå‰ΩÜÊòØÂæàÊòéÊòæÂíå‰∏ä‰∏ÄÁßçÁªìÊûúÈáçÂ§ç‰∫Ü„ÄÇÁî±Ê≠§Ôºå‰∫ßÁîüÈáçÂ§çÁªìÊûúÁöÑÂéüÂõ†Â∞±Âú®‰∫ék‰∫ÜÔºåÂ¶ÇÊûúÂ≠òÂú®‰∏§‰∏™kÊåáÈíàÊâÄÊåáÁöÑÊï∞ÈáçÂ§çÔºåÈÇ£‰πà‰∏ã‰∏ÄÊ¨°Âæ™ÁéØÂ∞±ÂèØ‰ª•Áõ¥Êé•Ë∑≥ËøáÔºåËøôÊ†∑Â∞±ÈÅøÂÖç‰∫ÜÈáçÂ§çÁªìÊûúÁöÑ‰∫ßÁîü„ÄÇ k i j -4 -1 -1 0 1 2 Âè¶Â§ñÔºåÂØπ‰∫éÂÖ∂‰ªñ‰∏§‰∏™ÊåáÈíàÔºåÂêåÊ†∑‰ºö‰∫ßÁîüÈáçÂ§çÁöÑÊÉÖÂÜµÔºåÂàÜÊûêËøáÁ®ãÂíå‰∏äÈù¢ÂØπkÊåáÈíàÁöÑÂàÜÊûêÁõ∏Âêå„ÄÇ ‰ª£Á†ÅÔºö class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums) &#123; //ÊéíÂ∫è + ÂèåÊåáÈíà List&lt;List&lt;Integer&gt;&gt; ternaryList = new ArrayList&lt;&gt;(); Arrays.sort(nums); //[-4, -1, -1, 0, 1, 2] //[-1, -1, 0, 1] for (int i = 0; i &lt; nums.length; i++) &#123; if (nums[i] &gt; 0) break; if (i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) continue; //ÂéªÈáç int i = i + 1; int j = nums.length - 1; while (i &lt; j) &#123; int sum = nums[i] + nums[i] + nums[j]; if (sum == 0) &#123; ternaryList.add(Arrays.asList(nums[i], nums[i], nums[j])); while (i &lt; j &amp;&amp; nums[i] == nums[i + 1]) i++; // ÂéªÈáç while (i &lt; j &amp;&amp; nums[j] == nums[j - 1]) j--; // ÂéªÈáç j--; i++; &#125; else if (sum &lt; 0) &#123; i++; &#125; else if (sum &gt; 0) &#123; j--; &#125; &#125; &#125; return ternaryList; &#125;&#125; Ââ©‰∏ãÁöÑ‰∏§ÈÅìÈ¢òËß£Ê≥ïÂíå‰∏âÊï∞‰πãÂíåÂü∫Êú¨Áõ∏ÂêåÔºåÂè™ÁªôÂá∫‰ª£Á†Å„ÄÇ ÊúÄÊé•ËøëÁöÑ‰∏âÊï∞‰πãÂíåclass Solution &#123; public int threeSumClosest(int[] nums, int target) &#123; Arrays.sort(nums); int result = nums[0] + nums[1] + nums[2]; for (int i = 0; i &lt; nums.length; i++) &#123; int j = i + 1, k = nums.length - 1; while (j &lt; k) &#123; int sum = nums[i] + nums[j] + nums[k]; if (Math.abs(sum - target) &lt; Math.abs(result - target)) &#123; result = sum; &#125; // ÁßªÂä®ÊåáÈíà if (sum == target) &#123; return sum; &#125; if (sum &gt; target) &#123; k--; &#125; else &#123; j++; &#125; &#125; &#125; return result; &#125;&#125; ÂõõÊï∞‰πãÂíåclass Solution &#123; public List&lt;List&lt;Integer&gt;&gt; fourSum(int[] nums, int target) &#123; List&lt;List&lt;Integer&gt;&gt; result = new ArrayList&lt;&gt;(); Arrays.sort(nums); for (int i = 0; i &lt; nums.length; i++) &#123; if (i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) continue; //ÂéªÈáç for (int j = i + 1; j &lt; nums.length; j++) &#123; if (j &gt; i + 1 &amp;&amp; nums[j] == nums[j - 1]) continue; //ÂéªÈáç int k = j + 1, l = nums.length - 1; while (k &lt; l) &#123; int sum = nums[i] + nums[j] + nums[k] + nums[l]; if (sum == target) &#123; result.add(Arrays.asList(nums[i], nums[j], nums[k], nums[l])); while (k &lt; l &amp;&amp; nums[k] == nums[k + 1]) k++; while (k &lt; l &amp;&amp; nums[l] == nums[l - 1]) l--; k++; l--; &#125; else if (sum &gt; target) &#123; l--; &#125; else if (sum &lt; target)&#123; k++; &#125; &#125; &#125; &#125; return result; &#125;]]></content>
      <categories>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>two-pointers</tag>
        <tag>HashTable</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Two pointer]]></title>
    <url>%2F2019%2F10%2F16%2FTwo%20pointers%2F</url>
    <content type="text"><![CDATA[ÁõõÊúÄÂ§öÊ∞¥ÁöÑÂÆπÂô® Category Difficulty Likes Dislikes algorithms Medium (58.43%) 847 - Tagsarray&nbsp;|&nbsp;two-pointers Companiesbloomberg ÁªôÂÆö n ‰∏™ÈùûË¥üÊï¥Êï∞ a1Ôºåa2Ôºå‚Ä¶ÔºåanÔºåÊØè‰∏™Êï∞‰ª£Ë°®ÂùêÊ†á‰∏≠ÁöÑ‰∏Ä‰∏™ÁÇπ (i, ai) „ÄÇÂú®ÂùêÊ†áÂÜÖÁîª n Êù°ÂûÇÁõ¥Á∫øÔºåÂûÇÁõ¥Á∫ø i ÁöÑ‰∏§‰∏™Á´ØÁÇπÂàÜÂà´‰∏∫ (i, ai) Âíå (i, 0)„ÄÇÊâæÂá∫ÂÖ∂‰∏≠ÁöÑ‰∏§Êù°Á∫øÔºå‰ΩøÂæóÂÆÉ‰ª¨‰∏é x ËΩ¥ÂÖ±ÂêåÊûÑÊàêÁöÑÂÆπÂô®ÂèØ‰ª•ÂÆπÁ∫≥ÊúÄÂ§öÁöÑÊ∞¥„ÄÇ ËØ¥ÊòéÔºö‰Ω†‰∏çËÉΩÂÄæÊñúÂÆπÂô®Ôºå‰∏î n ÁöÑÂÄºËá≥Â∞ë‰∏∫ 2„ÄÇ Âõæ‰∏≠ÂûÇÁõ¥Á∫ø‰ª£Ë°®ËæìÂÖ•Êï∞ÁªÑ [1,8,6,2,5,4,8,3,7]„ÄÇÂú®Ê≠§ÊÉÖÂÜµ‰∏ãÔºåÂÆπÂô®ËÉΩÂ§üÂÆπÁ∫≥Ê∞¥ÔºàË°®Á§∫‰∏∫ËìùËâ≤ÈÉ®ÂàÜÔºâÁöÑÊúÄÂ§ßÂÄº‰∏∫ 49„ÄÇ Á§∫‰æã: ËæìÂÖ•: [1,8,6,2,5,4,8,3,7]ËæìÂá∫: 49 ‰ΩúËÄÖÔºöLeetCodeÈìæÊé•Ôºöhttps://leetcode-cn.com/problems/container-with-most-water/Êù•Ê∫êÔºöÂäõÊâ£ÔºàLeetCodeÔºâËëó‰ΩúÊùÉÂΩí‰ΩúËÄÖÊâÄÊúâ„ÄÇÂïÜ‰∏öËΩ¨ËΩΩËØ∑ËÅîÁ≥ª‰ΩúËÄÖËé∑ÂæóÊéàÊùÉÔºåÈùûÂïÜ‰∏öËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ„ÄÇ Ëß£È¢òÊñπÊ≥ïÊö¥ÂäõÊ≥ïÁ¨¨‰∏ÄÊ¨°SubmitÁöÑÊó∂ÂÄôÔºåÂ•à‰Ωï‰∏çÁü•ÈÅìÂèåÊåáÈíàÔºåÁî®ÁöÑÊö¥ÂäõÊ≥ïÔºåËøòÊúâ‰∏ÄÁßçLeetCodeÂÆòÊñπËß£Á≠îÁßç‰ΩøÁî®JavaÂÜÖÁΩÆMathÂ∑•ÂÖ∑Á±ªÁöÑÊØîËæÉÁÆÄ‰ªãÁöÑÂÜôÊ≥ï„ÄÇ class Solution &#123; public int maxArea(int[] height) &#123;// //Êö¥ÂäõÊ≥ï// int maxArea = 0;// for (int i = 0; i &lt; height.length; i++) &#123;// for (int j = i + 1; j &lt; height.length; j++) &#123;// int area = 0;// if (height[i] &lt;= height[j]) &#123;// area = height[i] * (j - i);// &#125; else &#123;// area = height[j] * (j - i);// &#125;// if (area &gt;= maxArea) &#123;// maxArea = area;// &#125;// &#125;// &#125;// return maxArea; //2.Êö¥ÂäõÊ≥ï(Á≤æÁÆÄ) int maxArea = 0; for (int i = 0; i &lt; height.length; i++) &#123; for (int j = i + 1; j &lt; height.length; j++) &#123; maxArea = Math.max(maxArea, Math.min(height[i], height[j]) * (j - i)); &#125; &#125; return maxArea; &#125;&#125; Â§çÊùÇÂ∫¶ Êó∂Èó¥Â§çÊùÇÂ∫¶Ôºö$O(n^2)‚Äã$„ÄÇ Á©∫Èó¥Â§çÊùÇÂ∫¶Ôºö$O(1)$„ÄÇ ##ÂèåÊåáÈíàÊ≥ï ÊÄùË∑ØÔºöÂèåÊåáÈíàÂàÜÂà´‰Ωç‰∫éÂÆπÂô®‰∏§Á´ØÔºåÊ†πÊçÆÊüê‰∏™ËßÑÂàôÂêëÂÜÖÁßªÂä®ÊåáÈíàÔºåÂπ∂‰∏îÊõ¥Êñ∞Èù¢ÁßØÁöÑÊúÄÂ§ßÂÄºÔºåÁõ¥Âà∞i == jÔºåËøîÂõûÊúÄÂ§ßÂÄº„ÄÇ Ê∞¥ÊßΩÁöÑÈù¢ÁßØÂÖ¨ÂºèÔºö$S = min(h[i], h[j]) * (j - i)$ Â¶ÇÊûúÁü≠ÊùøÊàñËÄÖÈïøÊùøÂêë‰∏≠Èó¥ÁßªÂä®ÔºåjÊàñËÄÖiÂ∞±‰ºö-1Ôºå(j - i)Â∞±‰ºö-1„ÄÇ Â¶ÇÊûúÁßªÂä®ÈïøÊùøÔºå‰∏ã‰∏Ä‰∏™Áü≠Êùømin(h[i], h[j])‰ºö‰∏çÂèòÊàñËÄÖÂèòÂ∞èÔºåÁÑ∂ËÄåÂè™Ë¶ÅÊåáÈíàÂèëÁîü‰∫ÜÁßªÂä®Ôºå(j - i)ÂøÖÂèòÂ∞èÔºåÊâÄ‰ª•‰∏ã‰∏Ä‰∏™Ê∞¥ÊßΩÁöÑÈù¢ÁßØ‰∏ÄÂÆö‰∏ç‰ºöÂ§ß‰∫é‰∏ä‰∏Ä‰∏™Ê∞¥ÊßΩÁöÑÈù¢ÁßØ„ÄÇ Â¶ÇÊûúÁßªÂä®Áü≠ÊùøÔºå‰∏ã‰∏Ä‰∏™Áü≠Êùømin(h[i], h[j])ÊâçÂèØËÉΩ‰ºöÂèòÂ§ßÔºåÊâÄ‰ª•‰∏ã‰∏Ä‰∏™Ê∞¥ÊßΩÁöÑÈù¢ÁßØÊâçÊúâÂèØËÉΩÂèòÂ§ß„ÄÇ ÊâÄ‰ª•ÔºåÁßªÂä®ËßÑÂàôÂ∞±ÊòØÊØèÊ¨°ÂêëÁùÄÁü≠ÊùøÁöÑÊñπÂêëÁßªÂä®„ÄÇ ‰ª£Á†ÅÔºö class Solution &#123; public int maxArea(int[] height) &#123; //ÂèåÊåáÈíàÊ≥ï int head = 0, tail = height.length - 1, maxArea = 0; while (head &lt; tail) &#123; if (height[head] &lt;= height[tail]) &#123; maxArea = Math.max(height[head] * (tail - head), maxArea); head++; &#125; else &#123; maxArea = Math.max(height[tail] * (tail - head), maxArea); tail--; &#125; &#125; return maxArea; &#125;&#125; Â§çÊùÇÂ∫¶Ôºö Êó∂Èó¥Â§çÊùÇÂ∫¶Ôºö$O(n)‚Äã$„ÄÇ Á©∫Èó¥Â§çÊùÇÂ∫¶Ôºö$O(1)$„ÄÇ]]></content>
      <categories>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>two-pointers</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Final arrays in Java]]></title>
    <url>%2F2019%2F10%2F10%2FFinal%20arrays%20in%20Java%2F</url>
    <content type="text"><![CDATA[‰πãÂâçÂú®ÂÅöÁ¨¨‰∏Ä‰∏™ÂÆâÂçìÈ°πÁõÆÊó∂ÔºåÂú®‰ΩøÁî®TimerTaskÂíå‰ΩøÁî®ThreadÂàõÂª∫Êñ∞Á∫øÁ®ãÁöÑÊó∂ÂÄôÔºåÂèëÁé∞Â¶ÇÊûúÂú®ÂåøÂêçÊñπÊ≥ï‰∏≠ÂØπÂ±ÄÈÉ®ÂèòÈáèËøõË°å‰øÆÊîπÁöÑÊó∂ÂÄô‰ºöÊä•ÈîôÔºå‰ΩÜÊòØÂèØ‰ª•ËÆøÈóÆÂ±ÄÈÉ®ÂèòÈáèÔºåËÄå‰ΩøÁî®ÊàêÂëòÂèòÈáèÁöÑÊó∂ÂÄôÂ∞±‰∏ç‰ºöÊä•Èîô„ÄÇ‰∏çËøáÔºåÂ¶ÇÊûúÂ∞ÜÂÖ∂ÂÜôÊàê‰∏ãÈù¢Â∞±‰∏ç‰ºöÊä•Èîô‰∫ÜÔºå‰ΩÜÊòØÈóÆÈ¢òÂèàÊù•‰∫ÜÔºåÊòéÊòéÂ∞ÜÂèòÈáèÂ£∞ÊòéÊàê‰∫ÜfinalÁ±ªÂûãÔºå‰∏∫‰ªÄ‰πàÂèØ‰ª•‰øÆÊîπÂÖ∂ÂÄºÂë¢Ôºü void myThread() &#123; final int[] i = &#123;0&#125;; Thread thread = new Thread(()-&gt; i[0]++); thread.start();&#125; Êàë‰ª¨ÈúÄË¶ÅËß£ÂÜ≥‰ª•‰∏ãÂá†‰∏™ÈóÆÈ¢òÔºö ‰∏∫‰ªÄ‰πàÂú®ÂåøÂêçÊñπÊ≥ï‰∏≠ÂèØ‰ª•‰øÆÊîπÊàêÂëòÂèòÈáèËÄå‰∏çÂèØ‰ª•‰øÆÊîπÂ±ÄÈÉ®ÂèòÈáèÔºü ‰∏∫‰ªÄ‰πàÂåøÂêçÊñπÊ≥ï‰∏≠Âè™ËÉΩËÆøÈóÆfinalÁ±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÔºü ‰∏∫‰ªÄ‰πàfinalÊï∞ÁªÑÁöÑÂÄºÂèØ‰ª•Ë¢´‰øÆÊîπÔºü Âú®ÂåøÂêçÊñπÊ≥ï‰∏≠‰ΩøÁî®ÁöÑÂ±ÄÈÉ®ÂèòÈáè‰∏∫‰ªÄ‰πàÂè™ËÉΩÊòØfinalÂéüÂõ†ÊòØJavaËÆæËÆ°ËÄÖÊÉ≥Ë¶ÅÂåøÂêçÂáΩÊï∞ÊàñËÄÖLambdaÂáΩÊï∞ÂÜÖÈÉ®Â§ñÈÉ®‰øùÊåÅÊï∞ÊçÆ‰∏ÄËá¥ÊÄßÔºåÂú®ÂåøÂêçÊñπÊ≥ï‰∏≠‰ΩøÁî®Â±ÄÈÉ®ÂèòÈáèÊó∂ÔºåÂÜÖÈÉ®Á±ªÂπ∂‰∏çÊòØÁúüÊ≠£Âú∞‰ΩøÁî®ËØ•ÂèòÈáèÔºåËÄåÊòØÂú®ÂåøÂêçÊñπÊ≥ï‰∏≠Â§çÂà∂‰∏Ä‰∏™ÂâØÊú¨ÔºåÁî±‰∫éÊòØÂâØÊú¨ÔºåÊâÄ‰ª•Âç≥‰ΩøÊòØÂú®ÂåøÂêçÊñπÊ≥ï‰∏≠‰øÆÊîπ‰∫ÜËØ•ÂèòÈáèÔºåÂ±ÄÈÉ®ÂèòÈáè‰πü‰∏ç‰ºöÂèëÁîüÂèòÂåñÔºåÊâÄ‰ª•ÂåøÂêçÊñπÊ≥ï‰ΩøÁî®ÁöÑÂ±ÄÈÉ®ÂèòÈáèÂè™ËÉΩÊòØfinalÁ±ªÂûãÁöÑÂèòÈáè„ÄÇ Ê≥®ÔºöÂú®Java8‰ª•ÂâçÔºåËÆøÈóÆ‰ªª‰ΩïÂ±ÄÈÉ®ÂèòÈáèÈÉΩË¶ÅÂä†finalÂÖ≥ÈîÆÂ≠óÔºåËÄåÂú®Java8‰πãÂêéÔºåÂè™Ë¶Å‰∏çÊ∂âÂèä‰øÆÊîπÂ±ÄÈÉ®ÂèòÈáèÁöÑÊìç‰ΩúÔºåÂ∞±ÂèØ‰ª•‰∏çÁî®Âä†finalÂÖ≥ÈîÆÂ≠ó„ÄÇ ‰ΩÜÊòØÔºåÂØπ‰∫éÊàêÂëòÂèòÈáèÊù•ËØ¥ÔºåÂåøÂêçÊñπÊ≥ï‰ºö‰øùÂ≠òÂ§ñÈÉ®Á±ªÁöÑÂºïÁî®ÔºåÂõ†ËÄåÂÜÖÈÉ®Á±ª‰∏≠ÂØπ‰ªª‰ΩïÂ≠óÊÆµÁöÑ‰øÆÊîπÈÉΩÂõûÁúüÂÆûÁöÑÂèçÂ∫îÂà∞Â§ñÈÉ®Á±ªÂÆû‰æãÊú¨Ë∫´‰∏äÔºåÊâÄ‰ª•‰∏çÈúÄË¶ÅÁî®finalÊù•‰øÆÈ•∞ÂÆÉ„ÄÇÂÖ∑‰ΩìÂèØ‰ª•ÂèÇËÄÉËØ•ÂçöÂÆ¢Ôºöhttps://www.cnblogs.com/qq78292959/p/3745348.html Final arraysÂ¶ÇÊûúÈùûË¶ÅÂØπÂ±ÄÈÉ®ÂèòÈáèËøõË°å‰øÆÊîπÊÄé‰πàÂäûÔºåÈÇ£Â∞±Âè™ËÉΩÁî®Âà∞‰∏äÈù¢ÁöÑfinalÊï∞ÁªÑÊñπÊ≥ï„ÄÇÊàë‰ª¨ÈÉΩÁü•ÈÅìÔºåfinalÁ±ªÂûãÁöÑÊï∞ÊçÆÊòØ‰∏çÂèØ‰ª•Ë¢´‰øÆÊîπÁöÑÔºå‰ΩÜÊòØ‰∏∫‰ªÄ‰πàÊ≠§Â§ÑÁöÑfinalÊï∞ÁªÑÁöÑÂÄºË¢´‰øÆÊîπ‰∫ÜÂë¢Ôºü ‰∏ãÈù¢ÊòØ‰∏Ä‰∏™ÈùôÊÄÅÂ∏∏ÈáèÔºö public final int[] number = &#123;1, 2, 3&#125;; finalÂÖ≥ÈîÆÂ≠óËÉΩ‰øùËØÅÊï∞ÊçÆ‰∏çÂèØ‰ª•Ë¢´‰øÆÊîπÂØπ‰∫éÂü∫Êú¨Á±ªÂûãÊù•ËØ¥ËøôÁÇπÊòØÊàêÁ´ãÁöÑÔºå‰ΩÜÂØπ‰∫éÊï∞ÁªÑÊù•ËØ¥Â∞±‰∏çÊàêÁ´ã‰∫ÜÔºåÂõ†‰∏∫Êï∞ÁªÑÂíåÁ±ª‰ª•ÂèäÊé•Âè£‰∏ÄÊ†∑ÔºåÊòØÂºïÁî®Á±ªÂûãÔºåÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÂÆûÈôÖ‰∏äÂè™ÂÇ®Â≠ò‰∫Ü‰∏Ä‰∏™ÊåáÈíàÔºåfinalÂè™ËÉΩ‰øùËØÅÂÖ∂ÂºïÁî®‰∏çÂèòÔºåÂç≥Ëøô‰∏™ÊåáÈíà‰∏çÂèòÔºå‰ΩÜÊòØÊï∞ÁªÑ‰∏≠ÁöÑÂØπË±°ÁöÑÂÄºËøòÊòØÂèØ‰ª•ÊîπÂèòÁöÑ„ÄÇËÄå‰∏îÔºåÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÁöÑÊï∞ÊçÆÊòØÂÇ®Â≠òÂú®Â†ÜÂÜÖÂ≠ò‰∏≠ÁöÑÔºåÂåøÂêçÊñπÊ≥ïÂèØ‰ª•ÂÖ±‰∫´„ÄÇ Ê≥®ÊÑèÔºöÊ≠£ÊòØÁî±‰∫éfinalÊï∞ÁªÑÁöÑËøô‰∏™ÁâπÊÄßÔºåÊâÄ‰ª•Âú®ÈúÄË¶ÅÂÆö‰πâ‰∏Ä‰∏™Â∏∏ÈáèÊï∞ÁªÑÁöÑÊó∂ÂÄôÔºå‰∏çË¶Å‰ΩøÁî®ËØ•ÊñπÊ≥ïÔºåËøôÊ†∑ÂÆö‰πâ‰æùÁÑ∂ÊòØ‰ºöË¢´‰øÆÊîπÂÄºÁöÑ„ÄÇ ÊñáÁ´†ÂºÄÂßãÁöÑ‰ª£Á†ÅÂèØ‰ª•ÈáçÂÜôThreadÁ±ªÔºåÂÆö‰πâThreadÁ±ªÁöÑÊàêÂëòÂèòÈáèÊù•ÂÆûÁé∞Áõ∏ÂêåÁöÑÂäüËÉΩ„ÄÇ private void myThread()&#123; class MyThread extends Thread &#123; private int i = 0; @Override public void run() &#123; super.run(); i++; System.out.println(i); &#125; &#125; MyThread myThread = new MyThread(); myThread.start();&#125; ÊÄªÁªì Âú®ÂåøÂêçÊñπÊ≥ï‰∏≠‰ΩøÁî®ÁöÑÂ±ÄÈÉ®ÂèòÈáèÂè™ËÉΩÊòØfianlÁ±ªÂûãÁöÑ„ÄÇ Java8‰ª•ÂêéÔºåÂè™Ë¶Å‰∏çÂØπÂ±ÄÈÉ®ÂèòÈáè‰øÆÊîπÔºåÂ±ÄÈÉ®ÂèòÈáèÂç≥‰Ωø‰∏çÂä†finalÂÖ≥ÈîÆÂ≠ó‰πüÂèØ‰ª•Ë¢´ÂåøÂêçÊñπÊ≥ïËÆøÈóÆ„ÄÇ Â¶ÇÊûúÂåøÂêçÊñπÊ≥ïË¶Å‰øÆÊîπÂ±ÄÈÉ®ÂèòÈáèÔºåÂèØ‰ª•Â∞ÜÂèòÈáèÂÆö‰πâÊàêfinalÊï∞ÁªÑÁöÑÂΩ¢Âºè„ÄÇ Â¶ÇÊûúË¶ÅfinalÂèëÊå•Â∏∏Èáè‰ΩúÁî®ÔºåfinalÊï∞ÁªÑË¶ÅÊÖéÁî®„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java‰∏≠ÁöÑstaticÂÖ≥ÈîÆÂ≠ó]]></title>
    <url>%2F2019%2F10%2F10%2Fstatic%E5%85%B3%E9%94%AE%E5%AD%97%2F</url>
    <content type="text"><![CDATA[staticÂÖ≥ÈîÆÂ≠óÊòØÁªèÂ∏∏‰ºö‰ΩøÁî®Âà∞ÁöÑÔºå‰πãÂâç‰∏ÄÁõ¥Ê≤°ÊúâÂØπËØ•ÂÖ≥ÈîÆÂ≠óËøõË°åËøáÊ∑±ÂÖ•Âú∞Â≠¶‰π†ËøáÔºå‰∏ãÈù¢Â∞±ËÆ≤Ëø∞‰∏Ä‰∏ãËØ•ÂÖ≥ÈîÆÂ≠ó‰ª•ÂèäÁî®ÈÄî„ÄÇ staticÂÖ≥ÈîÆÂ≠óstaticÂÖ≥ÈîÆÂ≠óË°®Á§∫ÂÖ®Â±ÄÊàñËÄÖÈùôÊÄÅÁöÑÊÑèÊÄùÔºåÂèØ‰ª•ÂÆûÁé∞Á±ª‰ººÂÖ®Â±ÄÂèòÈáèÁöÑ‰ΩúÁî®ÔºåÁî®static‰øÆÈ•∞ÂèòÈáèÊàñËÄÖÊñπÊ≥ïÈÉΩÊòØÁã¨Á´ã‰∫éÊüê‰∏™Á±ªÁöÑÔºå‰ºöË¢´ÊâÄÊúâÁöÑËØ•Á±ªÁöÑÂÆû‰æãÂÖ±‰∫´ÔºåÊâÄÊúâÂÆû‰æãÁöÑÂºïÁî®ÈÉΩÊåáÂêëÂêå‰∏Ä‰∏™Âú∞ÊñπÔºå‰ªª‰Ωï‰∏Ä‰∏™ÂÆû‰æãÂØπÂÖ∂ÁöÑ‰øÆÊîπÈÉΩ‰ºöÂØºËá¥ÂÖ∂‰ªñÂÆû‰æãÁöÑÂèòÂåñ„ÄÇ public class Student &#123; private static int count; Student() &#123; count++; &#125; public static void main(String[] args) &#123; Student student = new Student(); Student student1 = new Student(); Student student2 = new Student(); System.out.println(Student.count); &#125;&#125;---------------Output:3 Â¶Ç‰∏äÈù¢ÁöÑ‰ª£Á†ÅÔºåËøêË°åÁªìÊûú‰∏∫3ÔºåËØ¥Êòé‰∏â‰∏™Á±ªÁöÑÂÆû‰æãÊòØÂÖ±‰∫´ÈùôÊÄÅÂèòÈáècountÁöÑÔºå‰ΩøÁî®‰∏äÈù¢ÁöÑ‰ª£Á†ÅÂèØ‰ª•ÁªüËÆ°‰∏Ä‰∏™Á±ªË¢´ÂÆû‰æãÂåñ‰∫ÜÂ§öÂ∞ëÊ¨°„ÄÇ staticÂÖ≥ÈîÆÂ≠óÁöÑÁî®ÈÄî staticÊñπÊ≥ïÂ∞±ÊòØÊ≤°ÊúâthisÁöÑÊñπÊ≥ï„ÄÇÂú®staticÊñπÊ≥ïÂÜÖÈÉ®‰∏çËÉΩË∞ÉÁî®ÈùûÈùôÊÄÅÊñπÊ≥ïÔºåÂèçËøáÊù•ÊòØÂèØ‰ª•ÁöÑ„ÄÇËÄå‰∏îÂèØ‰ª•Âú®Ê≤°ÊúâÂàõÂª∫‰ªª‰ΩïÂØπË±°ÁöÑÂâçÊèê‰∏ãÔºå‰ªÖ‰ªÖÈÄöËøáÁ±ªÊú¨Ë∫´Êù•Ë∞ÉÁî®staticÊñπÊ≥ï„ÄÇËøôÂÆûÈôÖ‰∏äÊ≠£ÊòØstaticÊñπÊ≥ïÁöÑ‰∏ªË¶ÅÁî®ÈÄî„ÄÇ ‰∏äÈù¢ÊòØ„ÄäThinking in Java„ÄãÂØπstaticÂÖ≥ÈîÆÂ≠ó‰ΩúÁî®ÁöÑËß£ÈáäÔºåÊÄªÁªì‰∏Ä‰∏ãÔºåÂ∞±ÊòØstaticÊñπÊ≥ïÂèØ‰ª•Âú®‰∏çÁî®ÂÆû‰æãÂåñÂØπË±°ÁöÑÊÉÖÂÜµ‰∏ã‰ΩøÁî®„ÄÇ staticÂèòÈáèÊúâstaticÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑÂèòÈáè‰∏∫ÈùôÊÄÅÂèòÈáèÔºåËÄåÊ≤°Êúâstatic‰øÆÈ•∞ÁöÑÂèòÈáèÊòØÊàêÂëòÂèòÈáèÔºåÂú®ÂØπÁ±ªËøõË°åÂÆû‰æãÂåñÁöÑÊó∂ÂÄôÔºåÊó†ËÆ∫ËøõË°åÂ§öÂ∞ëÊ¨°ÂÆû‰æãÂåñÔºåÈùôÊÄÅÂèòÈáè‰πüÂè™‰ºöË¢´ÂÆû‰æãÂåñ‰∏ÄÊ¨°ÔºåËÄåÊàêÂëòÂèòÈáèÂàô‰∏çÂêåÔºåÂÆÉÊòØ‰º¥ÈöèÁùÄÂÆû‰æãÁöÑÔºåÊØèÂàõÂª∫‰∏Ä‰∏™ÂÆû‰æãÂ∞±‰ºö‰∫ßÁîü‰∏Ä‰∏™ÊàêÂëòÂèòÈáè„ÄÇ staticÊàêÂëòÂèòÈáèÁöÑÂàùÂßãÂåñÈ°∫Â∫èÊåâÁÖßÂÆö‰πâÁöÑÈ°∫Â∫èËøõË°åÂàùÂßãÂåñ„ÄÇ Âú®C/C++‰∏≠staticÊòØÂèØ‰ª•‰ΩúÁî®ÂüüÂ±ÄÈÉ®ÂèòÈáèÁöÑÔºå‰ΩÜÊòØÂú®Java‰∏≠staticÊòØ‰∏çÂÖÅËÆ∏Áî®Êù•‰øÆÈ•∞Â±ÄÈÉ®ÂèòÈáè„ÄÇ staticÊñπÊ≥ïÊúâstaticÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑÊñπÊ≥ïÂèØ‰ª•Áõ¥Êé•ÈÄöËøáÁ±ªÂêçËøõË°åË∞ÉÁî®„ÄÇÁî±‰∫éstaticÊñπÊ≥ïÂú®Á±ªÂä†ËΩΩÁöÑÊó∂ÂÄôÂ∞±Â∑≤ÁªèÂ≠òÂú®‰∫ÜÔºåÂÆÉ‰∏ç‰æùËµñ‰∫é‰ªª‰ΩïÂÆû‰æã„ÄÇ Ê≥®ÊÑèÔºåÂú®ÈùôÊÄÅÊñπÊ≥ï‰∏≠‰∏çËÉΩË∞ÉÁî®ÈùûÈùôÊÄÅÊàêÂëòÂíåÈùûÈùôÊÄÅÊñπÊ≥ïÔºåÂú®ÈùôÊÄÅÊñπÊ≥ïÂä†ËΩΩÁöÑÊó∂ÂÄôÈùûÈùôÊÄÅÊàêÂëòÂíåÊñπÊ≥ïËøòÊú™Âä†ËΩΩÔºõÁÑ∂ËÄåÔºåÂú®ÈùûÈùôÊÄÅÊñπÊ≥ï‰∏≠ÂèØ‰ª•Ë∞ÉÁî®ÈùôÊÄÅÊñπÊ≥ï„ÄÇ static‰ª£Á†ÅÂùóstaticÂÖ≥ÈîÆÂ≠óÁöÑ‰∏Ä‰∏™ÊØîËæÉÁâπÊÆäÁöÑÁî®Ê≥ïÂ∞±ÊòØÈùôÊÄÅ‰ª£Á†ÅÂùó„ÄÇÈùôÊÄÅ‰ª£Á†ÅÂùóÂêåÊ†∑ÊòØÂú®ËôöÊãüÊú∫Âä†ËΩΩÁ±ªÁöÑÊó∂ÂÄôÂ∞±‰ºö‰ºöË¢´Âä†ËΩΩÊâßË°åÔºåËÄå‰∏îÂè™ÊâßË°å‰∏ÄÊ¨°„ÄÇÂ¶ÇÊûústatic‰ª£Á†ÅÂùóÊúâÂ§ö‰∏™ÔºåJVMÂ∞ÜÊåâÁÖßÂÆÉ‰ª¨Âú®Á±ª‰∏≠Âá∫Áé∞ÁöÑÂÖàÂêéÈ°∫Â∫è‰æùÊ¨°ÊâßË°åÂÆÉ‰ª¨„ÄÇ ÈùôÊÄÅ‰ª£Á†ÅÂùó‰ΩúÁî®ÈùôÊÄÅ‰ª£Á†ÅÂùóÁöÑ‰∏Ä‰∏™ÊØîËæÉÈáçË¶ÅÁöÑ‰ΩúÁî®Â∞±ÊòØÂèØ‰ª•‰ºòÂåñÊÄßËÉΩ„ÄÇ ÊØîÂ¶Ç‰∏ãÈù¢ÁöÑ‰æãÂ≠êÔºö public class Student &#123; private Date birthDate; public Student(Date birthDate) &#123; this.birthDate = birthDate; &#125; boolean isBornBoomer() &#123; Date startDate = Date.valueOf("1946"); Date endDate = Date.valueOf("1964"); return birthDate.compareTo(startDate)&gt;=0 &amp;&amp; birthDate.compareTo(endDate) &lt; 0; &#125;&#125; isBornBoomerÊòØÂà§Êñ≠ËØ•‰∫∫ÊòØÂê¶ÊòØ1946Âπ¥Âà∞1964Âπ¥‰πãÈó¥Âá∫ÁîüÁöÑÔºåÊØèÊ¨°isBornBoomerË¢´Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÈÉΩ‰ºöÁîüÊàêstartDateÂíåendDate‰∏§‰∏™ÂØπË±°ÔºåÈÄ†Êàê‰∫ÜÁ©∫Èó¥Êµ™Ë¥πÔºåÂèØ‰ª•ÊîπÊàê‰∏ãÈù¢ÁöÑÂΩ¢ÂºèÔºö public class Student &#123; private Date birthDate; private static Date startDate,endDate; public Student(Date birthDate) &#123; this.birthDate = birthDate; &#125; static &#123; Date startDate = Date.valueOf("1946"); Date endDate = Date.valueOf("1964"); &#125; boolean isBornBoomer() &#123; return birthDate.compareTo(startDate)&gt;=0 &amp;&amp; birthDate.compareTo(endDate) &lt; 0; &#125;&#125; ÊâÄ‰ª•ÔºåÂèØ‰ª•ÂØπÂè™ËøõË°å‰∏ÄÊ¨°ÂàùÂßãÂåñÁöÑÊìç‰ΩúÊîæÂú®static‰ª£Á†ÅÂùó‰∏≠ËøõË°å„ÄÇ ÈùôÊÄÅ‰ª£Á†ÅÂùóÁöÑÊâßË°åÊó∂Êú∫Âú®Java‰∏≠Ôºå‰∏Ä‰∏™Á±ªÁöÑÂä†ËΩΩËøáÁ®ãÂàÜ‰∏∫‰∏â‰∏™Ê≠•È™§Ôºö1. Ë£ÖËΩΩ 2. ËøûÊé• 3. ÂàùÂßãÂåñ„ÄÇ ÈùôÊÄÅ‰ª£Á†ÅÂùóÊòØÂú®Á±ªÂàùÂßãÂåñÁöÑÊó∂ÂÄôÊâßË°åÁöÑÔºåÂàùÂßãÂåñÈò∂ÊÆµÔºåjvm‰∏ªË¶ÅÂÆåÊàêÂØπÈùôÊÄÅÂèòÈáèÁöÑÂàùÂßãÂåñÔºåÈùôÊÄÅÂùóÊâßË°åÁ≠âÂ∑•‰Ωú„ÄÇ Class A&#123; static&#123; System.out.println("static block invoked!") &#125;&#125; ‰∏äÈù¢ÁöÑ‰ª£Á†Å‰∏≠ new A()‰ºöÊâßË°åstatic‰ª£Á†ÅÂùó‰∏≠ÁöÑÂÜÖÂÆπ„ÄÇ Class.forName(&quot;A&quot;)‰ºöÊâßË°å‰ª£Á†ÅÂùó‰∏≠ÁöÑÂÜÖÂÆπÔºõËøô‰∏™ËøáÁ®ãÁõ∏ÂΩì‰∫éClass.forName(&quot;A&quot;, true, A.class.getClassLoader())„ÄÇ Class.forName(&quot;A&quot;, false, A.class.getClassLoader())‰∏ç‰ºöÊâßË°å‰ª£Á†ÅÂùó‰∏≠ÁöÑÂÜÖÂÆπÔºõÂõ†‰∏∫falseÊåáÊòé‰∫ÜÂú®Á±ªÂä†ËΩΩÁöÑËøáÁ®ã‰∏≠‰∏çËøõË°åÂàùÂßãÂåñÔºåÂ∞±‰∏ç‰ºöÊâßË°åstatic‰ª£Á†ÅÂùó‰∫Ü„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈÖçÁΩÆWireSharkÊäìÂèñhttpsÊï∞ÊçÆÂåÖ]]></title>
    <url>%2F2019%2F09%2F29%2F%E9%85%8D%E7%BD%AEWireShark%E6%8A%93%E5%8F%96https%E6%95%B0%E6%8D%AE%E5%8C%85%2F</url>
    <content type="text"><![CDATA[ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáèSSLKEYLOGFILE‰∏∫E:\ssl_key\sslog.log„ÄÇ ÂÆåÂÖ®ÈÄÄÂá∫chromeÊàñËÄÖfirefoxÊµèËßàÂô®ÔºåÁÑ∂ÂêéÈáçÊñ∞ÊâìÂºÄ„ÄÇÊâìÂºÄÊµèËßàÂô®ÔºåËÆøÈóÆ‰∏Ä‰∏™HTTPS ÁΩëÈ°µÔºåÁÑ∂ÂêéÊâìÂºÄÂàöÊâçSSLKEYLOGFILEÁéØÂ¢ÉÂèòÈáèÂÄºÁöÑÊñá‰ª∂Ë∑ØÂæÑÂ∞±ÂèØ‰ª•ÁúãÂà∞ÈöèÊú∫Â≠óÁ¨¶‰∏≤ËÆ∞ÂΩï„ÄÇ ÈÖçÁΩÆWireShark„ÄÇÊâìÂºÄÁºñËæë-&gt;È¶ñÈÄâÈ°π-&gt;ProtocolsÔºåÊâìÂºÄSSLÂØπÂÖ∂ËøõË°åÁºñËæëÔºàÊ≥®ÔºöwiresharkÂú®ÊüêÊ¨°ÁâàÊú¨Êõ¥Êñ∞‰πãÂêéÂéªÊéâ‰∫ÜSSLÈÄâÈ°πÔºåÊ≤°ÊúâSSLÈÄâÈ°πÁöÑÈúÄË¶ÅËÆæÁΩÆTSLÔºâÔºåÂ∞ÜÊó•ÂøóÊñá‰ª∂ÁöÑË∑ØÂæÑÊ∑ªÂä†Âà∞(Pre)-Master-Securet log file„ÄÇ ËÆøÈóÆwww.liuergo.top ÔºåÂú®WireShark‰∏≠ÂºÄÂßãÊäìÂåÖÔºåÂèØ‰ª•ÂèëÁé∞httpsÁöÑÊï∞ÊçÆÂåÖÂèØ‰ª•Ë¢´ÊäìÂà∞‰∫Ü„ÄÇ]]></content>
      <categories>
        <category>ËÆ°ÁÆóÊú∫ÁΩëÁªú</category>
        <category>WireShark</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ÁΩëÁªú</tag>
        <tag>WireShark</tag>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTTPÂçèËÆÆËØ¶Ëß£]]></title>
    <url>%2F2019%2F09%2F27%2FHTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Êú¨Êñá‰∏ªË¶ÅÊòØÂØπ„ÄäHTTPÂõæËß£„ÄãËøôÊú¨‰π¶ÁöÑÂ≠¶‰π†ËÆ∞ÂΩïÔºåÂä†‰∏ä‰∏Ä‰∫õÂÆûÈ™åËØæ‰∏≠‰ª•ÂèäËá™Â∑±ÂÅöÁöÑÂÆûÈ™åÊ∑±ÂÖ•Â≠¶‰π†HTTPÂçèËÆÆ„ÄÇ HTTPÂçèËÆÆ HTTPÂçèËÆÆÔºàHyperText Transfer ProtocolÔºåË∂ÖÊñáÊú¨‰º†ËæìÂçèËÆÆÔºâÊòØÂõ†ÁâπÁΩë‰∏äÂ∫îÁî®ÊúÄ‰∏∫ÂπøÊ≥õÁöÑ‰∏ÄÁßçÁΩëÁªú‰º†ËæìÂçèËÆÆÔºåÊâÄÊúâÁöÑWWWÊñá‰ª∂ÈÉΩÂøÖÈ°ªÈÅµÂÆàËøô‰∏™Ê†áÂáÜ„ÄÇ HTTPÊòØ‰∏Ä‰∏™Âü∫‰∫éTCP/IPÈÄö‰ø°ÂçèËÆÆÊù•‰º†ÈÄíÊï∞ÊçÆÔºàHTML Êñá‰ª∂, ÂõæÁâáÊñá‰ª∂, Êü•ËØ¢ÁªìÊûúÁ≠âÔºâ„ÄÇ ÂçèËÆÆÊä•ÊñáËß£ÊûêHTTPÊä•ÊñáÂ§ßËá¥ÂèØÂàÜ‰∏∫Êä•ÊñáÈ¶ñÈÉ®ÂíåÊä•Êñá‰∏ª‰Ωì‰∏§ÈÉ®ÂàÜÔºå‰∏§ËÄÖÁî±‰∏Ä‰∏™Á©∫Ë°åÂàíÂàÜ„ÄÇÈÄöÂ∏∏Ôºå‰∏ç‰∏ÄÂÆöË¶ÅÊúâÊä•Êñá‰∏ª‰ΩìÔºàGETÊñπÊ≥ïÂ∞±Ê≤°ÊúâÊä•Êñá‰∏ª‰ΩìÔºâ„ÄÇ ËØ∑Ê±ÇË°åÔºöÂåÖÂê´Áî®‰∫éËØ∑Ê±ÇÁöÑÊñπÊ≥ïÔºåËØ∑Ê±ÇÁöÑURIÂíåHTTPÁâàÊú¨„ÄÇ Áä∂ÊÄÅË°åÔºöÂåÖÂê´Ë°®ÊòéÂìçÂ∫îÁªìÊûúÁöÑÁä∂ÊÄÅÁ†ÅÔºåÁä∂ÊÄÅÁü≠ËØ≠ÂíåHTTPÁâàÊú¨„ÄÇ È¶ñÈÉ®Â≠óÊÆµÔºöÂåÖÂê´Ë°®Á§∫ËØ∑Ê±ÇÂíåÂìçÂ∫îÁöÑÂêÑÁßçÊù°‰ª∂ÂíåÂ±ûÊÄßÁöÑÂêÑÁ±ªÈ¶ñÈÉ®„ÄÇ Êä•Êñá‰∏ª‰ΩìÔºöÂ∫îË¢´ÂèëÈÄÅÁöÑÊï∞ÊçÆ„ÄÇ ÂÆûÈ™åÈ™åËØÅ ËæìÂÖ•URL: http://gaia.cs.umass.edu/ethereal-labs/HTTP-ethereal-file3.html Ôºå‰ΩøÁî®WireSharkÊäìÂåÖ„ÄÇ ËæìÂÖ•ËøáÊª§Ë°®ËææÂºètcp &amp;&amp; ip.addr==128.119.245.12 ËßÇÂØüÊäìÂà∞ÁöÑÊï∞ÊçÆÂåÖ ÈáçÁÇπÂÖ≥Ê≥®‰∏ãÈù¢Ëøô‰∏ÄÈÉ®ÂàÜ 352Âè∑ÂåÖ Ëøô‰∏™ÂåÖÂ∞±ÊòØÂÆ¢Êà∑Á´ØÂèëÈÄÅÁªôÊúçÂä°Á´ØHTTPGETËØ∑Ê±ÇÔºåÁî±ËØ∑Ê±ÇË°å„ÄÅÂêÑÁßçÈ¶ñÈÉ®Â≠óÊÆµÂíåÁ©∫Ë°åÁªÑÊàêÔºåÂú®GETËØ∑Ê±Ç‰∏≠ÔºåÊ≤°ÊúâËØ∑Ê±ÇÁöÑÊä•Êñá‰∏ª‰ΩìÈÉ®ÂàÜ„ÄÇ 384Âè∑ÂåÖ Âú®TCPÂçèËÆÆ‰∏≠ÔºåÂèëÈÄÅÂèåÊñπÊØèÂèëÂá∫‰∏Ä‰∏™ÂåÖÈÉΩË¶ÅÊúâÂìçÂ∫îÔºåÊ≠§ÂåÖÂ∞±ÊòØÊúçÂä°Á´ØÂØπÂàöÂàöÂèëÈÄÅÁöÑHTTPÁöÑGETÂåÖÁöÑÂìçÂ∫î„ÄÇ 386„ÄÅ387„ÄÅ389„ÄÅ390Âè∑ÂåÖ È¶ñÂÖàÔºå‰ªãÁªç‰∏Ä‰∏ãWireShark‰∏≠TCP segment of a ressembled PDUÁöÑÊ¶ÇÂøµÔºåÂú®TCPÂçèËÆÆ‰∏≠Ôºå‰ºöÂ∞Ü‰∏Ä‰∏™ËæÉÂ§ßÁöÑÊï∞ÊçÆÂåÖÂàÜÊàêÂæàÂ§ö‰∏™Â∞èÂåÖÂèëÂá∫ÂéªÔºåÂú®WireShark‰∏≠ÔºåTCP segment of a ressembled PDUÂ∞±ÊòØË¢´TCPÂçèËÆÆÊâÄÂàÜÊàêÁöÑ‰∏Ä‰∏™‰∏™Â∞èÁöÑÊï∞ÊçÆÂåÖ„ÄÇ ÂÖ∂ÂÆûÔºåËøôÂõõ‰∏™ÂåÖÈÉΩÊòØTCPÂàÜÊàêÁöÑÂ∞èÂåÖÔºåWireSharkÂú®ÊúÄÂêé‰∏Ä‰∏™httpÂåÖ‰∏≠Â∞ÜÊâÄÊúâÁöÑÂåÖÈÉΩËøõË°å‰∫ÜÈáçÊñ∞ÊãºÂåÖ„ÄÇ Êü•Áúã386Âè∑Êï∞ÊçÆÂåÖ ÁÇπÂáªTCP segment dataÔºåÊü•ÁúãÊ≠§segmentÁöÑÊï∞ÊçÆÂÜÖÂÆπÔºåÂèëÁé∞ÂÖ∂‰∏≠ÁöÑÊï∞ÊçÆÂ∞±ÊòØhttpÊä•ÊñáÔºåÂè™‰∏çËøáÊòØÊúçÂä°Âô®ËøîÂõûÁöÑhttpÈïøÊä•ÊñáÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇ Êü•Áúã390Âè∑Êï∞ÊçÆÂåÖ ÊâìÂºÄ4 Reassembled TCP SegmentsÔºåÂèØ‰ª•ÁúãÂà∞ÊâÄÊúâË¢´TCPÊâÄÂàÜÊàêÁöÑÂõõ‰∏™Â∞èÊï∞ÊçÆÂåÖÔºåÊ≠£ÊòØ386Ôºå387Ôºå389Ôºå390Âè∑ÂåÖ„ÄÇ Êü•ÁúãHTTPÊï∞ÊçÆÂåÖÁöÑÂÜÖÂÆπ Ê≠§Êï∞ÊçÆÂåÖÊòØÊúçÂä°Á´ØËøîÂõûÁöÑHTTPÊä•ÊñáÔºåÁî±Áä∂ÊÄÅË°å„ÄÅÈ¶ñÈÉ®Â≠óÊÆµ„ÄÅÊä•Êñá‰∏ª‰ΩìÂíåÁ©∫Ë°åÁªÑÊàê„ÄÇÈÄöËøáLine-based text dataÂèØ‰ª•Êü•ÁúãÂÖ∑‰ΩìÁöÑÊä•Êñá‰∏ª‰ΩìÈÉ®ÂàÜÁöÑÊï∞ÊçÆ„ÄÇ HTTPÊñπÊ≥ïGETÔºöËé∑ÂèñËµÑÊ∫êGETÊñπÊ≥ïÁî®Êù•ËØ∑Ê±ÇËÆøÈóÆÂ∑≤Ë¢´URIËØÜÂà´ÁöÑËµÑÊ∫ê„ÄÇÊåáÂÆöÁöÑËµÑÊ∫êÁªèÊúçÂä°Á´ØËß£ÊûêÂêéËøîÂõûÂìçÂ∫îÁöÑÂÜÖÂÆπ„ÄÇ POSTÔºö‰º†ËæìÂÆû‰ΩìÁöÑ‰∏ª‰ΩìÁä∂ÊÄÅÁ†Å##]]></content>
      <categories>
        <category>ËÆ°ÁÆóÊú∫ÁΩëÁªú</category>
        <category>HTTP</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ÁΩëÁªú</tag>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ°ÁÆóÊú∫ÁΩëÁªúÁü•ËØÜÁÇπÊï¥ÁêÜÔºàÊåÅÁª≠Êõ¥Êñ∞...Ôºâ]]></title>
    <url>%2F2019%2F09%2F27%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[Êú¨Â≠¶ÊúüÂ≠¶‰π†‰∫ÜËÆ°ÁÆóÊú∫ÁΩëÁªúÔºåÊú¨ÊñáÂ∞ÜÊï¥ÁêÜËÆ°ÁÆóÊú∫ÁΩëÁªúÁöÑ‰∏Ä‰∫õÂü∫Á°ÄÁü•ËØÜÁÇπÔºå‰æõËá™Â∑±‰ª•ÂêéÊü•ÈòÖ„ÄÇ ËÆ°ÁÆóÊú∫ÁΩëÁªúÁöÑÂá†ÁßçÂàÜÂ±ÇÁªìÊûÑËÆ°ÁÆóÊú∫ÁΩëÁªúÈÄöÂ∏∏ÂèØ‰ª•ËøõË°å‰∏ãÈù¢ÁöÑÂá†ÁßçÂàÜÂ±ÇÊñπÂºèÔºö ‰∏ÉÂ±ÇÂàíÂàÜ‰∏∫ÔºöÂ∫îÁî®Â±Ç„ÄÅË°®Á§∫Â±Ç„ÄÅ‰ºöËØùÂ±Ç„ÄÅ‰º†ËæìÂ±Ç„ÄÅÁΩëÁªúÂ±Ç„ÄÅÊï∞ÊçÆÈìæË∑ØÂ±Ç„ÄÅÁâ©ÁêÜÂ±Ç„ÄÇ ‰∫îÂ±ÇÂàíÂàÜ‰∏∫ÔºöÂ∫îÁî®Â±Ç„ÄÅ‰º†ËæìÂ±Ç„ÄÅÁΩëÁªúÂ±Ç„ÄÅÊï∞ÊçÆÈìæË∑ØÂ±Ç„ÄÅÁâ©ÁêÜÂ±Ç„ÄÇ ÂõõÂ±ÇÂàíÂàÜ‰∏∫ÔºöÂ∫îÁî®Â±Ç„ÄÅ‰º†ËæìÂ±Ç„ÄÅÁΩëÁªúÂ±Ç„ÄÅÁΩëÁªúÊé•Âè£Â±Ç„ÄÇ ‰∏ãÈù¢Âü∫Êú¨‰ª•‰∫îÂ±ÇÊû∂ÊûÑ‰∏∫Ê†áÂáÜËÆ≤Ëß£ ÊØèÂ±ÇÂ∏∏Áî®ÁöÑÁΩëÁªúÂçèËÆÆ Â±Ç ÁΩëÁªúÂçèËÆÆ Â∫îÁî®Â±Ç http DNS FTP TFTP Telnet SMTP ‰º†ËæìÂ±Ç TCP UDP ÁΩëÁªúÂ±Ç IP ICMP RIP ICMP Êï∞ÊçÆÈìæË∑ØÂ±Ç ARP RARP ÊØèÂ±ÇËæÉÈáçË¶ÅÁöÑÂçèËÆÆÂ∫îÁî®Â±Ç ÂçèËÆÆÂêçÁß∞ Âü∫Êú¨‰ªãÁªç http Ë∂ÖÊñáÊú¨‰º†ËæìÂçèËÆÆÔºåÊòØÁî®‰∫é‰ªé‰∏áÁª¥ÁΩëÊúçÂä°Âô®‰º†ËæìË∂ÖÊñáÊú¨Âà∞Êú¨Âú∞ÊµèËßàÂô®ÁöÑ‰º†ÈÄÅÂçèËÆÆÔºåÂü∫‰∫éTCP/IPÂçèËÆÆÈÄö‰ø°„ÄÇ DNS Â∞ÜÂüüÂêçËß£Êûê‰∏∫IPÂú∞ÂùÄÁöÑÂçèËÆÆÔºåÂü∫‰∫éUDPÂçèËÆÆÈÄö‰ø°„ÄÇ FTP Êñá‰ª∂‰º†ËæìÂçèËÆÆ„ÄÇ TFTP ÁÆÄÂçïÊñá‰ª∂‰º†ËæìÂçèËÆÆ„ÄÇ Telnet ‰∏∫Áî®Êà∑Êèê‰æõ‰∫ÜÂú®Êú¨Âú∞ËÆ°ÁÆóÊú∫‰∏äÂÆåÊàêËøúÁ®ã‰∏ªÊú∫Â∑•‰ΩúÁöÑËÉΩÂäõ„ÄÇ SMTP ÁÆÄÂçïÈÇÆ‰ª∂‰º†ËæìÂçèËÆÆ„ÄÇ ‰º†ËæìÂ±Ç ÂçèËÆÆÂêçÁß∞ Âü∫Êú¨‰ªãÁªç TCP TCPÂçèËÆÆÊòØ‰∏ÄÁßçÈù¢ÂêëËøûÊé•ÁöÑ„ÄÅÂèØÈù†ÁöÑ„ÄÅÂü∫‰∫éÂ≠óËäÇÊµÅÁöÑ‰º†ËæìÂ±ÇÈÄö‰ø°ÂçèËÆÆ„ÄÇ UDP UDPÂçèËÆÆÊòØ‰∏ÄÁßçÊó†ËøûÊé•ÁöÑÁÆÄÂçï‰º†ËæìÂçèËÆÆ„ÄÇ ÁΩëÁªúÂ±Ç ÂçèËÆÆÂêçÁß∞ Âü∫Êú¨‰ªãÁªç IP IPÂçèËÆÆ‰∏ç‰ªÖÂÆö‰πâ‰∫ÜÊï∞ÊçÆ‰º†ËæìÊó∂ÁöÑÂü∫Êú¨ÂçïÂÖÉÂíåÊ†ºÂºèÔºåËøòÂÆö‰πâ‰∫ÜÊï∞ÊçÆÊä•ÁöÑÈÄí‰∫§ÊñπÊ≥ïÂíåË∑ØÁî±ÈÄâÊã©„ÄÇ ICMP Èù¢ÂêëÊó†ËøûÊé•ÁöÑÂçèËÆÆÔºåÁî®‰∫é‰º†ËæìÂá∫ÈîôÊä•ÂëäÊéßÂà∂‰ø°ÊÅØ„ÄÇÔºàpingÂëΩ‰ª§Â∞±ÊòØ‰ΩøÁî®ÁöÑËØ•ÂçèËÆÆÔºåpingËôΩÁÑ∂Â§ÑÂú®Â∫îÁî®Â±ÇÔºå‰ΩÜÊòØÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®ÁΩëÁªúÂ±ÇÁöÑICMPÂçèËÆÆÔºâ RIP ÊòØ‰∏ÄÁßçÂÜÖÈÉ®ÁΩëÂÖ≥ÂçèËÆÆÔºåÊòØ‰∏ÄÁßçÂä®ÊÄÅË∑ØÁî±ÈÄâÊã©ÂçèËÆÆÔºåÁî®‰∫éËá™Ê≤ªÁ≥ªÁªüÔºàASÔºâÂÜÖÁöÑË∑ØÁî±‰ø°ÊÅØÁöÑ‰º†ÈÄí„ÄÇ Êï∞ÊçÆÈìæË∑ØÂ±Ç ÂçèËÆÆÂêçÁß∞ Âü∫Êú¨‰ªãÁªç ARP Âú∞ÂùÄËß£ÊûêÂçèËÆÆÔºåÂèØ‰ª•Ê†πÊçÆIPÂú∞ÂùÄËé∑ÂèñÁâ©ÁêÜÂú∞ÂùÄ„ÄÇ RARP ÂèçÂêëÂú∞ÂùÄËΩ¨Êç¢ÂçèËÆÆÔºåÂèØ‰ª•Ê†πÊçÆÁâ©ÁêÜÂú∞ÂùÄËé∑ÂèñIPÂú∞ÂùÄ„ÄÇ Â∏∏Áî®Á´ØÂè£Âè∑Ê¶ÇËø∞ËÆ°ÁÆóÊú∫Á´ØÂè£Âè∑ÊÄªÊï∞Ôºö65535„ÄÇ 0-1023Ôºö Á≥ªÁªüÁ´ØÂè£Ôºå‰πüÂè´ÂÖ¨ËÆ§Á´ØÂè£ÔºåËøô‰∫õÁ´ØÂè£Âè™ÊúâÁ≥ªÁªüÁâπËÆ∏ÁöÑËøõÁ®ãÊâçËÉΩ‰ΩøÁî®„ÄÇ 1024~65535ÔºöÁî®Êà∑Á´ØÂè£ÔºåÁî®Êà∑ÂèØ‰ª•Ëá™ÂÆö‰πâËøô‰∫õÁ´ØÂè£ÁöÑ‰ΩúÁî®„ÄÇ Â∏∏Áî®Á´ØÂè£ ÂçèËÆÆ/ÊúçÂä°ÂêçÁß∞ Á´ØÂè£Âè∑ http 80 https 443 www‰ª£ÁêÜÊúçÂä° 8080 ssh 22 DNS 53 FTP 20ÔºàÁî®‰∫éËøûÊé•Ôºâ„ÄÅ21ÔºàÁî®‰∫é‰º†ËæìÔºâ Telnet 23]]></content>
      <categories>
        <category>ËÆ°ÁÆóÊú∫ÁΩëÁªú</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ÁΩëÁªú</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaÂ∫èÂàóÂåñ]]></title>
    <url>%2F2019%2F09%2F26%2FJava%E5%BA%8F%E5%88%97%E5%8C%96%2F</url>
    <content type="text"><![CDATA[Â∫èÂàóÂåñ‰ªãÁªç Â∫èÂàóÂåñÔºöÂ∞ÜÂØπË±°ÂÜôÂÖ•Âà∞IOÊµÅ‰∏≠ ÂèçÂ∫èÂàóÂåñÔºöÂ∞ÜÂØπË±°‰ªéIOÊµÅ‰∏≠ÊÅ¢Â§ç Â∫èÂàóÂåñÁöÑÊÑè‰πâÔºöÂ∫èÂàóÂåñÊú∫Âà∂ÂÖÅËÆ∏Â∞ÜÂÆûÁé∞Â∫èÂàóÂåñÁöÑJavaÂØπË±°ËΩ¨Êç¢‰ΩçÂ≠óËäÇÂ∫èÂàóÔºåËøô‰∫õÂ≠óËäÇÂ∫èÂàóÂèØ‰ª•‰øùÂ≠òÂú®Á£ÅÁõò‰∏äÔºåÊàñÈÄöËøáÁΩëÁªú‰º†ËæìÔºå‰ª•ËææÂà∞‰ª•ÂêéÊÅ¢Â§çÊàêÂéüÊù•ÁöÑÂØπË±°„ÄÇÂ∫èÂàóÂåñÊú∫Âà∂‰ΩøÂæóÂØπË±°ÂèØ‰ª•ËÑ±Á¶ªÁ®ãÂ∫èÁöÑËøêË°åËÄåÁã¨Á´ãÂ≠òÂú®ÔºåËÄå‰∏îËøôÊï¥‰∏™ËøáÁ®ãÈÉΩÊòØÁã¨Á´ã‰∫éJVMËøõË°åÁöÑ„ÄÇ ‰ΩøÁî®Âú∫ÊôØÔºöÊâÄÊúâÂú®ÁΩëÁªú‰∏ä‰º†ËæìÁöÑÂØπË±°ÈÉΩÈúÄË¶ÅËøõË°åÂ∫èÂàóÂåñÔºåÊØîÂ¶ÇÂú®‰ΩøÁî®RMI(ËøúÁ®ãÊñπÊ≥ïË∞ÉÁî®)Êó∂ÔºõÊâÄÊúâÈúÄË¶Å‰øùÂ≠òÂà∞Á£ÅÁõò‰∏äÁöÑJavaÂØπË±°ÂøÖÈ°ªÊòØÂèØ‰ª•Ë¢´Â∫èÂàóÂåñÁöÑ„ÄÇÈÄöÂ∏∏Á®ãÂ∫èÂàõÂª∫ÁöÑÊØè‰∏™JavaBeanÈÉΩË¶ÅÂÆûÁé∞SerializeableÊé•Âè£„ÄÇ ÂÆûÁé∞Â∫èÂàóÂåñÂ¶ÇÊûú‰∏Ä‰∏™Á±ªË¶ÅÂÆûÁé∞Â∫èÂàóÂåñÔºåÈÇ£‰πàËøô‰∏™Á±ªÂ∫îËØ•ÂÆûÁé∞SerializableÊé•Âè£ÊàñËÄÖExternalizableÊé•Âè£„ÄÇ SerializableÊé•Âè£SerializableÊé•Âè£ÊòØ‰∏™Ê†áËÆ∞Êé•Âè£ÔºåÂíå‰πãÂâçÊèêÂà∞ÁöÑRandomAccessÊé•Âè£‰∏ÄÊ†∑ÔºåÊé•Âè£‰∏≠Ê≤°Êúâ‰ªª‰ΩïÊñπÊ≥ï„ÄÇ‰∏ÄÊó¶ÂÆûÁé∞‰∫ÜËØ•Á±ªÔºåÂ∞±Ë°®ÊòéËØ•Á±ªÊòØÂèØÂ∫èÂàóÂåñÁöÑ„ÄÇ Â∫èÂàóÂåñÊ≠•È™§ Áõ∏Â∫îÁöÑÁ±ªÂÆûÁé∞SerializeableÊé•Âè£„ÄÇ Student.java /** * @paragram: SerializeDemo * @description: Â≠¶ÁîüÁ±ª * @auhor: liuergo * @date: 2019-09-26 21:55 */public class Student implements Serializable &#123; private String name; private int age; public Student(String name, int age) &#123; this.name = name; this.age = age; &#125; @Override public String toString() &#123; return "Student&#123;" + "name='" + name + '\'' + ", age='" + age + '\'' + '&#125;'; &#125; ÂàõÂª∫‰∏Ä‰∏™ObjectOutputStreamËæìÂá∫ÊµÅÔºåÂπ∂Ë∞ÉÁî®ObjectOutputStreamÂØπË±°ÁöÑwriteObjectËæìÂá∫ÂèØÂ∫èÂàóÂåñÂØπË±°„ÄÇ public static void main(String[] args) &#123; try &#123; ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream("Student.txt")); Student student = new Student("‰∫åÁãó", 18); objectOutputStream.writeObject(student); &#125; catch (IOException e) &#123; e.printStackTrace() &#125;&#125; ËøôÊó∂Ôºå‰ºöÁîüÊàê‰∏Ä‰∏™Student.txtÊñá‰ª∂„ÄÇ ÂèçÂ∫èÂàóÂåñÊ≠•È™§ÂàõÂª∫‰∏Ä‰∏™ObjectInputStreamËæìÂÖ•ÔºåÂπ∂Ë∞ÉÁî®ObjectInputStreamÂØπË±°ÁöÑreadObjectÊñπÊ≥ï„ÄÇ public static void main(String[] args) &#123; try &#123; ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream("Student.txt")); Student student = (Student) objectInputStream.readObject(); System.out.println(student.toString()); &#125; catch (IOException | ClassNotFoundException e) &#123; e.printStackTrace(); &#125;&#125;//ËæìÂá∫ÁªìÊûú//Student&#123;name='‰∫åÁãó', age='18'&#125; ÂèçÂ∫èÂàóÂåñ‰∏çÈúÄË¶ÅË∞ÉÁî®ÊûÑÈÄ†ÊñπÊ≥ïÔºåÂÖ∂ÂèçÂ∫èÂàóÂåñÁöÑÂØπË±°ÊòØÁî±JVMËá™Â∑±ÁîüÊàêÁöÑÂØπË±°Ôºå‰∏çÈúÄË¶ÅÊûÑÈÄ†ÊñπÊ≥ïÁîüÊàê„ÄÇ ÂØπÂêå‰∏Ä‰∏™ÂØπË±°Â§öÊ¨°Â∫èÂàóÂåñpublic static void main(String[] args) &#123; try &#123; ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream("Student")); Student student = new Student("‰∫åÁãó", 18); Student student1 = new Student("Â§ßÈπÖ", 18); Student student2 = new Student("‰∏âËôé", 19); objectOutputStream.writeObject(student); objectOutputStream.writeObject(student1); objectOutputStream.writeObject(student2); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; try &#123; ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream("Student")); Student student = (Student) objectInputStream.readObject(); System.out.println(student.toString()); &#125; catch (IOException | ClassNotFoundException e) &#123; e.printStackTrace(); &#125;&#125;//ËøêË°åÁªìÊûú//Student&#123;name='‰∫åÁãó', age='18'&#125; ‰ªéËøêË°åÁªìÊûúÂèØ‰ª•ÁúãÂá∫ÔºåÂú®ÂØπ‰∏Ä‰∏™ÂØπË±°ËøõË°åÂ∫èÂàóÂåñ‰πãÂêéÔºåÂπ∂‰∏ç‰ºöÂÜçÊ¨°ÂØπÂÖ∂ËøõË°åÂ∫èÂàóÂåñ„ÄÇ ÊâÄ‰ª•ÔºåËØ•Â∫èÂàóÂåñÁÆóÊ≥ïÂ≠òÂú®ËøôÊ†∑‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ¶ÇÊûúÂú®ÂØπ‰∏Ä‰∏™ÂØπË±°ËøõË°åÂ∫èÂàóÂåñ‰πãÂêéÔºåÈúÄË¶Å‰øÆÊîπËØ•ÂØπË±°ÁöÑÂÜÖÂÆπÔºåÁ¨¨‰∫åÊ¨°Â∫èÂàóÂåñÂπ∂‰∏ç‰ºöÊàêÂäü„ÄÇ transientÂÖ≥ÈîÆÂ≠óÂ¶ÇÊûúÊúâÊó∂ÂÄôÂØπË±°ÁöÑÊüê‰∫õÂ±ûÊÄß‰∏çÈúÄË¶ÅÂ∫èÂàóÂåñ„ÄÇËøôÊó∂ÂÄôÂ∞±ÂèØ‰ª•‰ΩøÁî®ËØ•ÂÖ≥ÈîÆÂ≠óÈÄâÊã©‰∏çÈúÄË¶ÅÂ∫èÂàóÂåñÁöÑÂ±ûÊÄß„ÄÇ public class Student implements Serializable&#123; private transient String name; private int age; ...&#125; ËøôÊó∂Â∫èÂàóÂåñÁöÑÁªìÊûúÂ∞±ÂèòÊàê‰∫ÜStudent{name=&#39;null&#39;, age=&#39;18&#39;}ÔºåËøôÊ†∑ÔºåÂ∫èÂàóÂåñÁöÑÊó∂ÂÄôÂ∞±Ëá™Âä®ÂøΩÁï•‰∫ÜnameËøô‰∏™Â±ûÊÄß„ÄÇ ExternalizableÊé•Âè£ Externalizable.java public interface Externalizable extends java.io.Serializable &#123; void writeExternal(ObjectOutput out) throws IOException; void readExternal(ObjectInput in) throws IOException, ClassNotFoundException;&#125; ÂèØ‰ª•ÁúãÂà∞ÔºåËØ•Êé•Âè£Êúâ‰∏§‰∏™ÊñπÊ≥ïÔºåÂÆûÁé∞ËØ•Êé•Âè£ÔºåÂøÖÈ°ªË¶ÅÂÆûÁé∞writeExternal„ÄÅreadExternal‰∏§‰∏™ÊñπÊ≥ï„ÄÇ public class Student implements Externalizable &#123; private String name; private int age; public Student(String name, int age) &#123; this.name = name; this.age = age; &#125; @Override public void writeExternal(ObjectOutput out) throws IOException &#123; StringBuffer reverseString = new StringBuffer(this.name).reverse(); out.writeObject(reverseString); out.writeInt(this.age); &#125; @Override public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException &#123; this.name = ((StringBuffer) in.readObject()).reverse().toString(); this.age = in.readInt(); &#125;&#125; StudentÁ±ªÁªßÊâøExternalizableÊé•Âè£‰πãÂêéÔºåÂÆûÁé∞‰∏§‰∏™ÊñπÊ≥ïÔºåÂú®writeExternalÊñπÊ≥ï‰∏≠ÔºåÂèØ‰ª•ÂØπÂÖ∂ËøõË°å‰∏ÄÂä†ÂØÜ‰ª•‰øùËØÅÂÆâÂÖ®ÊÄßÔºåÊ≥®ÊÑèË¶ÅÂú®readExternalÊñπÊ≥ï‰∏≠ÂÜôÁõ∏Â∫îÁöÑËß£ÂØÜÊñπÊ≥ïÔºõËÄå‰∏îÂ¶ÇÊûú‰∏çÈúÄË¶ÅÂØπÊüê‰∏™Â±ûÊÄßËøõË°åÂ∫èÂàóÂåñÁöÑËØùÔºåÂ∞±ÂèØ‰ª•Áõ¥Êé•ÂéªÊéâÊüê‰∏™Â±ûÊÄßÂ∫èÂàóÂåñÁöÑËØ≠Âè•ÔºåÁõ∏ÂΩì‰∫éÂÆûÁé∞‰∫ÜtransientÂÖ≥ÈîÆÂ≠óÁöÑ‰ΩúÁî®„ÄÇ public static void main(String[] args) throws Exception&#123; Student student = new Student("‰∫åÁãó", 18); try &#123; ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream("Student")); objectOutputStream.writeObject(student); ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream("Student")); Student student1 = (Student) objectInputStream.readObject(); System.out.println(student1); &#125; catch (IOException | ClassNotFoundException e) &#123; e.printStackTrace(); &#125;&#125; Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑ‰ª£Á†ÅÂíå‰πãÂâçÁöÑÊòØ‰∏ÄÊ†∑ÁöÑÔºåÁúãÂà∞ËøôÈáåÂèØËÉΩÊàñ‰∫ßÁîü‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂú®‰∏äÈù¢ÁöÑ‰∏ÄÊÆµ‰ª£Á†Å‰∏≠ÔºåÂπ∂Ê≤°ÊúâÁúãÂà∞ÂàöÂàöÁöÑwriteExternalÂíåreadExternalË¢´ÊòæÂºèË∞ÉÁî®ÔºåÈÇ£‰πàËøô‰∏§‰∏™ÊñπÊ≥ïÂà∞Â∫ïÊòØÂ¶Ç‰ΩïË¢´Ë∞ÉÁî®ÁöÑÂë¢Ôºü Êü•ÁúãObjectOutputStreamÁöÑÊ∫êÁ†ÅÔºåÂØπ‰∫é‰∏Ä‰∏™ÂÆûÁé∞‰∫ÜEXternalizableÊé•Âè£ÁöÑÁ±ªÊù•ËØ¥ÔºåÂèØ‰ª•ÁúãÂá∫writeObjectÁöÑË∞ÉÁî®Ê†àÔºö writeObject-&gt;writeObject0-&gt;writeOrdinaryObject-&gt;writeExternalData ObjectOutputStream.java private void writeObject0(Object obj, boolean unshared) throws IOException&#123;......// remaining cases if (obj instanceof String) &#123; writeString((String) obj, unshared); &#125; else if (cl.isArray()) &#123; writeArray(obj, desc, unshared); &#125; else if (obj instanceof Enum) &#123; writeEnum((Enum&lt;?&gt;) obj, desc, unshared); &#125; else if (obj instanceof Serializable) &#123; writeOrdinaryObject(obj, desc, unshared); &#125;......&#125;private void writeOrdinaryObject(Object obj, ObjectStreamClass desc, boolean unshared) throws IOException&#123;...... if (desc.isExternalizable() &amp;&amp; !desc.isProxy()) &#123; writeExternalData((Externalizable) obj); &#125; else &#123; writeSerialData(obj, desc); &#125;......&#125;/** * Writes externalizable data of given object by invoking its * writeExternal() method. */private void writeExternalData(Externalizable obj) throws IOException &#123; PutFieldImpl oldPut = curPut; curPut = null; if (extendedDebugInfo) &#123; debugInfoStack.push("writeExternal data"); &#125; SerialCallbackContext oldContext = curContext; try &#123; curContext = null; if (protocol == PROTOCOL_VERSION_1) &#123; obj.writeExternal(this); &#125; else &#123; bout.setBlockDataMode(true); obj.writeExternal(this); bout.setBlockDataMode(false); bout.writeByte(TC_ENDBLOCKDATA); &#125; &#125; finally &#123; curContext = oldContext; if (extendedDebugInfo) &#123; debugInfoStack.pop(); &#125; &#125;&#125; ‚≠ê‰∏äÈù¢ÁöÑÈÉ®ÂàÜÊ∫êÁ†ÅÁªôÂá∫‰∫ÜË∞ÉÁî®Ê†àÁöÑÂêé‰∏â‰∏™ÊñπÊ≥ïÔºåÈÄöËøáÊ∫êÁ†ÅÂèØ‰ª•ÂæàÊ∏ÖÊô∞Âú∞ÁúãÂá∫ÔºåÁî±‰∫éExternalizableÊé•Âè£‰πüÂÆûÁé∞‰∫ÜSerializableÊé•Âè£ÔºåÊâÄ‰ª•Âú®writeObject0ÊñπÊ≥ï‰∏≠È¶ñÂÖàÁªèËøáobj instanceof SerializableËøõÂÖ•writeOrdinaryObjectÊñπÊ≥ïÔºåÂú®ËøôÈáåÂØπËØ•ÂØπË±°ÊòØÂê¶ÂÆûÁé∞‰∫ÜExternalizableÊé•Âè£ËøõË°å‰∫ÜÂà§Êñ≠ÔºàÂ¶ÇÊûúÊòØÁªßÊâø‰∫ÜSerializableÊé•Âè£Ôºå‰ºöË∞ÉÁî®writeSerialDataÊñπÊ≥ïÔºåËøôÁßçÊÉÖÂÜµ‰ºöÂú®‰∏ãÈù¢ËÆ≤Ëß£ÔºâÔºåÊúÄÂêéË∞ÉÁî®writeExternalDataÊñπÊ≥ïÔºåÂèØ‰ª•ÁúãÂà∞Âú®ËØ•ÊñπÊ≥ï‰∏≠‰ºöË∞ÉÁî®Âú®Á±ª‰∏≠ÈáçÂÜôÁöÑwriteExternalÊñπÊ≥ï„ÄÇ üêûÁ¨¨‰∏ÄÊ¨°ËøêË°åÁöÑÊó∂ÂÄôÔºåÊä•‰∫Ü‰ª•‰∏ãÂºÇÂ∏∏Ôºåno valid constructorÔºåÊ≤°ÊúâÂêàÊ≥ïÁöÑÊûÑÈÄ†Âô®ÔºåËøôÊòØÂõ†‰∏∫StudentÁ±ª‰∏≠Ê≤°Êúâ‰∏Ä‰∏™Êó†ÂèÇÁöÑÊûÑÈÄ†Âô®„ÄÇÂú®ÈÄöËøáÂÆûÁé∞Êé•Âè£ExternalizableËøõË°åÂ∫èÂàóÂåñËØªÂèñÂØπË±°Êó∂Ôºå‰ºöË∞ÉÁî®Ë¢´Â∫èÂàóÂåñÁ±ªÁöÑÊó†ÂèÇÊûÑÈÄ†Âô®ÂéªÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂØπË±°ÔºåÁÑ∂ÂêéÂÜçÂ∞ÜË¢´‰øùÂ≠òÂØπË±°ÁöÑÂ≠óÊÆµÁöÑÂÄºÂàÜÂà´Â°´ÂÖÖÂà∞Êñ∞ÂØπË±°‰∏≠„ÄÇÊâÄ‰ª•ÔºåÂÆûÁé∞ExternalizableÊé•Âè£ÁöÑÁ±ªÂøÖÈ°ªË¶ÅÊèê‰æõ‰∏Ä‰∏™publicÁöÑÊó†ÂèÇÁöÑÊûÑÈÄ†Âô®ÔºåÂ¢ûÂä†‰∏Ä‰∏™Êó†ÂèÇÊûÑÈÄ†Âô®‰πãÂêéÂ∞±‰∏ç‰ºöÊä•Ëøô‰∏™ÂºÇÂ∏∏‰∫Ü„ÄÇ serialVersionUIDÂú®Â≠¶‰π†ÈõÜÂêàÁ±ªÁöÑÊó∂ÂÄôÁªèÂ∏∏ËÉΩÂú®Ê∫êÁ†Å‰∏≠ÁúãËßÅserialVersionUIDÔºåÂΩìÊó∂Âè™ÊòØÁü•ÈÅìÂíåÂ∫èÂàóÂåñÊúâÂÖ≥Ôºå‰ªäÂ§©Â∞±Ê∑±ÂÖ•‰∫ÜËß£‰∏Ä‰∏ã„ÄÇ JVMÊòØÂê¶ÂÖÅËÆ∏ÂèçÂ∫èÂàóÂåñÔºå‰∏ç‰ªÖÂèñÂÜ≥‰∫éÁ±ªË∑ØÂæÑÂíåÂäüËÉΩ‰ª£Á†ÅÊòØÂê¶‰∏ÄËá¥Ôºå‰∏Ä‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑ‰∏ÄÁÇπÊòØ‰∏§‰∏™Á±ªÁöÑÂ∫èÂàóÂåñ ID ÊòØÂê¶‰∏ÄËá¥ÔºåÂç≥serialVersionUID„ÄÇ Â¶ÇÊûúÂèçÂ∫èÂàóÂåñÊó∂ÂÄôÁöÑ‰ΩøÁî®ÁöÑÂ∫èÂàóÂåñID‰∏éÂ∫èÂàóÂåñÊó∂‰ΩøÁî®ÁöÑID‰∏çÂêåÁöÑËØùÔºåÂ∞±‰ºöÊä•InvalidClassExceptionÂºÇÂ∏∏„ÄÇ ÈúÄË¶ÅÁâπÂà´ËØ¥ÊòéÁöÑÊòØÔºåÂ¶ÇÊûúÊñ∞Á±ª‰∏≠ÂÆû‰æãÂèòÈáèÁöÑÁ±ªÂûã‰∏éÂ∫èÂàóÂåñÊó∂Á±ªÁöÑÁ±ªÂûã‰∏ç‰∏ÄËá¥ÔºåÂàô‰ºöÂèçÂ∫èÂàóÂåñÂ§±Ë¥•ÔºåËøôÊó∂ÂÄôÈúÄË¶ÅÊõ¥ÊîπserialVersionUID„ÄÇ ‚≠êÊâÄ‰ª•ÔºåÂú®ÁºñÂÜôÊüê‰∏™JavaBeanÊó∂ÔºåÊúÄÂ•ΩÊòØÁªôËøô‰∏™serialVersionUIDËµãÂÄºÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÈÅøÂÖç‰ª•ÂêéÂú®Êõ¥Êñ∞Á±ªÁöÑÊó∂ÂÄô‰∫ßÁîüÂºÇÂ∏∏ÔºåÊñπ‰æøÂçáÁ∫ß„ÄÇ ArrayListÁöÑÂ∫èÂàóÂåñÊúÄÂàùÂ≠¶‰π†Â∫èÂàóÂåñÁöÑÂéüÂõ†ÔºåÊòØÂõ†‰∏∫‰∏ÄÂºÄÂßãÁúãArrayListÊ∫êÁ†ÅÁöÑÊó∂ÂÄôÔºå‰∏çÁü•ÈÅìserialVersionUID‰∏ÄÂ§ß‰∏≤Êï∞Â≠óÊòØÂπ≤ÂòõÁöÑÔºå‰πü‰∏çÁü•ÈÅìtransientÂÖ≥ÈîÆÂ≠óÁöÑÂê´‰πâÔºåÁé∞Âú®Â≠¶‰π†ÂÆåÂ∫èÂàóÂåñ‰πãÂêéÂÜçÂõûËøáÂ§¥Êù•ÁúãArrayListÁöÑÊ∫êÁ†Å„ÄÇ‰ªéArrayListÁöÑÊ∫êÁ†ÅÂºÄÂßãÔºåÊàë‰ª¨È¶ñÂÖàÂÖ≥Ê≥®‰∏ãÈù¢ÁöÑÈÉ®ÂàÜ„ÄÇ public class ArrayList&lt;E&gt; extends AbstractList&lt;E&gt; implements List&lt;E&gt;, RandomAccess, Cloneable, java.io.Serializable&#123; private static final long serialVersionUID = 8683452581122892189L; transient Object[] elementData; // non-private to simplify nested class access&#125; ÂèØ‰ª•ÁúãÂà∞ÔºåÂ∫ïÂ±ÇÁöÑÂÆûÁé∞Êï∞ÁªÑ‰ΩøÁî®‰∫ÜtransientÂÖ≥ÈîÆÂ≠óÔºå‰πüÂ∞±ÊòØËØ¥ÔºåArrayListÊòØ‰∏ç‰ºöË¢´Â∫èÂàóÂåñÁöÑÂêóÔºü public static void main(String[] args) &#123; List&lt;Integer&gt; list = new ArrayList&lt;&gt;(); list.add(1); list.add(2); list.add(3); try &#123; ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream("ArrayList")); objectOutputStream.writeObject(list); ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream("ArrayList")); ArrayList&lt;Integer&gt; list1 = (ArrayList&lt;Integer&gt;) objectInputStream.readObject(); System.out.println(list1); &#125; catch (IOException | ClassNotFoundException e) &#123; e.printStackTrace(); &#125;&#125;//ËæìÂá∫ÁªìÊûú//[1, 2, 3] ÁÑ∂ËÄåÂú®ÁªèËøáÊµãËØï‰πãÂêéÔºåÂèØ‰ª•ÂèëÁé∞ÔºåArrayListË¢´Â∫èÂàóÂåñÊàêÂäü‰∫ÜÔºåÈÇ£‰πà‰ΩøÁî®‰∫ÜtransientÂÖ≥ÈîÆÂ≠ó‰∏∫‰ªÄ‰πàËøò‰ºöË¢´Â∫èÂàóÂåñÔºüÊó¢ÁÑ∂Ë¶ÅÂ∫èÂàóÂåñArrayListÔºåÂèàÊòØ‰∏∫‰ªÄ‰πàË¶Å‰ΩøÁî®ËØ•ÂÖ≥ÈîÆÂ≠óÂë¢Ôºü ÂÖ∂ÂÆû‰∫ãÊÉÖÁöÑÁúüÁõ∏Â∞±Âú®‰∫éArrayList‰∏≠ÁöÑ‰∏§‰∏™ÊñπÊ≥ïwriteObjectÂíåreadObjectÊñπÊ≥ïÔºå‰∏ãÈù¢ÊòØ‰∏§‰∏™ÊñπÊ≥ïÁöÑÊ∫êÁ†ÅÈÉ®ÂàÜ„ÄÇ private void writeObject(java.io.ObjectOutputStream s) throws java.io.IOException&#123; // Write out element count, and any hidden stuff int expectedModCount = modCount; s.defaultWriteObject(); // Write out size as capacity for behavioural compatibility with clone() s.writeInt(size); // Write out all elements in the proper order. for (int i=0; i&lt;size; i++) &#123; s.writeObject(elementData[i]); &#125; if (modCount != expectedModCount) &#123; throw new ConcurrentModificationException(); &#125;&#125;/** * Reconstitute the &lt;tt&gt;ArrayList&lt;/tt&gt; instance from a stream (that is, * deserialize it). */private void readObject(java.io.ObjectInputStream s) throws java.io.IOException, ClassNotFoundException &#123; elementData = EMPTY_ELEMENTDATA; // Read in size, and any hidden stuff s.defaultReadObject(); // Read in capacity s.readInt(); // ignored if (size &gt; 0) &#123; // be like clone(), allocate array based upon size not capacity int capacity = calculateCapacity(elementData, size); SharedSecrets.getJavaOISAccess().checkArray(s, Object[].class, capacity); ensureCapacityInternal(size); Object[] a = elementData; // Read in all elements in the proper order. for (int i=0; i&lt;size; i++) &#123; a[i] = s.readObject(); &#125; &#125;&#125; ‰ªéÊ∫êÁ†ÅÂèØ‰ª•ÁúãÂá∫ÔºåÂú®Â∫èÂàóÂåñ‰∏Ä‰∏™ArrayListÊó∂Ôºå‰ºöÂ∞ÜsizeÂíåelementDataÈÉΩÂÜôÂÖ•ËæìÂá∫ÊµÅÔºåËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂä†‰∫ÜtransientÂÖ≥ÈîÆÂ≠ó‰πãÂêé‰æùÁÑ∂‰ºöË¢´Â∫èÂàóÂåñÁöÑÂéüÂõ†„ÄÇÈÇ£‰πà‰∏∫‰ªÄ‰πàË¶ÅÂä†Ëøô‰∏™ÂÖ≥ÈîÆÂ≠óÂë¢ÔºüËøôÊòØÂõ†‰∏∫elementDataÊòØ‰∏Ä‰∏™ÁºìÂ≠òÊï∞ÁªÑÔºåÂÆÉÈÄöÂ∏∏‰ºöÈ¢ÑÁïô‰∏Ä‰∫õÂÆπÈáèÔºåÁ≠âÂÆπÈáè‰∏çË∂≥Êó∂ÂÜçÊâ©ÂÖÖÂÆπÈáèÔºåÈÇ£‰πàÊúâ‰∫õÁ©∫Èó¥ÂèØËÉΩÂ∞±Ê≤°ÊúâÂÆûÈôÖÂ≠òÂÇ®ÂÖÉÁ¥†ÔºåÈááÁî®‰∏äÈù¢ÁöÑÊñπÂºèÊù•ÂÆûÁé∞Â∫èÂàóÂåñÊó∂ÔºåÂ∞±ÂèØ‰ª•‰øùËØÅÂè™Â∫èÂàóÂåñÂÆûÈôÖÂ≠òÂÇ®ÁöÑÈÇ£‰∫õÂÖÉÁ¥†ÔºåËÄå‰∏çÊòØÊï¥‰∏™Êï∞ÁªÑÔºå‰ªéËÄåËäÇÁúÅÁ©∫Èó¥ÂíåÊó∂Èó¥„ÄÇ Áé∞Âú®ËøòÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÂ∞±ÊòØÔºåËøô‰∏§‰∏™ÊñπÊ≥ïÊòØÂ¶Ç‰ΩïË¢´Ë∞ÉÁî®ÁöÑÂë¢ÔºüÊúâ‰∫ÜÂâçÈù¢ÂØπExternalizableÊé•Âè£ÂàÜÊûêÁöÑÁªèÈ™åÔºåÁõ¥Êé•Êü•ÁúãObjectOutputStreamÁöÑwriteSerialDataÊñπÊ≥ïÔºåÂú®ËØ•ÊñπÊ≥ï‰∏≠Ë∞ÉÁî®‰∫ÜinvokeWriteObjectÊñπÊ≥ïÊù•ÂÆûÁé∞Â∫èÂàóÂåñÔºå‰∏ãÈù¢Áõ¥Êé•ÁúãËØ•ÊñπÊ≥ï„ÄÇ void invokeWriteObject(Object obj, ObjectOutputStream out) throws IOException, UnsupportedOperationException&#123; requireInitialized(); if (writeObjectMethod != null) &#123; try &#123; writeObjectMethod.invoke(obj, new Object[]&#123; out &#125;); &#125; catch (InvocationTargetException ex) &#123; Throwable th = ex.getTargetException(); if (th instanceof IOException) &#123; throw (IOException) th; &#125; else &#123; throwMiscException(th); &#125; &#125; catch (IllegalAccessException ex) &#123; // should not occur, as access checks have been suppressed throw new InternalError(ex); &#125; &#125; else &#123; throw new UnsupportedOperationException(); &#125;&#125; ObjectStreamClass.java writeObjectMethod = getPrivateMethod(cl, "writeObject", new Class&lt;?&gt;[] &#123; ObjectOutputStream.class &#125;, Void.TYPE);readObjectMethod = getPrivateMethod(cl, "readObject", new Class&lt;?&gt;[] &#123; ObjectInputStream.class &#125;, Void.TYPE); ÈáçÁÇπÂÖ≥Ê≥®writeObjectMethod.invoke(obj, new Object[]{ out });Ëøô‰∏ÄË°åÔºåÂÖ∂‰∏≠ÁöÑwritewriteObjectMethodÂØπË±°Â∞±ÊòØÂú®ObjectStreamClassÁ±ª‰∏≠ÂÆö‰πâÁöÑÔºåÈÄöËøáÂèçÂ∞ÑÁöÑÊñπÂºèË∞ÉÁî®ÁöÑ‰∏§‰∏™ÊñπÊ≥ï„ÄÇ ÊÄªÁªì ÂÆûÁé∞Â∫èÂàóÂåñÁöÑÊñπÂºè‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂá†ÁßçÔºö ÂÆûÁé∞SerializableÊé•Âè£ÔºåË∞ÉÁî®ObjectOutputStreamÁöÑwriteObjectÊñπÊ≥ïÔºåÂ∞ÜÂØπË±°Â∫èÂàóÂåñÔºåËøôÊó∂ÔºåÊòØ‰ΩøÁî®ÁöÑJavaÁöÑËá™Â∏¶ÁöÑÂ∫èÂàóÂåñÊñπÂºè„ÄÇÊ≠§Êó∂Ë¢´transientÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑÂ±ûÊÄßÔºå‰∏ç‰ºöË¢´Â∫èÂàóÂåñ„ÄÇ ÂÆûÁé∞SerializableÊé•Âè£ÔºåÂêåÊó∂Êèê‰æõwriteObjectÊñπÊ≥ïÔºåËøôÊó∂ObjectOutputStreamÂ∞±‰ºöÈÄöËøáÂèçÂ∞ÑÁöÑÊñπÂºèË∞ÉÁî®writeObjectÊñπÊ≥ï„ÄÇÊ≠§Êó∂transient‰øÆÈ•∞ÁöÑÂ≠óÊÆµÔºåÊòØÂê¶‰ºöË¢´Â∫èÂàóÂåñÔºåÂèñÂÜ≥‰∫éwriteObjectÊñπÊ≥ï„ÄÇ ÂÆûÁé∞ ExternalizableÊé•Âè£ÔºåÂπ∂ÂÆûÁé∞‰∏§‰∏™ÊñπÊ≥ïÔºåËøôÊó∂ObjectOutputStreamÂ∞±‰ºöËá™Âä®Ë∞ÉÁî®writeObjectÊñπÊ≥ï„ÄÇÊ≠§Êó∂ÔºåtransientÂÖ≥ÈîÆÂ≠ó‰∏ç‰ºöËµ∑‰ΩúÁî®ÔºåÊòØÂê¶‰ºöË¢´Â∫èÂàóÂåñÔºåÂèñÂÜ≥‰∫éwriteObjectÊñπÊ≥ï„ÄÇ ÂÆö‰πâJavaBeanÊó∂ÔºåÊúÄÂ•ΩÈÉΩÂÆûÁé∞SerializableÊé•Âè£ÔºåÂπ∂‰∏îÂÆö‰πâserialVersionUID„ÄÇ ÈùôÊÄÅÂèòÈáè‰∏ç‰ºöË¢´ÂÆû‰æãÂåñ„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RandomAccessÊé•Âè£]]></title>
    <url>%2F2019%2F09%2F24%2FRandomAccess%E6%8E%A5%E5%8F%A3%2F</url>
    <content type="text"><![CDATA[ÈÄöËøáÂú®JavaÈõÜÂêàÁ±ª‰∏≠ÔºåÊü•ÁúãÁ±ªÁªßÊâøÂõæÂíåÊ∫êÁ†ÅÂèØ‰ª•ÁúãÂá∫ArrayListÂíåVectorÈÉΩÂÆûÁé∞‰∫ÜRandomAccessÊé•Âè£ÔºåËÄåLinkListÂç¥Ê≤°ÊúâÂÆûÁé∞ËØ•Êé•Âè£ÔºåÊü•ÁúãRandomAccessÊé•Âè£ÔºåÂèëÁé∞ÈáåÈù¢ÊòØÁ©∫ÁöÑ„ÄÇ RandomAccess.java package java.util;/** * ‰∏ÄÂ§ßÂ†ÜÊ≥®Èáä... */public interface RandomAccess &#123;&#125; ÂÖ∂ÂÆûÔºåËØ•Êé•Âè£Âè™ÊòØ‰∏Ä‰∏™Ê†áËØÜÊÄßÊé•Âè£(Marker)ÔºåÈô§‰∫ÜRandomAccessÊé•Âè£Â§ñÔºåËøòÊúâCloneable (ÂèØÊã∑Ë¥ùÂÖãÈöÜ)„ÄÅSerializable(Ë¢´Â∫èÂàóÂåñ)Ôºå‰πãÂêé‰ºöÊúâÊñáÁ´†‰ªãÁªçËøô‰∏§‰∏™Êé•Âè£„ÄÇ ËØ•Êé•Âè£ÁöÑÂÆòÊñπËß£Èáä ListÂÆûÁé∞‰ΩøÁî®ÁöÑÊ†áËÆ∞ÁïåÈù¢ÔºåË°®ÊòéÂÆÉ‰ª¨ÊîØÊåÅÂø´ÈÄüÔºàÈÄöÂ∏∏‰∏∫ÊÅíÂÆöÊó∂Èó¥ÔºâÈöèÊú∫ËÆøÈóÆ„ÄÇ Ê≠§Êé•Âè£ÁöÑ‰∏ªË¶ÅÁõÆÁöÑÊòØÂÖÅËÆ∏ÈÄöÁî®ÁÆóÊ≥ïÊõ¥ÊîπÂÖ∂Ë°å‰∏∫Ôºå‰ª•‰æøÂú®Â∫îÁî®‰∫éÈöèÊú∫ËÆøÈóÆÂàóË°®ÊàñÈ°∫Â∫èËÆøÈóÆÂàóË°®Êó∂Êèê‰æõËâØÂ•ΩÁöÑÊÄßËÉΩ„ÄÇ ÂΩìÊñΩÂä†Âà∞È°∫Â∫èËÆøÈóÆÂàóË°®ÔºàÂ¶ÇLinkedListÔºâÔºåÁî®‰∫éÊìçÁ∫µÈöèÊú∫Êé•ÂÖ•ÂàóË°®ÔºàÂ¶ÇArrayListÔºâÊúÄÂ•ΩÁÆóÊ≥ïÂèØ‰ª•‰∫ßÁîü‰∫åÊ¨°Ë°å‰∏∫„ÄÇ ÈºìÂä±ÈÄöÁî®ÂàóË°®ÁÆóÊ≥ïÂú®Â∫îÁî®Â¶ÇÊûúÂ∫îÁî®‰∫éÈ°∫Â∫èËÆøÈóÆÂàóË°®‰πãÂâçÊèê‰æõËæÉÂ∑ÆÊÄßËÉΩÁöÑÁÆóÊ≥ïÔºåÂπ∂‰∏îÂ¶ÇÊûúÈúÄË¶ÅÊîπÂèòÂÖ∂Ë°å‰∏∫‰ª•Á°Æ‰øùÂèØÊé•ÂèóÁöÑÊÄßËÉΩÔºåÂàôÊ£ÄÊü•ÁªôÂÆöÂàóË°®ÊòØÂê¶‰∏∫instanceofÊ≠§Êé•Âè£„ÄÇ Ê≠§Âæ™ÁéØÔºö for (int i=0, n=list.size(); i &lt; n; i++) list.get(i); ÊØîËøô‰∏™Âæ™ÁéØËøêË°åÂæóÊõ¥Âø´Ôºö for (Iterator i=list.iterator(); i.hasNext(); ) i.next(); CollectionsÁ±ª‰∏≠ÁöÑ‰ΩøÁî®Ê≠§Êé•Âè£Âú®CollectionsÁ±ª‰∏≠ÊúâÂæàÂ§öÂú∞ÊñπÈÉΩ‰ΩøÁî®Âà∞‰∫ÜÔºåÊØîÂ¶Ç‰∏ãÈù¢ÁöÑbinarySearchÊñπÊ≥ï Collection.java @SuppressWarnings("unchecked")public static &lt;T&gt; int binarySearch(List&lt;? extends T&gt; list, T key, Comparator&lt;? super T&gt; c) &#123; if (c==null) return binarySearch((List&lt;? extends Comparable&lt;? super T&gt;&gt;) list, key); if (list instanceof RandomAccess || list.size()&lt;BINARYSEARCH_THRESHOLD) return Collections.indexedBinarySearch(list, key, c); else return Collections.iteratorBinarySearch(list, key, c);&#125; ‰∏äÈù¢ÁöÑÊñπÊ≥ï‰∏≠ÔºåÈÄöËøáÂà§Êñ≠listÊòØÂê¶ÂÆûÁé∞‰∫ÜRandomAccessÊé•Âè£Êù•Âà§Êñ≠ÊâßË°åindexedBinarySearchÊñπÊ≥ïËøòÊòØÊâßË°åiteratorBinarySearchÊñπÊ≥ï(instanceofÂÖ≥ÈîÆÂ≠óÁöÑ‰ΩúÁî®ÊòØÂà§Êñ≠Êüê‰∏™ÂØπË±°ÊâÄÂú®ÁöÑÁ±ªÊòØÂê¶ÁªßÊâøÊüê‰∏™Á±ªÊàñËÄÖÊòØÂÆûÁé∞Êüê‰∏™Êé•Âè£)„ÄÇ Â∫îÁî®‰∏ãÈù¢ÂÖàÂÅö‰∏Ä‰∏™ÂàÜÂà´‰ΩøÁî®forÂæ™ÁéØÂíåIteratorÈÅçÂéÜArrayListÂíåLinkedListÁöÑÂÆûÈ™å„ÄÇ RamdomAccessDemo.java import java.util.ArrayList;import java.util.Iterator;import java.util.LinkedList;import java.util.List;/** * @paragram: CollectionDemo * @description: RandomAccessÊé•Âè£Demo * @auhor: liuergo * @date: 2019-09-24 23:00 */public class RandomAccessDemo &#123; public static void main(String[] args) &#123; System.out.println("arrayList‰ΩøÁî®forÂæ™ÁéØÈÅçÂéÜ" + arrayListFor()); System.out.println("arrayList‰ΩøÁî®IteratorÈÅçÂéÜ" + arrayListIterator()); System.out.println("linkedList‰ΩøÁî®forÂæ™ÁéØÈÅçÂéÜ" + linkedListFor()); System.out.println("linkedList‰ΩøÁî®IteratorÈÅçÂéÜ" + linkedListIterator()); &#125; //forÂæ™ÁéØÈÅçÂéÜArrayList public static long arrayListFor() &#123; List list = new ArrayList(); for (int i = 0; i &lt; 5000000; i++) &#123; list.add(i); &#125; long startTime = System.currentTimeMillis(); for (int i = 0; i &lt; list.size(); i++) &#123; Object object = list.get(i); &#125; long endTime = System.currentTimeMillis(); return endTime - startTime; &#125; //IteratorÂæ™ÁéØÈÅçÂéÜArrayList public static long arrayListIterator() &#123; List list = new ArrayList(); for (int i = 0; i &lt; 5000000; i++) &#123; list.add(i); &#125; long startTime = System.currentTimeMillis(); Iterator iterator = list.iterator(); while (iterator.hasNext()) &#123; Object object = iterator.next(); &#125; long endTime = System.currentTimeMillis(); return endTime - startTime; &#125; //forÂæ™ÁéØÈÅçÂéÜArrayList public static long linkedListFor() &#123; List list = new LinkedList(); for (int i = 0; i &lt; 50000; i++) &#123; list.add(i); &#125; long startTime = System.currentTimeMillis(); for (int i = 0; i &lt; list.size(); i++) &#123; Object object = list.get(i); &#125; long endTime = System.currentTimeMillis(); return endTime - startTime; &#125; //IteratorÂæ™ÁéØÈÅçÂéÜArrayList public static long linkedListIterator() &#123; List list = new LinkedList(); for (int i = 0; i &lt; 50000; i++) &#123; list.add(i); &#125; long startTime = System.currentTimeMillis(); Iterator iterator = list.iterator(); while (iterator.hasNext()) &#123; Object object = iterator.next(); &#125; long endTime = System.currentTimeMillis(); return endTime - startTime; &#125;&#125; ËøêË°åÁªìÊûú ÂèØ‰ª•ÂèëÁé∞Ôºå‰ΩøÁî®forÂæ™ÁéØÊØî‰ΩøÁî®IteratorÈÅçÂéÜArrayListÂø´Ôºå‰ΩøÁî®IteratorÊØî‰ΩøÁî®forÂæ™ÁéØÂø´„ÄÇ ÊâÄ‰ª•ÔºåÊàë‰ª¨Âú®‰ΩøÁî®Ëøô‰∫õÈõÜÂêàÁ±ªÁöÑÊó∂ÂÄôÔºåÂ∫îËØ•ÊÉ≥Âà∞ÂØπ‰∫é‰∏çÂêåÁöÑÈõÜÂêàÁ±ªÈááÂèñ‰∏çÂêåÁöÑÈÅçÂéÜÊñπÂºèÔºåÂÖ∑‰ΩìÈááÂèñÈÇ£ÁßçÊñπÂºèÂ∞±ÂèØ‰ª•ÈááÂèñÈÄöËøáÂà§Êñ≠ËØ•Á±ªÊòØÂê¶ÂÆûÁé∞‰∫ÜRandomAccessÊé•Âè£ÁöÑÊñπÂºè„ÄÇ ÂèØ‰ª•ÈááÁî®Â¶Ç‰∏ãÁöÑÊ®°ÊùøÔºö public void traverseList(List list) &#123; if (list instanceof RandomAccess) &#123; for (int i = 0; i &lt; list.size(); i++) &#123; &#125; &#125; else &#123; Iterator iterator = list.iterator(); while (iterator.hasNext()) &#123; &#125; &#125;&#125; Ê≥®ÔºöÊé®Ëçê‰ΩøÁî®Â¢ûÂº∫forÂæ™ÁéØÔºåÂ¢ûÂº∫forÂæ™ÁéØÂú®Â∫ïÂ±Ç‰πüÊòØÂÆûÁé∞ÁöÑIterator„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈòøÈáå‰∫ëOSS+PicGoÂª∫Á´ãÂõæÂ∫ä]]></title>
    <url>%2F2019%2F09%2F21%2F%E9%98%BF%E9%87%8C%E4%BA%91OSS%2BPicGo%E5%BB%BA%E7%AB%8B%E5%9B%BE%E5%BA%8A%E8%B8%A9%E5%9D%91%2F</url>
    <content type="text"><![CDATA[Âú®Êú¨Âú∞ÂÜômdÊñáÊ°£Êó∂ÂÄôÊèíÂÖ•ÂõæÁâáÊòØ‰∏Ä‰ª∂Êå∫È∫ªÁÉ¶ÁöÑ‰∫ãÊÉÖÔºå‰ΩøÁî®Êú¨Âú∞ÂõæÁâáÁöÑËØùÔºåÊØèÊ¨°Âú®ÁªôÂà´‰∫∫ÂàÜ‰∫´ÊñáÊ°£ÊàñËÄÖ‰∏ä‰º†ÂçöÂÆ¢ÁöÑÊó∂ÂÄôÂ∞±ÊØîËæÉÈöæÈ°∂‰∫Ü„ÄÇÁΩë‰∏äÊúâ‰∏§ÁßçÊñπÊ≥ïÂèØ‰ª•Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºå‰∏ÄÁßçÊòØ‰ΩøÁî®ÂõæÁâáÁöÑbase64ÁºñÁ†ÅÔºå‰ΩÜÊòØÂõæÁâáËΩ¨Êç¢‰∏∫base64ÁºñÁ†Å‰πãÂêéÔºåÁºñÁ†ÅÈïøÂ∫¶‰ºöÂæàÂ§ßÔºåÊñáÊ°£ÁöÑÂèØËØªÊÄß‰∏çÂ•ΩÔºåËÄå‰∏î‰πü‰ºö‰ΩøÊñáÊ°£ÁöÑ‰ΩìÁßØÊÄ•ÂâßÂèòÂ§ßÔºåËøôÁßçÊñπÊ≥ïÊòæÁÑ∂‰∏çÂ§™Â•Ω„ÄÇÊâÄ‰ª•ÔºåÊúÄÁªà‰ΩøÁî®‰∫ÜÂõæÂ∫äÁöÑÊñπÊ≥ïÂ∞ÜÂõæÁâáÂÇ®Â≠òÂú®ÈòøÈáå‰∫ë‰∏≠„ÄÇ ÂºÄÈÄöOSSÊúçÂä°‚Äã ËøõÂÖ•ÈòøÈáå‰∫ëÂàõÂª∫‰∏Ä‰∏™ÂØπË±°Â≠òÂÇ®OSSÁöÑÊúçÂä°Ôºå‰πãÂêéÊñ∞Âª∫‰∏Ä‰∏™BucketÔºåÂàõÂª∫Bucket‰πãÂêéÔºåÊàë‰ª¨ÁöÑÂ≠òÂÇ®Á©∫Èó¥Â∞±ÂàõÂª∫ÊàêÂäü‰∫Ü„ÄÇ ‰ΩøÁî®PicGoÂø´ÈÄü‰∏ä‰º†ÂõæÁâá PicGo‰∏ãËΩΩÂú∞ÂùÄhttps://github.com/Molunerfinn/PicGo ÈÖçÁΩÆPicGo ‚Äã KeyIdÂíåKeySecretÂèØ‰ª•‰ªéÈòøÈáåÁöÑÊéßÂà∂Âè∞Ëé∑Âèñ„ÄÇ ‚Äã ÂÇ®Â≠òÁ©∫Èó¥ÂêçÂ∞±ÊòØBucketÁöÑÂêçÁß∞ÔºåÂ≠òÂÇ®Âå∫ÂüüÂú®ËÆøÈóÆÂüüÂêçÂèØ‰ª•ÊâæÂà∞„ÄÇ ‚Äã ÈÖçÁΩÆÂÆåÊàê‰πãÂêéÂ∞±ÂèØ‰ª•‰ΩøÁî®PicGo‰∏ä‰º†ÂõæÁâá‰∫Ü„ÄÇ Ë∏©ÂùëËÆ∞ÂΩï‚Äã Á¨¨‰∏ÄÊ¨°‰ΩøÁî®PicGo‰∏ä‰º†ÂõæÁâáÁöÑÊó∂ÂÄôÔºåÊÄªÊòØÊèêÁ§∫‰∏ä‰º†Â§±Ë¥•ÔºåÊ£ÄÊü•‰∫ÜÂ•ΩÂá†ÈÅçÈÖçÁΩÆÔºåÈÉΩÊ≤°Êúâ‰ªÄ‰πàÈîôËØØÔºåÂèØÊòØÂ∞±ÊòØ‰∏ä‰º†‰∏ç‰∫Ü„ÄÇ ‚Äã ÊâìÂºÄPicGoÁöÑÈÖçÁΩÆÊñá‰ª∂‰πãÂêéÔºåÂèëÁé∞Êúâ‰∏ãÈù¢ÁöÑÊä•Èîô‰ø°ÊÅØ„ÄÇ 2019-09-21 21:33:11 [PicGo ERROR] StatusCodeError: 403 - &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;Error&gt;\n RequestTimeTooSkewed\n &lt;Message&gt;The difference between the request time and the current time is too large.&lt;/Message&gt;\n &lt;RequestId&gt;5D8634B41BCC63B32BB5C43E&lt;/RequestId&gt;\n &lt;HostId&gt;lzy-md-image.oss-cn-qingdao.aliyuncs.com&lt;/HostId&gt;\n &lt;MaxAllowedSkewMilliseconds&gt;900000&lt;/MaxAllowedSkewMilliseconds&gt;\n &lt;RequestTime&gt;2019-09-21T13:33:10.000Z&lt;/RequestTime&gt;\n &lt;ServerTime&gt;2019-09-21T14:33:24.000Z&lt;/ServerTime&gt;\n&lt;/Error&gt;\n&quot;------Error Stack Begin------StatusCodeError: 403 - &quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;Error&gt;\n RequestTimeTooSkewed\n &lt;Message&gt;The difference between the request time and the current time is too large.&lt;/Message&gt;\n &lt;RequestId&gt;5D8634B41BCC63B32BB5C43E&lt;/RequestId&gt;\n &lt;HostId&gt;lzy-md-image.oss-cn-qingdao.aliyuncs.com&lt;/HostId&gt;\n &lt;MaxAllowedSkewMilliseconds&gt;900000&lt;/MaxAllowedSkewMilliseconds&gt;\n &lt;RequestTime&gt;2019-09-21T13:33:10.000Z&lt;/RequestTime&gt;\n &lt;ServerTime&gt;2019-09-21T14:33:24.000Z&lt;/ServerTime&gt;\n&lt;/Error&gt;\n&quot; at new StatusCodeError (E:\PicGo\resources\app.asar\node_modules\request-promise-core\lib\errors.js:32:15) at Request.plumbing.callback (E:\PicGo\resources\app.asar\node_modules\request-promise-core\lib\plumbing.js:104:33) at Request.RP$callback [as _callback] (E:\PicGo\resources\app.asar\node_modules\request-promise-core\lib\plumbing.js:46:31) at Request.self.callback (E:\PicGo\resources\app.asar\node_modules\request\request.js:185:22) at Request.emit (events.js:182:13) at Request.&lt;anonymous&gt; (E:\PicGo\resources\app.asar\node_modules\request\request.js:1157:10) at Request.emit (events.js:182:13) at IncomingMessage.&lt;anonymous&gt; (E:\PicGo\resources\app.asar\node_modules\request\request.js:1079:12) at Object.onceWrapper (events.js:273:13) at IncomingMessage.emit (events.js:187:15)-------Error Stack End------- ‚Äã ÈáçÁÇπÂÖ≥Ê≥®The difference between the request time and the current time is too largeËøô‰∏ÄÈÉ®ÂàÜÔºåÊü•ÊâæÈòøÈáå‰∫ëOSÊñáÊ°£Ôºå403ÈîôËØØÂèäÊéíÊü•„ÄÇÁúãÂà∞‰∏ãÈù¢ÁöÑÈÉ®ÂàÜÔºåÂ∞±ÊòéÁôΩ‰∫ÜÂá∫ÈóÆÈ¢òÁöÑÂéüÂõ†„ÄÇ ‚Äã Áî±‰∫éÊàëÁöÑÁîµËÑëÊòØWindows+UbuntuÂèåÁ≥ªÁªüÔºåÊØèÊ¨°ÂàáÊç¢Á≥ªÁªüÁöÑÊó∂ÂÄôÈÉΩ‰ºö‰∫ßÁîüÂÖ´‰∏™Â∞èÊó∂ÁöÑÊó∂Â∑ÆÔºå‰∏ÄÁõ¥Ê≤°ÊúâËß£ÂÜ≥Ëøô‰∏™ÂÜ≤Á™ÅÈóÆÈ¢òÔºåÊâÄ‰ª•ÈÄ†Êàê‰∫ÜWindowsÊó∂Èó¥‰∏çÊ≠£Â∏∏Ôºå‰πüÂ∞±ÂØºËá¥‰∫Ü‰ªäÂ§©ÁöÑÈóÆÈ¢ò„ÄÇ ‚Äã Ëß£ÂÜ≥ÊñπÊ≥ïÂ∞±ÂæàÁÆÄÂçï‰∫ÜÔºåÈáçÊñ∞ÂêåÊ≠•‰∏Ä‰∏ãÊó∂ÈíüÂ∞±Â•Ω‰∫Ü„ÄÇ]]></content>
      <categories>
        <category>ÂÖ∂‰ªñ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[JavaÈõÜÂêàÁ±ª]]></title>
    <url>%2F2019%2F09%2F20%2FJava%E9%9B%86%E5%90%88%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[Java‰ºóÂ§öÁöÑÈõÜÂêàÁ±ªÁî±‰∏§Â§ßÊé•Âè£Ë°çÁîüËÄåÊù•ÔºöCollectionÊé•Âè£ÂíåMapÊé•Âè£ CollectionList(ÊúâÂ∫èÔºåÂèØÈáçÂ§ç)ArrayList‰ºòÁÇπÔºöÂ∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÊòØÊï∞ÁªÑÔºåÂÖ∑ÊúâÊï∞ÁªÑÊú¨Ë∫´ÁöÑÁâπÁÇπÔºöÊü•ËØ¢Âø´ÔºåÂ¢ûÂà†ÊÖ¢„ÄÇ Áº∫ÁÇπÔºöÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÔºåÊïàÁéáÈ´ò„ÄÇ Á±ªÁªßÊâøÂõæ ArrayList.java /** * The array buffer into which the elements of the ArrayList are stored. * The capacity of the ArrayList is the length of this array buffer. Any * empty ArrayList with elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA * will be expanded to DEFAULT_CAPACITY when the first element is added. */transient Object[] elementData; // non-private to simplify nested class access ‰∏äÈù¢ÁöÑelementDataÂ∞±ÊòØArrayListÁöÑÂ∫ïÂ±ÇÊï∞ÁªÑÁöÑÂÆûÁé∞„ÄÇ Vector‰ºòÁÇπÔºöÂ∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÊòØÊï∞ÁªÑÔºåÂÖ∑ÊúâÊï∞ÁªÑÊú¨Ë∫´ÁöÑÁâπÁÇπÔºöÊü•ËØ¢Âø´ÔºåÂ¢ûÂà†ÊÖ¢„ÄÇ Áº∫ÁÇπÔºöÁ∫øÁ®ãÂÆâÂÖ®ÔºåÊïàÁéá‰Ωé„ÄÇ Á±ªÁªßÊâøÂõæ Vector.java /** * Appends the specified element to the end of this Vector. * * @param e element to be appended to this Vector * @return &#123;@code true&#125; (as specified by &#123;@link Collection#add&#125;) * @since 1.2 */public synchronized boolean add(E e) &#123; modCount++; ensureCapacityHelper(elementCount + 1); elementData[elementCount++] = e; return true;&#125; Êü•ÁúãVectorÁöÑÊ∫êÁ†ÅÂèØ‰ª•ÂèëÁé∞ÔºåÂ§ßÈÉ®ÂàÜÊ∫êÁ†ÅÈÉΩÂä†‰∏ä‰∫ÜsynchronizedÂÖ≥ÈîÆÂ≠óÔºåÊØîÂ¶Ç‰∏äÈù¢ÁöÑaddÊñπÊ≥ïÔºåËøô‰πüÊòØVectorÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÂéüÂõ†„ÄÇ LinkedList‰ºòÁÇπ: Â∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÊòØÈìæË°®ÔºåÊü•ËØ¢ÊÖ¢ÔºåÂ¢ûÂà†Âø´„ÄÇÁº∫ÁÇπ: Á∫øÁ®ã‰∏çÂÆâÂÖ®ÔºåÊïàÁéáÈ´ò„ÄÇ Á±ªÁªßÊâøÂõæ ÊØîËæÉLinkedListÂíåÂâç‰∏§‰∏™ÈõÜÂêàÁ±ªÁöÑÂå∫Âà´ÔºåÂèØ‰ª•ÂèëÁé∞LinkedListÂÆûÁé∞‰∫ÜDequeÊé•Âè£ÔºåÂπ∂‰∏îÊ≤°ÊúâÂÆûÁé∞ RandomAccessÊé•Âè£ÔºåË°®Á§∫Ê≠§ÈõÜÂêàÁ±ª‰∏çÊîØÊåÅÂø´ÈÄüÈöèÊú∫ËÆøÈóÆÔºåÊ≠§Êé•Âè£Êúâ‰∏ìÈó®ÁöÑÊñáÁ´†ËÆ≤Ëß£„ÄÇ Set(Êó†Â∫èÔºåÂîØ‰∏Ä)HashSetÂ∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÊòØÂìàÂ∏åË°®ÔºàÊó†Â∫èÔºåÂîØ‰∏ÄÔºâ„ÄÇ Á±ªÁªßÊâøÂõæ ÂèØ‰ª•ÁúãÂá∫ÔºåHashSet‰πüÊòØÊ≤°ÊúâÂÆûÁé∞RandomAccessÊé•Âè£ÁöÑÔºå‰∏çÊîØÊåÅÂø´ÈÄüÈöèÊú∫ËÆøÈóÆÔºåÂÖ≥‰∫éHashSetÊòØÂ¶Ç‰Ωï‰øùËØÅÂÖÉÁ¥†ÁöÑÂîØ‰∏ÄÊÄßÁöÑÔºåÂèäÂÖ∂Êó†Â∫èÊÄßÁöÑÂéüÂõ†Â∞ÜÂú®HashMap‰∏≠Ëß£Èáä„ÄÇ HashSet.java private transient HashMap&lt;E,Object&gt; map;// Dummy value to associate with an Object in the backing Mapprivate static final Object PRESENT = new Object();public boolean add(E e) &#123; return map.put(e, PRESENT)==null;&#125; ‰ªé‰∏äÈù¢ÁöÑÊ∫êÁ†ÅÂèØ‰ª•ÁúãÂá∫ÔºåHashSetÁöÑÂ∫ïÂ±ÇÂÆûÁé∞ÊòØHashMapÔºåÊØèÊ¨°Ë∞ÉÁî®addÊñπÊ≥ïÊó∂ÔºåMapÁöÑvalueÈÉ®ÂàÜ‰ªÖ‰ªÖput‰∫Ü‰∏Ä‰∏™‰∏Ä‰∏™ObjectÂØπË±°ÔºåËÄåHashMapÁöÑKeyÊòØÂîØ‰∏ÄÁöÑÔºå‰πüÂ∞±‰øùËØÅ‰∫ÜHashSetÁöÑÂîØ‰∏ÄÊÄß„ÄÇ LinkedHashSetÂ∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÊòØÂìàÂ∏åË°®ÂíåÈìæË°®ÔºàÊúâÂ∫èÔºåÂîØ‰∏ÄÔºâÔºåÈìæË°®‰øùËØÅÂÖ∂ÊúâÂ∫èÔºåÂìàÂ∏åË°®‰øùËØÅÂÖ∂ÂîØ‰∏Ä„ÄÇ ‰ªéÁ±ªÁªßÊâøÂõæÂèØ‰ª•ÁúãÂá∫ÔºåLinkedHashSetÁªßÊâø‰∫ÜHashSetÔºå‰ªé‰∏ãÈù¢ÁöÑÊ∫êÁ†ÅÂèØ‰ª•ÁúãÂá∫ÔºåLinkedHashSet‰∏ªË¶ÅÊòØÂÆûÁé∞‰∫ÜHashSetÁöÑHashSet(int initialCapacity, float loadFactor, boolean dummy)ÊûÑÈÄ†ÊñπÊ≥ïÔºåÂú®ËØ•ÊñπÊ≥ï‰∏≠Êñ∞Âª∫‰∫Ü‰∏Ä‰∏™LinkedHashMapÂØπË±°ÔºåÈìæË°®ÈÉ®ÂàÜÁöÑÂÆûÁé∞Â∞±Âú®LikedHashMap‰∏≠ÂÆûÁé∞‰∫Ü„ÄÇ //LinkedHashSet.javapublic LinkedHashSet(int initialCapacity, float loadFactor) &#123; super(initialCapacity, loadFactor, true);&#125;//HashSet.javaHashSet(int initialCapacity, float loadFactor, boolean dummy) &#123; map = new LinkedHashMap&lt;&gt;(initialCapacity, loadFactor);&#125; TreeSetÂ∫ïÂ±ÇÊï∞ÊçÆÁªìÊûÑÊòØÁ∫¢ÈªëÊ†ëÔºàÂîØ‰∏ÄÔºåÊúâÂ∫èÔºâ„ÄÇSortedSetÊé•Âè£‰øùËØÅ‰∫ÜÂÖ∂ÊúâÂ∫èÊÄßÔºå‰∏ªË¶ÅÁî®‰∫éÊéíÂ∫è„ÄÇ Á±ªÁªßÊâøÂõæ MapHashMapMapÊóè‰∏ªË¶ÅÂåÖÊã¨HashMap„ÄÅLinkedHashMap„ÄÅTreeMap„ÄÅHashtable HashMap Á∫øÁ®ã‰∏çÂÆâÂÖ®ÔºåÊïàÁéáÈ´òÔºåÊó†Â∫è„ÄÇ HashMapÂÖÅËÆ∏Á©∫ÂÄºÔºåÂπ∂‰∏îkeyÂíåvalueÈÉΩÂÖÅËÆ∏„ÄÇkeyÂÄºÂÖ∑ÊúâÂîØ‰∏ÄÊÄßÔºåÂ≠òÂú®ÁöÑËØùkeyÂÄº‰∏ç‰ºöË¶ÜÁõñÔºåÊñ∞ÁöÑvalue‰ºöÊõø‰ª£ÊóßÁöÑvalueÔºåËÄå‰∏îHashMapÊòØÊó†Â∫èÁöÑÔºå‰πãÂêé‰ºöÊúâÊ∫êÁ†ÅËÆ≤Ëß£ËØ¶ÁªÜËß£Èáä„ÄÇ LinkedHashMap ÂÜÖÈÉ®Áª¥ÊåÅ‰∫Ü‰∏Ä‰∏™ÂèåÂêëÈìæË°®ÔºåÁõ∏ÊØî‰∫éHashMapÊù•ËØ¥ÂèØ‰ª•‰øùËØÅÊúâÂ∫è„ÄÇ TreeMap ÂÜÖÈÉ®ÂÆûÁé∞ÊòØÁ∫¢ÈªëÊ†ëÔºåÂèØ‰ª•ÂØπÊèíÂÖ•ÁöÑÂÖÉÁ¥†ËøõË°åËá™Âä®ÊéíÂ∫è„ÄÇ Hashtable ÂæàÂ§öÊñπÊ≥ïÂä†‰∏ä‰∫ÜsynchronizedÔºåÊâÄ‰ª•ÔºåHashtableÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåËÄå‰∏îHashtable‰∏çÂÖÅËÆ∏Á©∫ÂÄº„ÄÇ ÂØπÊØîÂàÜÊûêTreeSetÔºåLinkedHashSetÔºåHashSetÂØπÊØîÁõ∏ÂêåÁÇπ Áî±‰∫éÂÆûÁé∞‰∫ÜSetÊé•Âè£ÔºåÈÉΩÊúâÂîØ‰∏ÄÊÄßÁöÑÁâπÁÇπ„ÄÇ ‰∏âËÄÖÈÉΩ‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂ¶ÇÊûúÊÉ≥‰øùËØÅÁ∫øÁ®ãÂÆâÂÖ®ÔºåÂèØ‰ª•‰ΩøÁî®Collections.synchronizedSet()ÊñπÊ≥ï„ÄÇ ‰∏çÂêåÁÇπ ÊòØÂê¶ÊúâÂ∫èÔºöHashSetÁõ¥Êé•ÂÆûÁé∞‰∫ÜHanshMapÔºåÊòØÊó†Â∫èÁöÑÔºåËÄåÁî±‰∫éLinkedHashSetÂÆûÁé∞‰∫ÜÈìæË°®ÔºåÂèØ‰ª•‰øùËØÅÊï∞ÊçÆÊåâÁÖßÊèíÂÖ•È°∫Â∫èÊéíÂ∫èÔºåTreeSet‰ºöÂØπÊèíÂÖ•ÁöÑÊï∞ÊçÆÂÆûÁé∞ÊéíÂ∫è„ÄÇ ÊòØÂê¶ÂÖÅËÆ∏Á©∫ÂÄºÔºöHashSetÂíåLinkHashSetÂÖÅËÆ∏Â≠òÂú®nullÊï∞ÊçÆÔºå‰ΩÜÊòØTreeSet‰∏≠ÊèíÂÖ•nullÊï∞ÊçÆÊó∂‰ºöÊä•NullPointerException„ÄÇ ÊµãËØïpublic static void setTest() &#123; HashSet&lt;Integer&gt; hashSet = new HashSet&lt;&gt;(); LinkedHashSet&lt;Integer&gt; linkedHashSet = new LinkedHashSet&lt;&gt;(); TreeSet&lt;Integer&gt; treeSet = new TreeSet&lt;&gt;(); for (Integer data: Arrays.asList(745, 3, 114, 526, 5, 7, 4)) &#123; hashSet.add(data); linkedHashSet.add(data); treeSet.add(data); &#125; System.out.println("HashSetÔºö" + hashSet); System.out.println("LinkedHashSetÔºö" + linkedHashSet); System.out.println("TreeSetÔºö" + treeSet);&#125; ËøêË°åÁªìÊûú ÂèØ‰ª•ÁúãÂá∫Êù•ÔºåÈÅçÂéÜHashSetÁöÑÁªìÊûúÊòØÊó†Â∫èÁöÑÔºåÈÅçÂéÜLinkedHashSetÁöÑÁªìÊûúÊòØË∑üÊèíÂÖ•Êï∞ÊçÆÁöÑÈ°∫Â∫è‰øùÊåÅ‰∏ÄËá¥ÔºåTreeSetÂèØ‰ª•ÂØπÊï∞ÊçÆËøõË°åÊéíÂ∫è„ÄÇ HashMap„ÄÅLinkedHashMap„ÄÅTreeMap„ÄÅHashtableÂØπÊØîÁõ∏ÂêåÁÇπ ÈÉΩÊòØÁî®‰∫éÂÇ®Â≠òkey/valueÈîÆÂÄºÂØπÔºåkey‰∏çËÉΩÈáçÂ§ç ‰∏çÂêåÁÇπ ÊòØÂê¶ÊîØÊåÅÂ§öÁ∫øÁ®ãËØªÂÜôÔºöHashMap„ÄÅTreeMap„ÄÅLinkedHashMapÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÔºåÂè™ÊúâHashtableÁ∫øÁ®ãÂÆâÂÖ®„ÄÇ ÊòØÂê¶ÊúâÂ∫èÔºöHashMap„ÄÅHashtableÊó†Â∫èÔºåLikedHashMapÂèØ‰ª•‰øùËØÅÊï∞ÊçÆÊåâÁÖßÊèíÂÖ•È°∫Â∫èÊéíÂ∫è„ÄÅTreeMapÂèØ‰ª•ÂØπÊï∞ÊçÆËøõË°åÊéíÂ∫è„ÄÇ ÊòØÂê¶ÂÖÅËÆ∏Á©∫ÂÄºÔºöHashMap„ÄÅLikedHashMapÂÖÅËÆ∏Â≠òÂú®‰∏ÄÊù°ÈîÆ‰∏∫nullÁöÑËÆ∞ÂΩïÔºåHashtable„ÄÅTreeMap‰∏çÂÖÅËÆ∏Á©∫ÂÄºÂ≠òÂú®„ÄÇ ÈÅçÂéÜÊñπÂºèList‰∏ªË¶ÅÊúâ‰∏âÁßçÂæ™ÁéØÊñπÂºèÔºåforÂæ™ÁéØ„ÄÅÂ¢ûÂº∫forÂæ™ÁéØÂíåËø≠‰ª£Âô®ÊñπÂºè„ÄÇÂ¢ûÂº∫forÂæ™ÁéØÁöÑÂÜÖÈÉ®ÊòØË∞ÉÁî®iteratorÂÆûÁé∞ÁöÑÔºåÂêé‰∏§ÁßçÊñπÂºèÁöÑÊïàÊûúÂü∫Êú¨Áõ∏Âêå(Âú®idea‰∏≠‰πü‰ºöÊúâÊèêÁ§∫Âª∫ËÆÆ‰ΩøÁî®Â¢ûÂº∫forÂæ™ÁéØÁöÑÊñπÂºè)„ÄÇÂØπ‰∫éÂ¶Ç‰ΩïÈÄâÊã©ÈÅçÂéÜÊñπÂºèÔºåÂú®RandomAccessÊé•Âè£‰∏≠ÊúâËÆ≤Âà∞„ÄÇ //ListÈÅçÂéÜprivate static void traverseListTest() &#123; ArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 20; i++) &#123; arrayList.add(i); &#125; //forÂæ™ÁéØÈÅçÂéÜ for (int i = 0; i &lt; arrayList.size(); i++) &#123; System.out.println(arrayList.get(i)); &#125; //Â¢ûÂº∫forÂæ™ÁéØ for (Integer integer : arrayList) &#123; System.out.println(integer); &#125; //iteratorÊñπÂºè Iterator iterator = arrayList.iterator(); while (iterator.hasNext()) &#123; System.out.println(iterator.next()); &#125;&#125; MapÈÅçÂéÜÊñπÂºèÔºå‰∏ªË¶ÅÁöÑÈÅçÂéÜÊñπÂºèÊúâÂõõÁßçÔºåÁ¨¨‰∏Ä‰∏≠ÂõΩÊñπÂºè‰ªÖ‰ªÖÈÅçÂéÜvalueÊàñËÄÖkeyÁöÑËØùÁõ¥Êé•‰ΩøÁî®‰∏Ä‰∏™Â¢ûÂº∫forÂæ™ÁéØÔºåÁ¨¨‰∫åÁßçÊñπÂºèÊòØ‰ΩøÁî®Map.keysetÊñπÊ≥ïÈÅçÂéÜkeyÔºåÂèØ‰ª•ÂÜçÈÄöËøákeyÊâæÂà∞valueÔºåÁ¨¨‰∏âÁßçÊòØ‰ΩøÁî®Map.entrySetÈÅçÂéÜÔºåÊ≠§ÊñπÊ≥ïÊòØÊïàÁéáÊØîËæÉÈ´òÁöÑ‰∏ÄÁßçÔºåÁ¨¨ÂõõÁßçÊòØ‰ΩøÁî®IteratorÈÅçÂéÜÔºåÂíå‰∏ä‰∏ÄÁßçÊñπÂºèÂü∫Êú¨Áõ∏ÂêåÔºå‰ΩÜÊòØÂ¶ÇÊûúÈúÄË¶ÅÂú®ÈÅçÂéÜËøáÁ®ã‰∏≠Âà†Èô§ÂÖÉÁ¥†ÁöÑËØùÔºåÈúÄË¶Å‰ΩøÁî®ËØ•ÊñπÊ≥ï„ÄÇ //MapÈÅçÂéÜprivate static void traverseMapTest() &#123; Map&lt;Integer, Integer&gt; map = new HashMap(); for (int i = 0; i &lt; 100000; i++) &#123; map.put(i, 1); &#125; //‰ªÖÈÅçÂéÜvalue for (Integer value : map.values()) &#123; System.out.println(value); &#125; //‰ªÖÈÅçÂéÜkey for (Integer key : map.keySet()) &#123; System.out.println(key); &#125; //Map.keySetÊñπÊ≥ï for (Integer key : map.keySet()) &#123; System.out.println(key + " " + map.get(key)); &#125; //Map.entrySetÊñπÊ≥ï for (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) &#123; System.out.println(entry.getKey() + " " + entry.getValue()); &#125; //IteratorÊñπÂºè Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; iterator = map.entrySet().iterator(); while (iterator.hasNext()) &#123; System.out.println(iterator.next().getKey() + " " + iterator.next().getValue()); &#125; //lambada map.forEach((key, value) -&gt; System.out.println(key + " " + value));&#125; ÊÄßËÉΩÊµãËØïÊèíÂÖ•‰∫Ü500wÊù°Êï∞ÊçÆËøõË°åÊµãËØï„ÄÇ ÈÅçÂéÜÊñπÂºè Êó∂Èó¥ÔºàmsÔºâ KeySet 13 values 42 keySet get(key) 51 entrySet 41 iterator 39 ÊÄªÁªì Â¶ÇÊûúÂè™ÊòØËé∑ÂèñkeyÊàñËÄÖvalueÔºåÊé®Ëçê‰ΩøÁî®KeySetÂíåvaluesÊñπÂºè„ÄÇ ÂêåÊó∂ÈúÄË¶ÅkeyÂíåvalueÔºåÊé®Ëçê‰ΩøÁî®entrySetÊñπÂºè„ÄÇ Â¶ÇÊûúÈúÄË¶ÅÂú®ÈÅçÂéÜÁöÑËøáÁ®ã‰∏≠Âà†Èô§ÂÖÉÁ¥†ÔºåÂèØ‰ª•‰ΩøÁî®iteratorÊñπÂºè„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏∫‰ªÄ‰πàËæìÂÖ•IPÂú∞ÂùÄÊó†Ê≥ïËÆøÈóÆÁΩëÁ´ô]]></title>
    <url>%2F2019%2F09%2F20%2F%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BE%93%E5%85%A5IP%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[üåàÂ≠¶‰π†ÂÆåDNSËß£Êûê‰πãÂêéÔºåËá™Â∑±Â∞ùËØïÂÜô‰∫Ü‰∏Ä‰∏™JavaÁ®ãÂ∫èËß£ÊûêDNSÂú∞ÂùÄÁöÑÂ∞èDemo„ÄÇ ‰ª£Á†ÅÔºö import java.net.InetAddress;import java.net.UnknownHostException;import java.util.Arrays;/** * @paragram: DNSDemo * @description: ÂüüÂêçËß£Êûê * @auhor: liuergo * @date: 2019-09-18 15:41 */public class Test &#123; public static void main(String[] args) &#123; Test tester = new Test(); // tester.resolveDomain("www.baidu.com"); tester.resolveDomain("www.zhihu.com"); &#125; private void resolveDomain(String domain) &#123; InetAddress[] address; try &#123; address = InetAddress.getAllByName(domain); Arrays.stream(address) .map(InetAddress::getHostAddress) .forEach(System.out::println); &#125; catch (UnknownHostException e) &#123; e.printStackTrace(); &#125; &#125;&#125; Ëß£ÊûêÁôæÂ∫¶ÁöÑIPÂú∞ÂùÄ‰ª•ÂêéÔºåÁõ¥Êé•ËÆøÈóÆÁôæÂ∫¶ÁöÑIPÂú∞ÂùÄÂèØ‰ª•Ê≠£Â∏∏ËÆøÈóÆÔºåÁÑ∂ËÄåËß£ÊûêÁü•‰πéÁöÑIPÂú∞ÂùÄ‰ª•ÂêéÔºåÊó†Ê≥ïÊ≠£Â∏∏ËÆøÈóÆ„ÄÇ ÂüüÂêçÂèØ‰ª•ËÆøÈóÆÁÑ∂ËÄåIP‰∏çËÉΩËÆøÈóÆÔºåËøôÊòØ‰∏∫‰ªÄ‰πàÂë¢Ôºü Âè™ËæìÂÖ•IPÂú∞ÂùÄÊó†Ê≥ïËÆøÈóÆÁΩëÁ´ôÁöÑÂéüÂõ†‚Äã ËæìÂÖ•IPÂú∞ÂùÄÊó†Ê≥ïËÆøÈóÆÁöÑÂéüÂõ†Â∞±ÊòØÂ§ö‰∏™Á´ôÁÇπÂú®ÂÖ±Áî®Ëøô‰∏Ä‰∏™IPÔºåÂ¶ÇÊûúÂè™ËæìÂÖ•IPÂú∞ÂùÄÁöÑËØùÔºåÊµèËßàÂô®‰πü‰∏çÁü•ÈÅìË¶ÅËÆøÈóÆÂì™‰∏™Á´ôÁÇπÔºåÊâÄ‰ª•Â∞±Êó†Ê≥ïËÆøÈóÆ‰∫Ü„ÄÇ ‚Äã ÈÇ£‰πàÔºåÊµèËßàÂô®‰∏ç‰πüÊòØËß£ÊûêÂüüÂêç‰πãÂêéÂÜçËÆøÈóÆÁöÑIPÂú∞ÂùÄÂêóÔºåÊúÄÁªà‰πüÊòØËÆøÈóÆÁöÑIPÂú∞ÂùÄÔºåÈÇ£‰πàË∂äËøáDNSËß£ÊûêÁõ¥Êé•ËÆøÈóÆÂíåÂâç‰∏ÄÁßçÂΩ¢Âºè‰∏çÂ∫îËØ•‰∏ÄÊ†∑ÂêóÔºü ‚Äã Êúâ‰∏§ÁßçÊäÄÊúØÂèØ‰ª•‰∏äÈù¢ÁöÑÈóÆÈ¢òÔºö ËôöÊãü‰∏ªÊú∫ÊäÄÊúØ ÂèçÂêë‰ª£ÁêÜÊäÄÊúØ ËôöÊãü‰∏ªÊú∫ÊäÄÊúØ ËôöÊãü‰∏ªÊú∫ÊäÄÊúØÊòØapacheÔºånginxÁ≠âÊúçÂä°Âô®ÊâÄÁâπÊúâÁöÑ‰∏ÄÁßçÂäüËÉΩÔºå‰πüÂ∞±ÊòØÂÆûÁé∞Â§ö‰∏™Á´ôÁÇπÂú®Âêå‰∏ÄÂè∞ÊúçÂä°Âô®‰∏äÊîæÁΩÆ„ÄÇ ÈÇ£‰πàÔºåÁü•‰πéÁöÑÊüêÂè∞ÊúçÂä°Âô®ÂèØËÉΩÂ∞±ÊòØ‰∏ãÈù¢ÁöÑÊ†∑Â≠êÔºö Á´ôÁÇπ Êñá‰ª∂Â≠òÊîæË∑ØÂæÑ www.zhihu.com /zhihu/index www.a.com /a/index www.b.com /b/index ËøôÊ†∑ÔºåÂüüÂêçÂíåÊñá‰ª∂‰πãÈó¥Â∞±Â≠òÂú®Êò†Â∞ÑÂÖ≥Á≥ª‰∫ÜÔºåÂΩìÊàë‰ª¨Áõ¥Êé•ËÆøÈóÆ www.zhihu.com Êó∂Ôºå‰∏ªË¶ÅÁªèÂéÜ‰∫Ü‰ª•‰∏ãÂá†‰∏™Ê≠•È™§Ôºö DNSÂüüÂêçËß£ÊûêÔºåËé∑ÂæóËß£ÊûêÂêéÁöÑÁªìÊûúÔºåÊØîÂ¶ÇÊòØ223.111.243.190„ÄÇ ÊµèËßàÂô®‰∏éIP‰∏∫223.111.243.190ÁöÑÊúçÂä°Âô®ËøõË°å‰∏âÊ¨°Êè°ÊâãÔºåÂª∫Á´ãTCPËøûÊé•„ÄÇ ÊµèËßàÂô®ÂºÄÂßãÊûÑÂª∫HTTPËØ∑Ê±ÇÊä•ÊñáÔºåÈÄöËøáÊäìÂåÖÂèØ‰ª•ÁúãÂà∞Êä•ÊñáÊ†ºÂºèÔºö Hypertext Transfer Protocol GET / HTTP/1.1\r\n Host: www.zhihu.com\r\n User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\n Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\r\n Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\r\n Accept-Encoding: gzip, deflate\r\n Connection: keep-alive\r\n Upgrade-Insecure-Requests: 1\r\n \r\n [Full request URI: http://www.zhihu.com/] [HTTP request 1/18] [Response in frame: 121] ‰ª•‰∏ä‰ø°ÊÅØ‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÂÖ≥Ê≥®‰∏ÄË°åÔºåÂ∞±ÊòØHost: www.zhihu.com\r\n Ëøô‰∏ÄË°åÔºåÈÄöËøáËøô‰∏™Â§¥ÈÉ®Â≠óÊÆµÔºåÊúçÂä°Âô®Â∞±ÂèØ‰ª•Áü•ÈÅì Âà∞Â∫ïËÆøÈóÆÁöÑÊòØÂì™‰∏™HOSTÔºåÁÑ∂ÂêéÊúçÂä°Âô®Â∞±Ê†πÊçÆHOSTÂíåÂüüÂêçÁöÑÂØπÂ∫îÂÖ≥Á≥ªÔºåÂéªÂØªÊâæ/zhihu/indexÊñá‰ª∂„ÄÇ ÂèçÂêë‰ª£ÁêÜÊäÄÊúØÂÖà‰ªãÁªç‰∏Ä‰∏ãÊ≠£Âêë‰ª£ÁêÜÂíåÂèçÂêë‰ª£ÁêÜÁöÑÂå∫Âà´Ôºö Ê≠£Âêë‰ª£ÁêÜÊ≠£Âêë‰ª£ÁêÜÔºåÊòØÂú®Áî®Êà∑Á´ØÁöÑ„ÄÇÊØîÂ¶ÇÈúÄË¶ÅËÆøÈóÆÊüê‰∫õÂõΩÂ§ñÁΩëÁ´ôÔºåÊàë‰ª¨ÂèØËÉΩÈúÄË¶ÅË¥≠‰π∞vpn„ÄÇ Âπ∂‰∏îvpnÊòØÂú®Êàë‰ª¨ÁöÑÁî®Êà∑ÊµèËßàÂô®Á´ØËÆæÁΩÆÁöÑ(Âπ∂‰∏çÊòØÂú®ËøúÁ´ØÁöÑÊúçÂä°Âô®ËÆæÁΩÆ)„ÄÇ ÊµèËßàÂô®ÂÖàËÆøÈóÆvpnÂú∞ÂùÄÔºåvpnÂú∞ÂùÄËΩ¨ÂèëËØ∑Ê±ÇÔºåÂπ∂ÊúÄÂêéÂ∞ÜËØ∑Ê±ÇÁªìÊûúÂéüË∑ØËøîÂõûÊù•„ÄÇ ÂèçÂêë‰ª£ÁêÜÊúâÊ≠£Âêë‰ª£ÁêÜÔºåÂ∞±ÊúâÂèçÂêë‰ª£ÁêÜ„ÄÇ ÂèçÂêë‰ª£ÁêÜÊòØ‰ΩúÁî®Âú®ÊúçÂä°Âô®Á´ØÁöÑÔºåÊòØ‰∏Ä‰∏™ËôöÊãüIP(VIP)„ÄÇÂØπ‰∫éÁî®Êà∑ÁöÑ‰∏Ä‰∏™ËØ∑Ê±ÇÔºå‰ºöËΩ¨ÂèëÂà∞Â§ö‰∏™ÂêéÁ´ØÂ§ÑÁêÜÂô®‰∏≠ÁöÑ‰∏ÄÂè∞Êù•Â§ÑÁêÜËØ•ÂÖ∑‰ΩìËØ∑Ê±Ç„ÄÇ Â§ßÂûãÁΩëÁ´ôÈÉΩÊúâDNS(ÂüüÂêçËß£ÊûêÊúçÂä°Âô®)Ôºåload balance(Ë¥üËΩΩÂùáË°°Âô®)Á≠â„ÄÇ ‰∏ãÈù¢‰∏ªË¶Å‰ªãÁªçÂèçÂêë‰ª£ÁêÜÊäÄÊúØ ‚Äã Âú®ËÆ°ÁÆóÊú∫ÁΩëÁªú‰∏≠ÔºåÂèçÂêë‰ª£ÁêÜÊòØ‰ª£ÁêÜÊúçÂä°Âô®ÁöÑ‰∏ÄÁßç„ÄÇÊúçÂä°Âô®Ê†πÊçÆÂÆ¢Êà∑Á´ØÁöÑËØ∑Ê±ÇÔºå‰ªéÂÖ∂ÂÖ≥ËÅîÁöÑ‰∏ÄÁªÑÊàñÂ§öÁªÑÂêéÁ´ØÔºàÂ¶ÇWebÊúçÂä°Âô®Ôºâ‰∏äËé∑ÂèñËµÑÊ∫êÔºåÁÑ∂ÂêéÂÜçÂ∞ÜËøô‰∫õËµÑÊ∫êËøîÂõûÁªôÂÆ¢Êà∑Á´ØÔºåÂÆ¢Êà∑Á´ØÂè™‰ºöÂæóÁü•ÂèçÂêë‰ª£ÁêÜÁöÑIPÂú∞ÂùÄÔºåËÄå‰∏çÁü•ÈÅìÂú®‰ª£ÁêÜÊúçÂä°Âô®ÂêéÈù¢ÁöÑÊúçÂä°Âô®Á∞áÁöÑÂ≠òÂú®„ÄÇ Âú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÁõ¥Êé•ËÆøÈóÆIPÁöÑÊó∂ÂÄô‰ºöËÆøÈóÆÂèçÂêë‰ª£ÁêÜÊúçÂä°Âô®ÔºåËøôÊ†∑ËÆøÈóÆ www.zhihu.com ÁöÑÊó∂ÂÄôÔºåËøáÁ®ãÂ¶Ç‰∏ãÔºö ÈÄöËøáDNSËß£ÊûêËé∑Âæó www.zhihu.com ÁöÑÂèçÂêë‰ª£ÁêÜIPÂú∞ÂùÄ223.111.243.190„ÄÇ HTTPËØ∑Ê±ÇÂà∞ËææÂèçÂêë‰ª£ÁêÜÊúçÂä°Âô®‰πãÂêéÔºåËØ•ÊúçÂä°Âô®‰ºöÂØπËØ∑Ê±ÇÂÅöËΩ¨Âèë„ÄÇ ËØ∑Ê±ÇÁöÑHOSTÂú∞ÂùÄ‰∏∫ www.zhihu.com ÔºåÂèçÂêë‰ª£ÁêÜÊúçÂä°Âô®‰ºöÂ∞ÜËØ∑Ê±ÇÊä•ÊñáËΩ¨ÂèëÂà∞ÂüüÂêç‰∏∫www.zhihu.comÁöÑÊúçÂä°Âô®‰∏ä„ÄÇ ÊÄªÁªìÁõ¥Êé•‰ΩøÁî®IPÊó†Ê≥ïËÆøÈóÆÁ´ôÁÇπÁöÑÂéüÂõ† ‰∏Ä‰∏™IPÂèØËÉΩÂØπÂ∫îÂ§ö‰∏™webÁ´ôÁÇπÔºå‰ªÖ‰ªÖÂá≠ÂÄüIPÊó†Ê≥ïÊâæÂà∞Áõ∏Â∫îÁöÑÁ´ôÁÇπ„ÄÇÈÄöËøáÂüüÂêçËÆøÈóÆÂ∞±ÂèØ‰ª•ÂÄüÂä©HOSTÂàÜËæ®Âà∞Â∫ïÊòØË¶ÅËÆøÈóÆÂì™‰∏™Á´ôÁÇπ„ÄÇÂ¶ÇÊûú‰ΩøÁî®ËôöÊãü‰∏ªÊú∫ÊäÄÊúØÔºåÈÇ£‰πàÂà©Áî®HOST + IPÁöÑÊñπÂºèÂ∞±ÂèØ‰ª•ËÆøÈóÆÔºõÂ¶ÇÊûú‰ΩøÁî®ÂèçÂêë‰ª£ÁêÜÊäÄÊúØÔºåÈÄöËøá‰ª£ÁêÜÊúçÂä°Âô®ÊâæÂà∞Á´ôÁÇπÂÆûÈôÖÊúçÂä°Âô®ÁöÑIP‰πüÂèØ‰ª•ËÆøÈóÆ„ÄÇ]]></content>
      <categories>
        <category>ËÆ°ÁÆóÊú∫ÁΩëÁªú</category>
        <category>ÈóÆÈ¢ò</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ÁΩëÁªú</tag>
        <tag>http</tag>
        <tag>ÂèçÂêë‰ª£ÁêÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WireSharkÂü∫Êú¨Êìç‰Ωú]]></title>
    <url>%2F2019%2F09%2F16%2FWireShark%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[1. Êã¶Êà™Êú¨Âú∞ÂõûÁéØÊï∞ÊçÆÔºàÈúÄË¶ÅÁöÑÊó∂ÂÄôÂÜçÂºÄÂêØÔºâÊú∫ËÆøÈóÆÊú¨Êú∫ÁöÑÂõûÁéØÊï∞ÊçÆÊòØ‰∏çÁªèËøáÁΩëÂç°ÁöÑÔºåÊØîÂ¶ÇÊàë‰ª¨Âú®Êú¨Êú∫ËÆøÈóÆÊê≠Âª∫Âú®Êú¨Êú∫‰∏äÁöÑwebÊúçÂä°Ôºå‰ΩÜÊàë‰ª¨ÁªèÂ∏∏ÊúâÊúçÂä°Êê≠Âª∫Âú®Êú¨Êú∫ÁöÑÊìç‰Ωú‰πüÁªèÂ∏∏ÊúâÊã¶Êà™Êú¨Âú∞ÂõûÁéØÊï∞ÊçÆÂåÖÂä†‰ª•ÂàÜÊûêÁöÑÈúÄÊ±ÇÔºåÊâÄ‰ª•Êàë‰ª¨ÁéØË¶ÅÊã¶ËΩΩÂõûÁéØÊï∞ÊçÆÂåÖ„ÄÇÊìç‰ΩúÂ¶Ç‰∏ã„ÄÇ È¶ñÂÖàÔºå‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°åcmdÔºàÊôÆÈÄöÁî®Êà∑Ê≤°ÊúâË∑ØÁî±Ë°®Êìç‰ΩúÊùÉÈôêÔºå‰ºöÊèêÁ§∫‚ÄúËØ∑Ê±ÇÁöÑÊìç‰ΩúÈúÄË¶ÅÊèêÂçá‚ÄùÔºâ ÁÑ∂ÂêéÔºå‰ΩøÁî®ipconfigÊü•ÁúãÊú¨Êú∫ipÂíåÁΩëÂÖ≥Ôºö ipconfig ÂÜçÁÑ∂ÂêéÔºå‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§Ê∑ªÂä†Ë∑ØÁî±ÔºåÊåáÂÆöÂõûÁéØÊï∞ÊçÆ‰πüË¶ÅÂÖàËΩ¨ÂèëÂà∞ÁΩëÂÖ≥Ôºà‰ΩøÁî®‰∏ä‰∏ÄÊ≠•Ëé∑ÂèñÊú¨ÁöÑÊú¨Êú∫ipÂíåÁΩëÂÖ≥ÊõøÊç¢ÂÖ∂‰∏≠ÁöÑÂíåÔºâÔºö route add &lt;your_IP&gt; mask 255.255.255.255 &lt;gateway_IP&gt; metric 1 ÊúÄÂêéÔºåÊü•ÁúãË∑ØÁî±Ë°®‰∏≠Ë∑ØÁî±ÊòØÂê¶Â∑≤Ê∑ªÂä†ÊàêÂäüÔºö route print ÂõûÁéØÊï∞ÊçÆÁªèÁΩëÂÖ≥ÂÜçÂõûÊù•‰ºöÂ¢ûÂä†ÁΩëÂç°ÁöÑÂéãÂäõÔºåÂèØ‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§Âà†Èô§Ë∑ØÁî±Ôºà‰ΩøÁî®ÂâçËæπËé∑ÂèñÊú¨ÁöÑÊú¨Êú∫ipÊõøÊç¢ÂÖ∂‰∏≠ÁöÑÔºâÔºö route delete &lt;your_IP&gt; 2. WireShark ÁïåÈù¢ËØ¥Êòé Âå∫Âüü1ÔºöËØ•Âå∫ÂüüÂ±ïÁ§∫ÁöÑÊòØwiresharkÊçïËé∑Âà∞ÁöÑÊâÄÊúâÊï∞ÊçÆÂåÖÁöÑÂàóË°®„ÄÇÊ≥®ÊÑèÊúÄÂêé‰∏ÄÂàóInfoÂàóÊòØwiresharkÁªÑÁªáÁöÑËØ¥ÊòéÂàóÂπ∂‰∏ç‰∏ÄÂÆöÊòØËØ•Êï∞ÊçÆÂåÖ‰∏≠ÁöÑÂéüÂßãÂÜÖÂÆπ„ÄÇ Âå∫Âüü 2ÔºöËØ•Âå∫ÂüüÊòØÂå∫Âüü 1 ‰∏≠ÈÄâÂÆöÁöÑÊï∞ÊçÆÂåÖÁöÑÂàÜÂçèËÆÆÂ±ÇÂ±ïÁ§∫„ÄÇ Âå∫Âüü 3ÔºöËØ•Âå∫ÂüüÊòØÂå∫Âüü 1 ‰∏≠ÈÄâÂÆöÁöÑÊï∞ÊçÆÂåÖÁöÑÊ∫êÊï∞ÊçÆÔºåÂÖ∂‰∏≠Â∑¶‰æßÊòØÂçÅÂÖ≠ËøõÂà∂Ë°®Á§∫Âè≥‰æßÊòØASCIIÁ†ÅË°®Á§∫„ÄÇÂè¶Â§ñÂú®2Âè∑Á™óÂè£‰∏≠ÈÄâ‰∏≠ÊüêÂ±ÇÊàñÊüêÂ≠óÊÆµÔºå3Âè∑Á™óÂè£ÂØπÂ∫î‰ΩçÁΩÆ‰πü‰ºöË¢´È´ò‰∫Æ„ÄÇ 2. ÊçïËé∑ËøáÊª§Âô®Ë°®ËææÂºèÂú®Ê¨¢ËøéÈ°µÈù¢ÂèØ‰ª•ÁúãÂà∞ÁÆ°ÁêÜÊçïËé∑ËøáÊª§Âô®„ÄÇ ÊâìÂºÄ‰ª•ÂêéÔºåÂèØ‰ª•ÁúãÂà∞ËøáÊª§Âô®ÁöÑÂêÑÁßçÂÜôÊ≥ï„ÄÇ 3. ÊòæÁ§∫ËøáÊª§Âô®Ë°®ËææÂºèÂèäÂÖ∂‰π¶ÂÜôËßÑÂæãÊòæÁ§∫ËøáÊª§Âô®‰ºöÂú®WireSharkÊçïËé∑Êï∞ÊçÆÂåÖ‰πãÂêéÔºåÊåâÁÖßËøáÊª§Ë°®ËææÁöÑÊù°‰ª∂ÔºåÊúâÈÄâÊã©ÊÄßÂú∞ÊòæÁ§∫Â∑≤ÁªèÊçïËé∑ÁöÑÊâÄÊúâÊï∞ÊçÆÂåÖ„ÄÇ 3.1. Âü∫Êú¨ËøáÊª§Ë°®ËææÂºè‰∏Ä‰∏™Âü∫Êú¨ÁöÑË°®ËææÂºèÁî±ËøáÊª§È°π„ÄÅËøáÊª§ÂÖ≥Á≥ª„ÄÅËøáÊª§ÂÄº‰∏â‰∏™ÈÉ®ÂàÜÁªÑÊàê„ÄÇ ÊØîÂ¶Çip.addr == 192.168.1.1ËøôÊù°Ë°®ËææÂºè ip.addrÊòØËøáÊª§È°π == ÊòØËøáÊª§ÂÖ≥Á≥ª 192.168.1.1ÊòØËøáÊª§ÂÄº Ë°®ËææÂºèÁöÑÊÑèÊÄù‰∏∫ÊâæÂá∫ÊâÄÊúâipÂçèËÆÆ‰∏≠Ê∫êÊàñÁõÆÊ†áÂú∞ÂùÄ‰∏∫192.168.1.1ÁöÑÊï∞ÊçÆÂåÖ„ÄÇ 3.1.1. ËøáÊª§È°π==ËøáÊª§È°π = ÂçèËÆÆ + ÂçèËÆÆÂ≠óÊÆµ== ‰ª•Á´ØÂè£‰∏∫‰æãÔºåÁ´ØÂè£Âá∫Áé∞‰∫étcpÂçèËÆÆ‰∏≠ÊâÄ‰ª•ÊúâÁ´ØÂè£Ëøô‰∏™ËøáÊª§È°π‰∏îÂÖ∂ÂÜôÊ≥ïÂ∞±ÊòØtcp.port„ÄÇ ÂΩìÂú®Â∫îÁî®ËøáÊª§ÊòæÁ§∫Âô®‰∏≠ËæìÂÖ•Êó∂Ôºå‰ºöÊúâÁõ∏Â∫îÁöÑÊèêÁ§∫„ÄÇ 3.1.2. ËøáÊª§ÂÖ≥Á≥ªËøáÊª§ÂÖ≥Á≥ªÂèØ‰ª•‰ΩøÁî®‚ÄúEnglish‚ÄùÂíå‚ÄúC-like‚Äù‰∏§ÁßçÊñπÂºèÔºå‰æãÂ¶Ç‚Äú==‚ÄùÂèØ‰ª•ÂÜô‰Ωú‚Äúeq‚Äù„ÄÇ 3.1.3 ËøáÊª§ÂÄº‰∏çËß£Èáä„ÄÇ ###3.2. Â§çÂêàËßÑÂæãË°®ËææÂºè English C-like Description Example and &amp;&amp; Logical AND ip.src==10.0.0.5 and tcp.flags.fin or || Logical OR ip.scr==10.0.0.5 or ip.src==192.1.1.1 xor ^^ Logical XOR tr.dst[0:3] == 0.6.29 xor tr.src[0:3] == 0.6.29 not ! Logical NOT not llc [‚Ä¶] Subsequence See ‚ÄúSlice Operator‚Äù below. in Set Membership http.request.method in {&quot;HEAD&quot; &quot;GET&quot;}. See ‚ÄúMembership Operator‚Äù below. 3.3. Â∏∏ËßÅÁî®ÊòæÁ§∫ËøáÊª§ÈúÄÊ±ÇÂèäÂÖ∂ÂØπÂ∫îË°®ËææÂºèÊï∞ÊçÆÈìæË∑ØÂ±ÇÔºö Á≠õÈÄâmacÂú∞ÂùÄ‰∏∫04:f9:38:ad:13:26ÁöÑÊï∞ÊçÆÂåÖ‚Äî-eth.src == 04:f9:38:ad:13:26 Á≠õÈÄâÊ∫êmacÂú∞ÂùÄ‰∏∫04:f9:38:ad:13:26ÁöÑÊï∞ÊçÆÂåÖ‚Äî-eth.src == 04:f9:38:ad:13:26 ÁΩëÁªúÂ±ÇÔºö Á≠õÈÄâipÂú∞ÂùÄ‰∏∫192.168.1.1ÁöÑÊï∞ÊçÆÂåÖ‚Äî-ip.addr == 192.168.1.1 Á≠õÈÄâ192.168.1.0ÁΩëÊÆµÁöÑÊï∞ÊçÆ‚Äî- ip contains ‚Äú192.168.1‚Äù Á≠õÈÄâ192.168.1.1Âíå192.168.1.2‰πãÈó¥ÁöÑÊï∞ÊçÆÂåÖ‚Äî-ip.addr == 192.168.1.1 &amp;&amp; ip.addr == 192.168.1.2 Á≠õÈÄâ‰ªé192.168.1.1Âà∞192.168.1.2ÁöÑÊï∞ÊçÆÂåÖ‚Äî-ip.src == 192.168.1.1 &amp;&amp; ip.dst == 192.168.1.2 ‰º†ËæìÂ±ÇÔºö Á≠õÈÄâtcpÂçèËÆÆÁöÑÊï∞ÊçÆÂåÖ‚Äî-tcp Á≠õÈÄâÈô§tcpÂçèËÆÆ‰ª•Â§ñÁöÑÊï∞ÊçÆÂåÖ‚Äî-!tcp Á≠õÈÄâÁ´ØÂè£‰∏∫80ÁöÑÊï∞ÊçÆÂåÖ‚Äî-tcp.port == 80 Á≠õÈÄâ12345Á´ØÂè£Âíå80Á´ØÂè£‰πãÈó¥ÁöÑÊï∞ÊçÆÂåÖ‚Äî-tcp.port == 12345 &amp;&amp; tcp.port == 80 Á≠õÈÄâ‰ªé12345Á´ØÂè£Âà∞80Á´ØÂè£ÁöÑÊï∞ÊçÆÂåÖ‚Äî-tcp.srcport == 12345 &amp;&amp; tcp.dstport == 80 Â∫îÁî®Â±ÇÔºö ÁâπÂà´ËØ¥Êòé‚Äî-http‰∏≠http.requestË°®Á§∫ËØ∑Ê±ÇÂ§¥‰∏≠ÁöÑÁ¨¨‰∏ÄË°åÔºàÂ¶ÇGET index.jsp HTTP/1.1ÔºâÔºåhttp.responseË°®Á§∫ÂìçÂ∫îÂ§¥‰∏≠ÁöÑÁ¨¨‰∏ÄË°åÔºàÂ¶ÇHTTP/1.1 200 OKÔºâÔºåÂÖ∂‰ªñÂ§¥ÈÉ®ÈÉΩÁî®http.header_nameÂΩ¢Âºè„ÄÇ Á≠õÈÄâurl‰∏≠ÂåÖÂê´.phpÁöÑhttpÊï∞ÊçÆÂåÖ‚Äî-http.request.uri contains ‚Äú.php‚Äù Á≠õÈÄâÂÜÖÂÆπÂåÖÂê´usernameÁöÑhttpÊï∞ÊçÆÂåÖ‚Äî-http contains ‚Äúusername‚Äù]]></content>
      <categories>
        <category>ËÆ°ÁÆóÊú∫ÁΩëÁªú</category>
        <category>WireShark</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ÁΩëÁªú</tag>
        <tag>WireShark</tag>
      </tags>
  </entry>
</search>
